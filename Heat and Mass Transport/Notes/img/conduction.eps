%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: A91us5vxn_1x3uuk5_l1c.tmp.pdf
%%Creator: Adobe Acrobat 20.5.0
%%For: lbing
%%CreationDate: 20/07/2023, 10:15:56
%%BoundingBox: 0 0 343 149
%%HiResBoundingBox: 0 0 342.2545 148.3636
%%CropBox: 0 0 342.2545 148.3636
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 848 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c018 91.98c2f96, 2021/06/15-20:39:32        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2023-07-20T10:15:02+01:00"
   xmp:CreateDate="2023-07-20T10:15:02+01:00"
   xmp:MetadataDate="2023-07-20T10:15:02+01:00"
   xmp:CreatorTool="Adobe Acrobat Pro 2020 20.5.30467"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:20904611-8865-4303-843a-98e997435df8"
   xmpMM:InstanceID="uuid:d3452e63-0938-455a-a805-66bd4b9b2abb"
   pdf:Producer="Adobe Acrobat Pro 2020 20.5.30467"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/Name (PANTONE 193 CV)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/ColorLookup [
[0 0 0 0][0 .00390619 .00390619 0][0 .00781238 .00392157 0][0 .0117186 .007797 0]
[0 .0156248 .0117032 0][0 .019531 .0117647 .00384468][0 .0196078 .015594 .00392157][0 .0234218 .0195002 .00392157]
[0 .027328 .0196078 .00392157][0 .0312341 .023391 .00392157][0 .0351403 .0272972 .00392157][0 .0390465 .027451 .00392157]
[0 .0429527 .031188 .00392157][0 .0468589 .0313726 .00764321][0 .0507651 .0350788 .00784314][0 .0546713 .038985 .00784314]
[0 .0585775 .0392157 .00784314][0 .0624837 .0428758 .00784314][0 .0627451 .046782 .00784314][0 .0663745 .0470588 .00784314]
[0 .0702807 .0506728 .00784314][0 .0741869 .054579 .00784314][0 .078093 .054902 .0114264][0 .0819992 .0584698 .0117647]
[0 .0859054 .062376 .0117647][0 .0898116 .0627451 .0117647][0 .0937178 .0662668 .0117647][0 .097624 .070173 .0117647]
[0 .10153 .0705882 .0117647][0 .101961 .0740638 .0117647][0 .105421 .07797 .0117647][0 .109327 .0784314 .0152095]
[0 .113233 .0818608 .0156863][0 .11714 .085767 .0156863][0 .121046 .0862745 .0156863][0 .124952 .0896578 .0156863]
[0 .128858 .0901961 .0156863][0 .132764 .0935486 .0156863][0 .136671 .0974548 .0156863][0 .140577 .0980392 .0190081]
[0 .144483 .101346 .0196078][0 .145098 .105252 .0196078][0 .148374 .105882 .0196078][0 .15228 .109143 .0196078]
[0 .156186 .113049 .0196078][0 .160092 .113725 .0196078][0 .163998 .11694 .0196078][0 .167905 .120846 .0196078]
[0 .171811 .121569 .0227912][0 .175717 .124737 .0235294][0 .179623 .128643 .0235294][0 .183529 .129412 .0235294]
[0 .187436 .132534 .0235294][0 .188235 .13644 .0235294][0 .191326 .137255 .0235294][0 .195233 .140331 .0235294]
[0 .199139 .144237 .0235294][0 .203045 .145098 .0265744][0 .206951 .148128 .027451][0 .210857 .152034 .027451]
[0 .214764 .152941 .027451][0 .21867 .155925 .027451][0 .222576 .156863 .027451][0 .226482 .159815 .027451]
[0 .227451 .163722 .027451][0 .230373 .164706 .0303729][0 .234279 .167612 .0313726][0 .238185 .171519 .0313726]
[0 .242092 .172549 .0313726][0 .245998 .175409 .0313726][0 .249904 .179316 .0313726][0 .25381 .180392 .0313726]
[0 .257716 .183206 .0313726][0 .261622 .187113 .0313726][0 .265529 .188235 .0341561][0 .269435 .191003 .0352941]
[0 .270588 .19491 .0352941][0 .273326 .196078 .0352941][0 .277232 .1988 .0352941][0 .281138 .202707 .0352941]
[0 .285044 .203922 .0352941][0 .28895 .206597 .0352941][0 .292857 .210504 .0352941][0 .296763 .211765 .0379393]
[0 .300669 .214394 .0392157][0 .304575 .215686 .0392157][0 .308481 .218285 .0392157][0 .309804 .222191 .0392157]
[0 .312372 .223529 .0392157][0 .316278 .226082 .0392157][0 .320185 .229988 .0392157][0 .324091 .231373 .0417378]
[0 .327997 .233879 .0431373][0 .331903 .237785 .0431373][0 .335809 .239216 .0431373][0 .339716 .241676 .0431373]
[0 .343622 .245582 .0431373][0 .347528 .247059 .0431373][0 .351434 .249473 .0431373][0 .352941 .253379 .0431373]
[0 .355325 .254902 .0455209][0 .359231 .25727 .0470588][0 .363137 .261176 .0470588][0 .367043 .262745 .0470588]
[0 .37095 .265067 .0470588][0 .374856 .268973 .0470588][0 .378762 .270588 .0470588][0 .382668 .272864 .0470588]
[0 .386574 .27451 .0470588][0 .390481 .276755 .0493041][0 .392157 .280661 .0509804][0 .394371 .282353 .0509804]
[0 .398278 .284552 .0509804][0 .402184 .288458 .0509804][0 .40609 .290196 .0509804][0 .409996 .292349 .0509804]
[0 .413902 .296255 .0509804][0 .417809 .298039 .0531026][0 .421715 .300146 .054902][0 .425621 .304052 .054902]
[0 .429527 .305882 .054902][0 .433433 .307943 .054902][0 .435294 .311849 .054902][0 .437324 .313726 .054902]
[0 .44123 .31574 .054902][0 .445136 .319646 .054902][0 .449043 .321569 .0568858][0 .452949 .323537 .0588235]
[0 .456855 .327443 .0588235][0 .460761 .329412 .0588235][0 .464667 .331334 .0588235][0 .468574 .333333 .0588235]
[0 .47248 .335225 .0588235][0 .476386 .339131 .0588235][0 .478431 .341176 .0588235][0 .480277 .343022 .060669]
[0 .484183 .346928 .0627451][0 .488089 .34902 .0627451][0 .491995 .350819 .0627451][0 .495902 .354725 .0627451]
[0 .499808 .356863 .0627451][0 .503714 .358616 .0627451][0 .50762 .362522 .0627451][0 .511526 .364706 .0644675]
[0 .515433 .366413 .0666667][0 .517647 .370319 .0666667][0 .519323 .372549 .0666667][0 .52323 .37421 .0666667]
[0 .527136 .378116 .0666667][0 .531042 .380392 .0666667][0 .534948 .382007 .0666667][0 .538854 .385913 .0666667]
[0 .54276 .388235 .0682507][0 .546667 .389804 .0705882][0 .550573 .392157 .0705882][0 .554479 .393695 .0705882]
[0 .558385 .397601 .0705882][0 .560784 .4 .0705882][0 .562276 .401492 .0705882][0 .566182 .405398 .0705882]
[0 .570088 .407843 .0705882][0 .573995 .409289 .0720339][0 .577901 .413195 .0745098][0 .581807 .415686 .0745098]
[0 .585713 .417086 .0745098][0 .589619 .420992 .0745098][0 .593526 .423529 .0745098][0 .597432 .424883 .0745098]
[0 .6 .428789 .0745098][0 .601323 .431373 .0758324][0 .605229 .43268 .0784314][0 .609135 .436586 .0784314]
[0 .613041 .439216 .0784314][0 .616947 .440477 .0784314][0 .620854 .444383 .0784314][0 .62476 .447059 .0784314]
[0 .628666 .448274 .0784314][0 .632572 .45218 .0784314][0 .636478 .454902 .0796156][0 .640384 .456071 .0823529]
[0 .643137 .458824 .0823529][0 .644275 .459962 .0823529][0 .648181 .463868 .0823529][0 .652088 .466667 .0823529]
[0 .655994 .467759 .0823529][0 .6599 .471665 .0823529][0 .663806 .47451 .0823529][0 .667712 .475556 .0833987]
[0 .671619 .479462 .0862745][0 .675525 .482353 .0862745][0 .679431 .483353 .0862745][0 .682353 .487259 .0862745]
[0 .683322 .490196 .0862745][0 .687228 .49115 .0862745][0 .691134 .495056 .0862745][0 .69504 .498039 .0871972]
[0 .698947 .498947 .0901961][0 .702853 .502853 .0901961][0 .706759 .505882 .0901961][0 .710665 .506744 .0901961]
[0 .714571 .51065 .0901961][0 .718477 .513726 .0901961][0 .722384 .514541 .0901961][0 .72549 .517647 .0901961]
[0 .726274 .518431 .0909804][0 .730181 .522338 .0941176][0 .734087 .52549 .0941176][0 .737993 .526228 .0941176]
[0 .741899 .530135 .0941176][0 .745805 .533333 .0941176][0 .749712 .534025 .0941176][0 .753618 .537932 .0941176]
[0 .757524 .541176 .0941176][0 .76143 .541822 .0947635][0 .765336 .545729 .0980392][0 .768627 .54902 .0980392]
[0 .769227 .549619 .0980392][0 .773133 .553526 .0980392][0 .77704 .556863 .0980392][0 .780946 .557416 .0980392]
[0 .784852 .561323 .0980392][0 .788758 .564706 .0985621][0 .792664 .565213 .101961][0 .796571 .56912 .101961]
[0 .800477 .572549 .101961][0 .804383 .57301 .101961][0 .807843 .576471 .101961][0 .808274 .576901 .101961]
[0 .81218 .580807 .101961][0 .816086 .584314 .101961][0 .819992 .584698 .102345][0 .823898 .588604 .105882]
[0 .827805 .592157 .105882][0 .831711 .592495 .105882][0 .835617 .596401 .105882][0 .839523 .6 .105882]
[0 .843429 .600292 .105882][0 .847336 .604198 .105882][0 .85098 .607843 .105882][0 .851226 .608089 .106128]
[0 .855133 .611995 .109804][0 .859039 .615686 .109804][0 .862945 .615886 .109804][0 .866851 .619792 .109804]
[0 .870757 .623529 .109804][0 .874664 .623683 .109804][0 .87857 .627589 .109804][0 .882476 .631373 .109927]
[0 .886382 .63148 .113725][0 .890196 .635294 .113725][0 .890273 .635371 .113725][0 .894179 .639277 .113725]
[0 .898085 .643137 .113725][0 .901992 .643168 .113725][0 .905898 .647074 .113725][0 .909804 .65098 .113725]
]
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -148.364 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 148.364 li
342.255 148.364 li
342.255 0 li
cp
clp
-3.33694 152.518 mo
345.653 152.518 li
345.653 .397614 li
-3.33694 .397614 li
cp
true sop
0 0 0 0 nzopmsc
f
92.2181 141.674 mo
312.342 141.674 li
312.342 8.95062 li
92.2181 8.95062 li
cp
false sop
/1 
<<
/Name (Black)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
.1 sep
f
3 setflat
202.28 75.3116 mo
f
1 setflat
3 setflat
92.2181 145.951 mo
312.342 145.951 li
312.342 141.674 li
92.2181 141.674 li
cp
1 /0 /CSD get_res sepcs
.1 sep
f
1 setflat
3 setflat
92.2181 8.95062 mo
312.342 8.95062 li
312.342 4.67358 li
92.2181 4.67358 li
cp
1 /0 /CSD get_res sepcs
.4 sep
f
1 setflat
3 setflat
true sop
1 /1 /CSD get_res sepcs
1 sep
%%IncludeResource: font BFLGAB+Times-Italic
/ZNINMZ+Times-Italic /BFLGAB+Times-Italic findfont ct_VMDictPut
/ZNINMZ+Times-Italic*1 
[120{/.notdef}rp /x 135{/.notdef}rp]
ZNINMZ+Times-Italic nf
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
2.84363 77.4505 mo
(x)sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
2.84363 77.4505 mo
(x) false chp
.214 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
@
%%IncludeResource: font BFLGAB+Times-Italic
/ZNINMZ+Times-Italic*1 
[111{/.notdef}rp /o 8{/.notdef}rp /x 135{/.notdef}rp]
ZNINMZ+Times-Italic nf
ZNINMZ+Times-Italic*1 [5 0 0 -5 0 0 ]msf
6.17363 79.4505 mo
(o)sh
ZNINMZ+Times-Italic*1 [5 0 0 -5 0 0 ]msf
6.17363 79.4505 mo
(o) false chp
.143 lw
@
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
6.25963 139.783 mo
(x)sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
6.25963 139.783 mo
(x) false chp
.214 lw
@
%%IncludeResource: font BFLGAB+Times-Italic
/ZNINMZ+Times-Italic*1 
[84{/.notdef}rp /T 26{/.notdef}rp /o 8{/.notdef}rp /x 135{/.notdef}rp]
ZNINMZ+Times-Italic nf
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
77.8396 11.4515 mo
(T)sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
77.8396 11.4515 mo
(T) false chp
@
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
315.838 144.621 mo
(T)sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
315.838 144.621 mo
(T) false chp
@
%ADOBeginSubsetFont: GAAAAA+TradeGothic Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /GAAAAA+TradeGothic def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Trade Gothic is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (TradeGothic) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
def
/UniqueID 526877 def
/FontBBox {-167 -224 1000 960} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 0 722 732 520 530] def
/OtherBlues [286 292 408 414 -192 -192] def
/BlueScale 0.0562916 def
/StdVW [72] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/two <1C60D8A8C9B7D8BE6A16EB6F26215E3460D9BD553069FBCE3D662EB4B0
33EC1E293A52834839B8C8514D60BE86370A06DBB3EF6ED80F53DE8BAE1E836F
1D502D95C0DF09545D0B1E5CF33471EDCC2A7D2A4E7EB0884476D1> |-
/.notdef <1C60D8A8C9B83BB89A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ZNINNA+TradeGothic /GAAAAA+TradeGothic findfont ct_VMDictPut
/ZNINNA+TradeGothic*1 
[50{/.notdef}rp /two 205{/.notdef}rp]
ZNINNA+TradeGothic nf
ZNINNA+TradeGothic*1 [5 0 0 -5 0 0 ]msf
320.008 146.617 mo
(2)sh
ZNINNA+TradeGothic*1 [5 0 0 -5 0 0 ]msf
320.008 146.617 mo
(2) false chp
.143 lw
@
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
315.843 12.1175 mo
(T)sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
315.843 12.1175 mo
(T) false chp
.214 lw
@
%ADOBeginSubsetFont: GAAAAA+TradeGothic AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
ZNINNA+TradeGothic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7D8BE6A16EB6EA25D4E089C590D9B7881D3E9C27DB0133A
B45CC9CDC1FCE4323F9FF09E6247DC742E7A7D7395CE295B809B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZNINNA+TradeGothic /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ZNINNA+TradeGothic*1 
[49{/.notdef}rp /one /two 205{/.notdef}rp]
ZNINNA+TradeGothic nf
ZNINNA+TradeGothic*1 [5 0 0 -5 0 0 ]msf
320.013 14.1175 mo
(1)sh
ZNINNA+TradeGothic*1 [5 0 0 -5 0 0 ]msf
320.013 14.1175 mo
(1) false chp
.143 lw
@
%ADOBeginSubsetFont: GAAAAA+TradeGothic AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
ZNINNA+TradeGothic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B83BB89A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZNINNA+TradeGothic /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/ZNINNA+TradeGothic*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two 205{/.notdef}rp]
ZNINNA+TradeGothic nf
ZNINNA+TradeGothic*1 [7.5 0 0 -7.5 0 0 ]msf
323.068 12.1175 mo
( )sh
ZNINNA+TradeGothic*1 [7.5 0 0 -7.5 0 0 ]msf
323.068 12.1175 mo
( ) false chp
.214 lw
@
%ADOBeginSubsetFont: GAAAAA+TradeGothic AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
ZNINNA+TradeGothic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/greater <1C60D8A8C9B7C3C9B5778CA731CAD16A384D4E61D577EC8915BA2D
0B84774F6E6693925ED26562832C2053A08F00EC4A5E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZNINNA+TradeGothic /Encoding get
dup 62 /greater put
pop
%ADOEndSubsetFont
/ZNINNA+TradeGothic*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two 11{/.notdef}rp /greater 193{/.notdef}rp]
ZNINNA+TradeGothic nf
ZNINNA+TradeGothic*1 [7.5 0 0 -7.5 0 0 ]msf
325.355 12.1175 mo
(>)sh
ZNINNA+TradeGothic*1 [7.5 0 0 -7.5 0 0 ]msf
325.355 12.1175 mo
(>) false chp
@
ZNINNA+TradeGothic*1 [7.5 0 0 -7.5 0 0 ]msf
329.855 12.1175 mo
( )sh
ZNINNA+TradeGothic*1 [7.5 0 0 -7.5 0 0 ]msf
329.855 12.1175 mo
( ) false chp
@
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
332.143 12.1172 mo
(T)sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
332.143 12.1172 mo
(T) false chp
@
ZNINNA+TradeGothic*1 [5 0 0 -5 0 0 ]msf
336.313 14.1172 mo
(2)sh
ZNINNA+TradeGothic*1 [5 0 0 -5 0 0 ]msf
336.313 14.1172 mo
(2) false chp
.143 lw
@
.5 lw
1 lj
4 ml
[4 2 ] 0 dsh
13.843 75.5126 mo
46.343 75.5126 li
@
.9 lw
[] 0 dsh
56.843 8.95056 mo
44.843 31.4506 26.843 99.4506 22.343 140.451 cv
1 /0 /CSD get_res sepcs
1 sep
@
56.843 8.95056 mo
44.843 31.4506 26.843 99.4506 22.343 140.451 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
@
49.3431 8.95062 mo
62.8431 8.95062 li
62.8431 4.45062 li
49.3431 4.45062 li
cp
1 /1 /CSD get_res sepcs
0 sep
f
.75 lw
0 lj
50.843 64.7276 mo
50.843 86.0756 li
true sop
1 /0 /CSD get_res sepcs
1 sep
@
50.843 89.4506 mo
49.343 85.1306 li
50.843 85.8506 li
52.343 85.1306 li
50.843 89.4506 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
50.843 89.4506 mo
49.343 85.1306 li
50.843 85.8506 li
52.343 85.1306 li
50.843 89.4506 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
50.843 64.7276 mo
50.843 86.0756 li
@
1 /1 /CSD get_res sepcs
1 sep
%%IncludeResource: font BFLGAB+Times-Italic
/ZNINMZ+Times-Italic*1 
[84{/.notdef}rp /T 26{/.notdef}rp /o /.notdef /q 6{/.notdef}rp /x 
135{/.notdef}rp]
ZNINMZ+Times-Italic nf
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
55.0616 76.8125 mo
(q)sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
55.0616 76.8125 mo
(q) false chp
.214 lw
@
%%IncludeResource: font BFLGAB+Times-Italic
/ZNINMZ+Times-Italic*1 
[34{/.notdef}rp /quotedbl 49{/.notdef}rp /T 26{/.notdef}rp /o /.notdef /q 
6{/.notdef}rp /x 135{/.notdef}rp]
ZNINMZ+Times-Italic nf
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
58.8116 76.8125 mo
(")sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
58.8116 76.8125 mo
(") false chp
@
ZNINMZ+Times-Italic*1 [5 0 0 -5 0 0 ]msf
58.9616 78.8125 mo
(x)sh
ZNINMZ+Times-Italic*1 [5 0 0 -5 0 0 ]msf
58.9616 78.8125 mo
(x) false chp
.143 lw
@
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
316.062 76.8125 mo
(q)sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
316.062 76.8125 mo
(q) false chp
.214 lw
@
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
319.812 76.8125 mo
(")sh
ZNINMZ+Times-Italic*1 [7.5 0 0 -7.5 0 0 ]msf
319.812 76.8125 mo
(") false chp
@
ZNINMZ+Times-Italic*1 [5 0 0 -5 0 0 ]msf
319.962 78.8125 mo
(x)sh
ZNINMZ+Times-Italic*1 [5 0 0 -5 0 0 ]msf
319.962 78.8125 mo
(x) false chp
.143 lw
@
.5 lw
13.843 137.351 mo
13.843 8.95062 li
72.243 8.95062 li
92.218 8.95062 mo
312.509 8.95062 li
92.218 141.701 mo
312.509 141.701 li
@
1 lj
[4 2 ] 0 dsh
92.218 75.4506 mo
307.509 75.4506 li
@
.75 lw
0 lj
[] 0 dsh
148.718 29.3876 mo
139.968 29.3876 li
1 /0 /CSD get_res sepcs
1 sep
@
136.593 29.3876 mo
140.914 27.8876 li
140.193 29.3876 li
140.914 30.8876 li
136.593 29.3876 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
136.593 29.3876 mo
140.914 27.8876 li
140.193 29.3876 li
140.914 30.8876 li
136.593 29.3876 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
148.718 29.3876 mo
139.968 29.3876 li
@
.75 lw
116.01 126.951 mo
107.26 126.951 li
@
103.885 126.951 mo
108.205 125.451 li
107.485 126.951 li
108.205 128.451 li
103.885 126.951 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
103.885 126.951 mo
108.205 125.451 li
107.485 126.951 li
108.205 128.451 li
103.885 126.951 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
116.01 126.951 mo
107.26 126.951 li
@
.75 lw
139.01 107.617 mo
147.76 107.617 li
@
151.135 107.617 mo
146.815 109.117 li
147.535 107.617 li
146.815 106.117 li
151.135 107.617 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
151.135 107.617 mo
146.815 109.117 li
147.535 107.617 li
146.815 106.117 li
151.135 107.617 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
139.01 107.617 mo
147.76 107.617 li
@
.75 lw
212.343 134.284 mo
221.093 134.284 li
@
224.468 134.284 mo
220.147 135.784 li
220.868 134.284 li
220.147 132.784 li
224.468 134.284 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
224.468 134.284 mo
220.147 135.784 li
220.868 134.284 li
220.147 132.784 li
224.468 134.284 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
212.343 134.284 mo
221.093 134.284 li
@
.75 lw
179.443 21.9256 mo
185.63 28.1126 li
@
188.016 30.4986 mo
183.901 28.5046 li
185.472 27.9536 li
186.022 26.3836 li
188.016 30.4986 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
188.016 30.4986 mo
183.901 28.5046 li
185.472 27.9536 li
186.022 26.3836 li
188.016 30.4986 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
179.443 21.9256 mo
185.63 28.1126 li
@
.75 lw
203.214 20.5776 mo
210.39 25.5836 li
@
213.157 27.5146 mo
208.757 26.2736 li
210.205 25.4556 li
210.473 23.8126 li
213.157 27.5146 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
213.157 27.5146 mo
208.757 26.2736 li
210.205 25.4556 li
210.473 23.8126 li
213.157 27.5146 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
203.214 20.5776 mo
210.39 25.5836 li
@
.75 lw
223.151 18.1346 mo
215.081 14.7546 li
@
211.968 13.4506 mo
216.532 13.7355 li
215.289 14.8416 li
215.374 16.5026 li
211.968 13.4506 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
211.968 13.4506 mo
216.532 13.7355 li
215.289 14.8416 li
215.374 16.5026 li
211.968 13.4506 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
223.151 18.1346 mo
215.081 14.7546 li
@
.75 lw
241.058 40.5836 mo
246.522 47.4176 li
@
248.63 50.0536 mo
244.761 47.6166 li
246.382 47.2416 li
247.103 45.7426 li
248.63 50.0536 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
248.63 50.0536 mo
244.761 47.6166 li
246.382 47.2416 li
247.103 45.7426 li
248.63 50.0536 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
241.058 40.5836 mo
246.522 47.4176 li
@
.75 lw
162.251 61.5836 mo
159.905 53.1546 li
@
158.999 49.9026 mo
161.603 53.6626 li
159.965 53.3716 li
158.713 54.4666 li
158.999 49.9026 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
158.999 49.9026 mo
161.603 53.6626 li
159.965 53.3716 li
158.713 54.4666 li
158.999 49.9026 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
162.251 61.5836 mo
159.905 53.1546 li
@
.75 lw
132.992 51.2886 mo
137.567 58.7466 li
@
139.332 61.6236 mo
135.794 58.7256 li
137.45 58.5546 li
138.352 57.1566 li
139.332 61.6236 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
139.332 61.6236 mo
135.794 58.7256 li
137.45 58.5546 li
138.352 57.1566 li
139.332 61.6236 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
132.992 51.2886 mo
137.567 58.7466 li
@
.75 lw
126.631 81.6186 mo
122.997 73.6586 li
@
121.596 70.5886 mo
124.754 73.8956 li
123.091 73.8636 li
122.025 75.1416 li
121.596 70.5886 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
121.596 70.5886 mo
124.754 73.8956 li
123.091 73.8636 li
122.025 75.1416 li
121.596 70.5886 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
126.631 81.6186 mo
122.997 73.6586 li
@
.75 lw
196.057 89.7646 mo
192.423 81.8046 li
@
191.021 78.7336 mo
194.181 82.0406 li
192.516 82.0096 li
191.45 83.2866 li
191.021 78.7336 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
191.021 78.7336 mo
194.181 82.0406 li
192.516 82.0096 li
191.45 83.2866 li
191.021 78.7336 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
196.057 89.7646 mo
192.423 81.8046 li
@
.75 lw
158.866 90.8996 mo
156.091 82.6016 li
@
155.021 79.4006 mo
157.813 83.0226 li
156.163 82.8156 li
154.968 83.9745 li
155.021 79.4006 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
155.021 79.4006 mo
157.813 83.0226 li
156.163 82.8156 li
154.968 83.9745 li
155.021 79.4006 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
158.866 90.8996 mo
156.091 82.6016 li
@
.75 lw
108.022 98.7166 mo
101.199 93.2376 li
@
98.567 91.1256 mo
102.875 92.6596 li
101.374 93.3796 li
100.997 94.9996 li
98.567 91.1256 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
98.567 91.1256 mo
102.875 92.6596 li
101.374 93.3796 li
100.997 94.9996 li
98.567 91.1256 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
108.022 98.7166 mo
101.199 93.2376 li
@
.75 lw
226.175 109.675 mo
220.333 103.16 li
@
218.081 100.646 mo
222.081 102.861 li
220.483 103.327 li
219.848 104.864 li
218.081 100.646 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
218.081 100.646 mo
222.081 102.861 li
220.483 103.327 li
219.848 104.864 li
218.081 100.646 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
226.175 109.675 mo
220.333 103.16 li
@
.75 lw
252.326 122.255 mo
255.19 130.521 li
@
256.296 133.711 mo
253.464 130.12 li
255.117 130.31 li
256.299 129.139 li
256.296 133.711 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
256.296 133.711 mo
253.464 130.12 li
255.117 130.31 li
256.299 129.139 li
256.296 133.711 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
252.326 122.255 mo
255.19 130.521 li
@
.75 lw
192.976 116.784 mo
198.413 123.641 li
@
200.51 126.284 mo
196.65 123.832 li
198.272 123.464 li
199.001 121.968 li
200.51 126.284 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
200.51 126.284 mo
196.65 123.832 li
198.272 123.464 li
199.001 121.968 li
200.51 126.284 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
192.976 116.784 mo
198.413 123.641 li
@
.75 lw
104.952 113.67 mo
112.714 109.633 li
@
115.708 108.076 mo
112.568 111.4 li
112.515 109.736 li
111.184 108.738 li
115.708 108.076 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
115.708 108.076 mo
112.568 111.4 li
112.515 109.736 li
111.184 108.738 li
115.708 108.076 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
104.952 113.67 mo
112.714 109.633 li
@
.75 lw
125.003 22.6016 mo
133.704 21.6725 li
@
137.06 21.3146 mo
132.923 23.2646 li
133.479 21.6966 li
132.604 20.2816 li
137.06 21.3146 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
137.06 21.3146 mo
132.923 23.2646 li
133.479 21.6966 li
132.604 20.2816 li
137.06 21.3146 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
125.003 22.6016 mo
133.704 21.6725 li
@
121.151 19.4926 mo
119.229 19.6976 117.837 21.4216 118.042 23.3436 cv
118.247 25.2656 119.972 26.6576 121.894 26.4526 cv
123.816 26.2476 125.208 24.5226 125.003 22.6016 cv
124.798 20.6796 123.073 19.2876 121.151 19.4926 cv
cp
false sop
1 /0 /CSD get_res sepcs
.85 sep
f
.75 lw
121.151 19.4926 mo
119.229 19.6976 117.837 21.4216 118.042 23.3436 cv
118.247 25.2656 119.972 26.6576 121.894 26.4526 cv
123.816 26.2476 125.208 24.5226 125.003 22.6016 cv
124.798 20.6796 123.073 19.2876 121.151 19.4926 cv
cp
@
278.378 65.4506 mo
283.843 72.2836 li
true sop
1 /0 /CSD get_res sepcs
1 sep
@
285.95 74.9196 mo
282.081 72.4826 li
283.702 72.1076 li
284.425 70.6086 li
285.95 74.9196 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
285.95 74.9196 mo
282.081 72.4826 li
283.702 72.1076 li
284.425 70.6086 li
285.95 74.9196 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
278.378 65.4506 mo
283.843 72.2836 li
@
.75 lw
289.597 45.1326 mo
293.132 53.1376 li
@
294.495 56.2246 mo
291.378 52.8786 li
293.04 52.9316 li
294.122 51.6666 li
294.495 56.2246 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
294.495 56.2246 mo
291.378 52.8786 li
293.04 52.9316 li
294.122 51.6666 li
294.495 56.2246 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
289.597 45.1326 mo
293.132 53.1376 li
@
.75 lw
224.591 55.8166 mo
228.124 63.8216 li
@
229.487 66.9096 mo
226.37 63.5626 li
228.032 63.6156 li
229.114 62.3516 li
229.487 66.9096 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
229.487 66.9096 mo
226.37 63.5626 li
228.032 63.6156 li
229.114 62.3516 li
229.487 66.9096 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
224.591 55.8166 mo
228.124 63.8216 li
@
.75 lw
201.843 47.8256 mo
201.843 56.5756 li
@
201.843 59.9506 mo
200.343 55.6306 li
201.843 56.3506 li
203.343 55.6306 li
201.843 59.9506 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
201.843 59.9506 mo
200.343 55.6306 li
201.843 56.3506 li
203.343 55.6306 li
201.843 59.9506 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
201.843 47.8256 mo
201.843 56.5756 li
@
.75 lw
178.51 93.1166 mo
178.51 101.867 li
@
178.51 105.242 mo
177.01 100.922 li
178.51 101.643 li
180.01 100.922 li
178.51 105.242 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
178.51 105.242 mo
177.01 100.922 li
178.51 101.643 li
180.01 100.922 li
178.51 105.242 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
178.51 93.1166 mo
178.51 101.867 li
@
.75 lw
164.177 119.451 mo
164.177 128.201 li
@
164.177 131.576 mo
162.677 127.256 li
164.177 127.976 li
165.677 127.256 li
164.177 131.576 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
164.177 131.576 mo
162.677 127.256 li
164.177 127.976 li
165.677 127.256 li
164.177 131.576 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
164.177 119.451 mo
164.177 128.201 li
@
.75 lw
287.843 121.451 mo
287.843 112.701 li
@
287.843 109.326 mo
289.343 113.646 li
287.843 112.926 li
286.343 113.646 li
287.843 109.326 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
287.843 109.326 mo
289.343 113.646 li
287.843 112.926 li
286.343 113.646 li
287.843 109.326 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
287.843 121.451 mo
287.843 112.701 li
@
.75 lw
267.509 102.451 mo
267.509 93.7006 li
@
267.509 90.3256 mo
269.009 94.6456 li
267.509 93.9255 li
266.009 94.6456 li
267.509 90.3256 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
267.509 90.3256 mo
269.009 94.6456 li
267.509 93.9255 li
266.009 94.6456 li
267.509 90.3256 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
267.509 102.451 mo
267.509 93.7006 li
@
.75 lw
298.165 86.5436 mo
300.173 78.0266 li
@
300.946 74.7426 mo
301.417 79.2906 li
300.12 78.2456 li
298.495 78.6026 li
300.946 74.7426 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
300.946 74.7426 mo
301.417 79.2906 li
300.12 78.2456 li
298.495 78.6026 li
300.946 74.7426 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
298.165 86.5436 mo
300.173 78.0266 li
@
.75 lw
254.649 85.2396 mo
258.397 77.3336 li
@
259.843 74.2836 mo
259.348 78.8297 li
258.302 77.5366 li
256.638 77.5446 li
259.843 74.2836 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
259.843 74.2836 mo
259.348 78.8297 li
258.302 77.5366 li
256.638 77.5446 li
259.843 74.2836 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
254.649 85.2396 mo
258.397 77.3336 li
@
.75 lw
216.513 78.5566 mo
212.459 86.3106 li
@
210.895 89.3026 mo
211.567 84.7786 li
212.563 86.1106 li
214.225 86.1686 li
210.895 89.3026 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
210.895 89.3026 mo
211.567 84.7786 li
212.563 86.1106 li
214.225 86.1686 li
210.895 89.3026 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
216.513 78.5566 mo
212.459 86.3106 li
@
.75 lw
175.843 130.784 mo
175.843 122.034 li
@
175.843 118.659 mo
177.343 122.979 li
175.843 122.259 li
174.343 122.979 li
175.843 118.659 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
175.843 118.659 mo
177.343 122.979 li
175.843 122.259 li
174.343 122.979 li
175.843 118.659 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
175.843 130.784 mo
175.843 122.034 li
@
.75 lw
229.843 88.1166 mo
229.843 79.3666 li
@
229.843 75.9926 mo
231.343 80.3116 li
229.843 79.5926 li
228.343 80.3116 li
229.843 75.9926 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
229.843 75.9926 mo
231.343 80.3116 li
229.843 79.5926 li
228.343 80.3116 li
229.843 75.9926 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
229.843 88.1166 mo
229.843 79.3666 li
@
.75 lw
141.177 130.117 mo
141.176 121.367 li
@
141.176 117.992 mo
142.676 122.312 li
141.176 121.593 li
139.676 122.312 li
141.176 117.992 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
141.176 117.992 mo
142.676 122.312 li
141.176 121.593 li
139.676 122.312 li
141.176 117.992 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
141.177 130.117 mo
141.176 121.367 li
@
.75 lw
262.468 45.9506 mo
262.468 54.7006 li
@
262.468 58.0756 mo
260.968 53.7556 li
262.468 54.4756 li
263.968 53.7556 li
262.468 58.0756 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
262.468 58.0756 mo
260.968 53.7556 li
262.468 54.4756 li
263.968 53.7556 li
262.468 58.0756 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
262.468 45.9506 mo
262.468 54.7006 li
@
.75 lw
244.843 68.7836 mo
244.843 77.5336 li
@
244.843 80.9086 mo
243.343 76.5897 li
244.843 77.3087 li
246.343 76.5897 li
244.843 80.9086 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
244.843 80.9086 mo
243.343 76.5897 li
244.843 77.3087 li
246.343 76.5897 li
244.843 80.9086 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
244.843 68.7836 mo
244.843 77.5336 li
@
.75 lw
266.645 21.4116 mo
275.319 22.5636 li
@
278.665 23.0086 mo
274.185 23.9266 li
275.097 22.5346 li
274.581 20.9526 li
278.665 23.0086 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
278.665 23.0086 mo
274.185 23.9266 li
275.097 22.5346 li
274.581 20.9526 li
278.665 23.0086 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
266.645 21.4116 mo
275.319 22.5636 li
@
.75 lw
174.277 39.2576 mo
175.987 47.8396 li
@
176.646 51.1496 mo
174.331 47.2056 li
175.942 47.6186 li
177.273 46.6196 li
176.646 51.1496 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
176.646 51.1496 mo
174.331 47.2056 li
175.942 47.6186 li
177.273 46.6196 li
176.646 51.1496 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
.15 lw
174.277 39.2576 mo
175.987 47.8396 li
@
71.927 7.89563 mo
74.8801 8.95062 li
71.927 10.0046 li
71.927 7.89563 li
cp
1 /1 /CSD get_res sepcs
1 sep
f
.5 lw
71.927 7.89563 mo
74.8801 8.95062 li
71.927 10.0046 li
71.927 7.89563 li
cp
@
14.898 136.601 mo
13.843 139.554 li
12.789 136.601 li
14.898 136.601 li
cp
f
14.898 136.601 mo
13.843 139.554 li
12.789 136.601 li
14.898 136.601 li
cp
@
.75 lw
1 lj
312.343 67.9236 mo
312.343 81.0486 li
1 /0 /CSD get_res sepcs
1 sep
@
312.343 84.4236 mo
310.843 80.1026 li
312.343 80.8236 li
313.843 80.1026 li
312.343 84.4236 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.5 lw
312.343 84.4236 mo
310.843 80.1026 li
312.343 80.8236 li
313.843 80.1026 li
312.343 84.4236 li
cp
true sop
1 /0 /CSD get_res sepcs
1 sep
@
121.151 19.4926 mo
119.229 19.6976 117.837 21.4216 118.042 23.3436 cv
118.247 25.2656 119.972 26.6576 121.894 26.4526 cv
123.816 26.2476 125.208 24.5226 125.003 22.6016 cv
124.798 20.6796 123.073 19.2876 121.151 19.4926 cv
false sop
1 /0 /CSD get_res sepcs
.85 sep
f
.75 lw
0 lj
121.151 19.4926 mo
119.229 19.6976 117.837 21.4216 118.042 23.3436 cv
118.247 25.2656 119.972 26.6576 121.894 26.4526 cv
123.816 26.2476 125.208 24.5226 125.003 22.6016 cv
124.798 20.6796 123.073 19.2876 121.151 19.4926 cv
cp
true sop
1 /0 /CSD get_res sepcs
.85 sep
@
121.835 26.2746 mo
119.991 26.4716 118.336 25.1356 118.14 23.2916 cv
117.943 21.4476 119.278 19.7926 121.123 19.5956 cv
122.967 19.3986 124.622 20.7346 124.819 22.5796 cv
125.016 24.4236 123.68 26.0786 121.835 26.2746 cv
false sop
1 /0 /CSD get_res sepcs
.887 sep
f
121.777 26.0976 mo
120.01 26.2856 118.425 25.0056 118.237 23.2396 cv
118.048 21.4726 119.328 19.8876 121.094 19.6996 cv
122.861 19.5106 124.446 20.7896 124.634 22.5566 cv
124.823 24.3236 123.543 25.9086 121.777 26.0976 cv
1 /0 /CSD get_res sepcs
.925 sep
f
121.718 25.9186 mo
120.029 26.0996 118.514 24.8755 118.334 23.1866 cv
118.154 21.4976 119.376 19.9826 121.066 19.8026 cv
122.755 19.6226 124.27 20.8456 124.45 22.5346 cv
124.63 24.2236 123.407 25.7386 121.718 25.9186 cv
1 /0 /CSD get_res sepcs
.962 sep
f
121.037 19.9066 mo
119.426 20.0786 118.259 21.5236 118.431 23.1346 cv
118.603 24.7466 120.048 25.9136 121.66 25.7416 cv
123.271 25.5696 124.438 24.1236 124.266 22.5126 cv
124.094 20.9006 122.648 19.7346 121.037 19.9066 cv
1 /0 /CSD get_res sepcs
1 sep
f
118.576 22.9226 mo
118.421 21.4746 119.47 20.1746 120.919 20.0196 cv
122.367 19.8656 123.666 20.9136 123.821 22.3626 cv
123.976 23.8106 122.927 25.1106 121.478 25.2646 cv
120.03 25.4196 118.73 24.3706 118.576 22.9226 cv
1 /0 /CSD get_res sepcs
.906 sep
f
118.721 22.7096 mo
118.584 21.4246 119.515 20.2706 120.8 20.1336 cv
122.085 19.9966 123.239 20.9276 123.376 22.2126 cv
123.513 23.4976 122.582 24.6516 121.297 24.7886 cv
120.012 24.9256 118.858 23.9946 118.721 22.7096 cv
1 /0 /CSD get_res sepcs
.813 sep
f
118.867 22.4966 mo
118.747 21.3746 119.56 20.3676 120.682 20.2476 cv
121.804 20.1276 122.811 20.9406 122.931 22.0626 cv
123.051 23.1856 122.238 24.1926 121.116 24.3116 cv
119.993 24.4326 118.986 23.6196 118.867 22.4966 cv
1 /0 /CSD get_res sepcs
.719 sep
f
119.012 22.2846 mo
118.91 21.3246 119.604 20.4636 120.563 20.3616 cv
121.523 20.2596 122.384 20.9546 122.486 21.9136 cv
122.588 22.8726 121.893 23.7336 120.934 23.8356 cv
119.975 23.9376 119.114 23.2436 119.012 22.2846 cv
1 /0 /CSD get_res sepcs
.625 sep
f
119.157 22.0716 mo
119.072 21.2746 119.649 20.5606 120.445 20.4756 cv
121.242 20.3906 121.956 20.9676 122.041 21.7636 cv
122.126 22.5596 121.549 23.2746 120.753 23.3596 cv
119.957 23.4446 119.242 22.8676 119.157 22.0716 cv
1 /0 /CSD get_res sepcs
.531 sep
f
119.302 21.8586 mo
119.235 21.2256 119.693 20.6566 120.327 20.5897 cv
120.96 20.5217 121.529 20.9807 121.596 21.6136 cv
121.663 22.2476 121.205 22.8156 120.572 22.8837 cv
119.938 22.9506 119.37 22.4926 119.302 21.8586 cv
1 /0 /CSD get_res sepcs
.438 sep
f
119.447 21.6456 mo
119.397 21.1757 119.738 20.7536 120.208 20.7036 cv
120.679 20.6526 121.101 20.9937 121.151 21.4636 cv
121.202 21.9346 120.861 22.3566 120.39 22.4066 cv
119.92 22.4566 119.498 22.1166 119.447 21.6456 cv
1 /0 /CSD get_res sepcs
.344 sep
f
120.09 20.8166 mo
119.783 20.8496 119.56 21.1256 119.593 21.4336 cv
119.625 21.7406 119.901 21.9636 120.209 21.9306 cv
120.516 21.8976 120.739 21.6216 120.706 21.3146 cv
120.673 21.0066 120.397 20.7846 120.09 20.8166 cv
1 /0 /CSD get_res sepcs
.25 sep
f
151.824 25.8606 mo
149.902 26.0656 148.51 27.7896 148.715 29.7116 cv
148.92 31.6346 150.644 33.0256 152.566 32.8206 cv
154.488 32.6156 155.88 30.8916 155.675 28.9696 cv
155.47 27.0476 153.746 25.6556 151.824 25.8606 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
151.824 25.8606 mo
149.902 26.0656 148.51 27.7896 148.715 29.7116 cv
148.92 31.6346 150.644 33.0256 152.566 32.8206 cv
154.488 32.6156 155.88 30.8916 155.675 28.9696 cv
155.47 27.0476 153.746 25.6556 151.824 25.8606 cv
cp
@
151.824 25.8606 mo
149.902 26.0656 148.51 27.7896 148.715 29.7116 cv
148.92 31.6346 150.644 33.0256 152.566 32.8206 cv
154.488 32.6156 155.88 30.8916 155.675 28.9696 cv
155.47 27.0476 153.746 25.6556 151.824 25.8606 cv
f
151.824 25.8606 mo
149.902 26.0656 148.51 27.7896 148.715 29.7116 cv
148.92 31.6346 150.644 33.0256 152.566 32.8206 cv
154.488 32.6156 155.88 30.8916 155.675 28.9696 cv
155.47 27.0476 153.746 25.6556 151.824 25.8606 cv
cp
true sop
1 /0 /CSD get_res sepcs
.85 sep
@
152.508 32.6426 mo
150.664 32.8396 149.009 31.5046 148.812 29.6596 cv
148.615 27.8156 149.951 26.1606 151.795 25.9636 cv
153.64 25.7676 155.294 27.1026 155.491 28.9476 cv
155.688 30.7916 154.352 32.4466 152.508 32.6426 cv
false sop
1 /0 /CSD get_res sepcs
.887 sep
f
152.449 32.4656 mo
150.683 32.6536 149.098 31.3746 148.909 29.6077 cv
148.721 27.8406 150 26.2556 151.767 26.0676 cv
153.533 25.8787 155.118 27.1586 155.307 28.9257 cv
155.495 30.6917 154.216 32.2766 152.449 32.4656 cv
1 /0 /CSD get_res sepcs
.925 sep
f
152.391 32.2876 mo
150.702 32.4676 149.186 31.2446 149.006 29.5556 cv
148.826 27.8666 150.049 26.3516 151.738 26.1706 cv
153.427 25.9906 154.942 27.2136 155.123 28.9026 cv
155.303 30.5916 154.08 32.1076 152.391 32.2876 cv
1 /0 /CSD get_res sepcs
.962 sep
f
151.709 26.2746 mo
150.098 26.4466 148.932 27.8926 149.103 29.5036 cv
149.275 31.1146 150.721 32.2816 152.332 32.1096 cv
153.943 31.9376 155.11 30.4916 154.938 28.8806 cv
154.766 27.2696 153.321 26.1026 151.709 26.2746 cv
1 /0 /CSD get_res sepcs
1 sep
f
149.248 29.2906 mo
149.094 27.8426 150.143 26.5426 151.591 26.3886 cv
153.04 26.2336 154.339 27.2826 154.493 28.7306 cv
154.648 30.1796 153.599 31.4786 152.151 31.6336 cv
150.703 31.7876 149.403 30.7386 149.248 29.2906 cv
1 /0 /CSD get_res sepcs
.906 sep
f
149.394 29.0776 mo
149.257 27.7926 150.187 26.6396 151.473 26.5016 cv
152.758 26.3656 153.911 27.2956 154.048 28.5806 cv
154.186 29.8666 153.255 31.0196 151.969 31.1566 cv
150.684 31.2936 149.531 30.3636 149.394 29.0776 cv
1 /0 /CSD get_res sepcs
.813 sep
f
149.539 28.8656 mo
149.419 27.7426 150.232 26.7356 151.354 26.6166 cv
152.476 26.4966 153.484 27.3096 153.603 28.4316 cv
153.723 29.5536 152.911 30.5606 151.788 30.6806 cv
150.665 30.8006 149.659 29.9876 149.539 28.8656 cv
1 /0 /CSD get_res sepcs
.719 sep
f
149.684 28.6526 mo
149.582 27.6926 150.276 26.8316 151.236 26.7296 cv
152.195 26.6276 153.056 27.3226 153.159 28.2816 cv
153.261 29.2416 152.566 30.1016 151.607 30.2046 cv
150.647 30.3066 149.787 29.6116 149.684 28.6526 cv
1 /0 /CSD get_res sepcs
.625 sep
f
149.829 28.4396 mo
149.745 27.6426 150.321 26.9286 151.118 26.8436 cv
151.914 26.7585 152.628 27.3356 152.713 28.1316 cv
152.798 28.9286 152.222 29.6426 151.425 29.7276 cv
150.629 29.8126 149.914 29.2356 149.829 28.4396 cv
1 /0 /CSD get_res sepcs
.531 sep
f
149.974 28.2266 mo
149.907 27.5936 150.366 27.0245 150.999 26.9576 cv
151.633 26.8906 152.201 27.3486 152.268 27.9816 cv
152.336 28.6155 151.877 29.1846 151.244 29.2516 cv
150.61 29.3196 150.042 28.8605 149.974 28.2266 cv
1 /0 /CSD get_res sepcs
.438 sep
f
150.12 28.0146 mo
150.07 27.5436 150.41 27.1216 150.881 27.0716 cv
151.351 27.0206 151.773 27.3616 151.824 27.8326 cv
151.874 28.3026 151.533 28.7256 151.062 28.7746 cv
150.592 28.8256 150.17 28.4846 150.12 28.0146 cv
1 /0 /CSD get_res sepcs
.344 sep
f
150.763 27.1846 mo
150.455 27.2186 150.232 27.4946 150.265 27.8016 cv
150.298 28.1086 150.574 28.3315 150.881 28.2986 cv
151.189 28.2665 151.411 27.9906 151.378 27.6826 cv
151.346 27.3746 151.07 27.1526 150.763 27.1846 cv
1 /0 /CSD get_res sepcs
.25 sep
f
176.566 15.9356 mo
174.644 16.1406 173.253 17.8656 173.458 19.7876 cv
173.663 21.7096 175.388 23.1016 177.31 22.8956 cv
179.231 22.6906 180.623 20.9666 180.418 19.0446 cv
180.213 17.1226 178.489 15.7306 176.566 15.9356 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
176.566 15.9356 mo
174.644 16.1406 173.253 17.8656 173.458 19.7876 cv
173.663 21.7096 175.388 23.1016 177.31 22.8956 cv
179.231 22.6906 180.623 20.9666 180.418 19.0446 cv
180.213 17.1226 178.489 15.7306 176.566 15.9356 cv
cp
@
176.566 15.9356 mo
174.644 16.1406 173.253 17.8656 173.458 19.7876 cv
173.663 21.7096 175.388 23.1016 177.31 22.8956 cv
179.231 22.6906 180.623 20.9666 180.418 19.0446 cv
180.213 17.1226 178.489 15.7306 176.566 15.9356 cv
f
176.566 15.9356 mo
174.644 16.1406 173.253 17.8656 173.458 19.7876 cv
173.663 21.7096 175.388 23.1016 177.31 22.8956 cv
179.231 22.6906 180.623 20.9666 180.418 19.0446 cv
180.213 17.1226 178.489 15.7306 176.566 15.9356 cv
cp
true sop
1 /0 /CSD get_res sepcs
.85 sep
@
177.251 22.7186 mo
175.406 22.9146 173.751 21.5797 173.555 19.7346 cv
173.358 17.8906 174.693 16.2357 176.538 16.0386 cv
178.382 15.8427 180.037 17.1776 180.233 19.0226 cv
180.431 20.8666 179.095 22.5216 177.251 22.7186 cv
false sop
1 /0 /CSD get_res sepcs
.887 sep
f
177.192 22.5396 mo
175.425 22.7286 173.841 21.4496 173.651 19.6826 cv
173.464 17.9156 174.743 16.3306 176.509 16.1426 cv
178.276 15.9546 179.86 17.2336 180.05 18.9996 cv
180.238 20.7666 178.959 22.3516 177.192 22.5396 cv
1 /0 /CSD get_res sepcs
.925 sep
f
177.134 22.3626 mo
175.444 22.5426 173.929 21.3196 173.749 19.6306 cv
173.569 17.9416 174.792 16.4266 176.481 16.2466 cv
178.17 16.0656 179.685 17.2886 179.865 18.9776 cv
180.046 20.6666 178.822 22.1826 177.134 22.3626 cv
1 /0 /CSD get_res sepcs
.962 sep
f
176.452 16.3496 mo
174.841 16.5216 173.675 17.9676 173.847 19.5786 cv
174.018 21.1896 175.464 22.3566 177.075 22.1846 cv
178.686 22.0126 179.853 20.5666 179.681 18.9556 cv
179.509 17.3446 178.063 16.1776 176.452 16.3496 cv
1 /0 /CSD get_res sepcs
1 sep
f
173.991 19.3656 mo
173.837 17.9176 174.886 16.6186 176.334 16.4636 cv
177.782 16.3096 179.081 17.3576 179.236 18.8066 cv
179.391 20.2546 178.342 21.5536 176.894 21.7086 cv
175.445 21.8626 174.145 20.8136 173.991 19.3656 cv
1 /0 /CSD get_res sepcs
.906 sep
f
174.137 19.1526 mo
173.999 17.8676 174.931 16.7146 176.216 16.5776 cv
177.501 16.4396 178.654 17.3706 178.791 18.6566 cv
178.929 19.9416 177.997 21.0946 176.712 21.2316 cv
175.427 21.3696 174.273 20.4376 174.137 19.1526 cv
1 /0 /CSD get_res sepcs
.813 sep
f
174.282 18.9396 mo
174.162 17.8176 174.975 16.8105 176.097 16.6906 cv
177.22 16.5716 178.227 17.3846 178.347 18.5066 cv
178.466 19.6286 177.653 20.6356 176.53 20.7556 cv
175.409 20.8755 174.401 20.0626 174.282 18.9396 cv
1 /0 /CSD get_res sepcs
.719 sep
f
174.427 18.7276 mo
174.325 17.7676 175.019 16.9076 175.979 16.8056 cv
176.938 16.7026 177.799 17.3976 177.901 18.3566 cv
178.003 19.3156 177.31 20.1766 176.35 20.2796 cv
175.39 20.3816 174.529 19.6866 174.427 18.7276 cv
1 /0 /CSD get_res sepcs
.625 sep
f
174.572 18.5146 mo
174.487 17.7186 175.063 17.0036 175.86 16.9186 cv
176.657 16.8336 177.372 17.4106 177.456 18.2066 cv
177.542 19.0036 176.964 19.7176 176.168 19.8026 cv
175.372 19.8876 174.657 19.3106 174.572 18.5146 cv
1 /0 /CSD get_res sepcs
.531 sep
f
174.718 18.3016 mo
174.649 17.6686 175.108 17.1006 175.742 17.0326 cv
176.376 16.9646 176.944 17.4236 177.011 18.0576 cv
177.079 18.6906 176.62 19.2596 175.987 19.3266 cv
175.353 19.3936 174.785 18.9355 174.718 18.3016 cv
1 /0 /CSD get_res sepcs
.438 sep
f
174.862 18.0896 mo
174.812 17.6186 175.153 17.1966 175.624 17.1466 cv
176.095 17.0966 176.517 17.4366 176.566 17.9076 cv
176.616 18.3776 176.276 18.8006 175.806 18.8506 cv
175.335 18.9006 174.913 18.5596 174.862 18.0896 cv
1 /0 /CSD get_res sepcs
.344 sep
f
175.505 17.2606 mo
175.198 17.2926 174.975 17.5686 175.008 17.8766 cv
175.04 18.1846 175.316 18.4066 175.624 18.3736 cv
175.932 18.3416 176.154 18.0646 176.122 17.7576 cv
176.089 17.4506 175.813 17.2276 175.505 17.2606 cv
1 /0 /CSD get_res sepcs
.25 sep
f
200.001 15.0826 mo
198.079 15.2886 196.686 17.0126 196.892 18.9346 cv
197.097 20.8566 198.821 22.2486 200.743 22.0436 cv
202.665 21.8386 204.057 20.1136 203.853 18.1916 cv
203.647 16.2696 201.923 14.8776 200.001 15.0826 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
200.001 15.0826 mo
198.079 15.2886 196.686 17.0126 196.892 18.9346 cv
197.097 20.8566 198.821 22.2486 200.743 22.0436 cv
202.665 21.8386 204.057 20.1136 203.853 18.1916 cv
203.647 16.2696 201.923 14.8776 200.001 15.0826 cv
cp
@
200.001 15.0826 mo
198.079 15.2886 196.686 17.0126 196.892 18.9346 cv
197.097 20.8566 198.821 22.2486 200.743 22.0436 cv
202.665 21.8386 204.057 20.1136 203.853 18.1916 cv
203.647 16.2696 201.923 14.8776 200.001 15.0826 cv
f
200.001 15.0826 mo
198.079 15.2886 196.686 17.0126 196.892 18.9346 cv
197.097 20.8566 198.821 22.2486 200.743 22.0436 cv
202.665 21.8386 204.057 20.1136 203.853 18.1916 cv
203.647 16.2696 201.923 14.8776 200.001 15.0826 cv
cp
true sop
1 /0 /CSD get_res sepcs
.85 sep
@
200.685 21.8656 mo
198.841 22.0616 197.186 20.7266 196.989 18.8826 cv
196.792 17.0376 198.128 15.3836 199.972 15.1866 cv
201.816 14.9896 203.472 16.3256 203.668 18.1696 cv
203.864 20.0136 202.529 21.6686 200.685 21.8656 cv
false sop
1 /0 /CSD get_res sepcs
.887 sep
f
200.626 21.6876 mo
198.86 21.8756 197.274 20.5966 197.086 18.8306 cv
196.897 17.0636 198.177 15.4786 199.944 15.2896 cv
201.71 15.1016 203.296 16.3806 203.483 18.1476 cv
203.673 19.9136 202.394 21.4986 200.626 21.6876 cv
1 /0 /CSD get_res sepcs
.925 sep
f
200.567 21.5096 mo
198.879 21.6896 197.363 20.4666 197.183 18.7776 cv
197.003 17.0886 198.226 15.5736 199.915 15.3926 cv
201.604 15.2126 203.119 16.4356 203.3 18.1246 cv
203.479 19.8136 202.257 21.3296 200.567 21.5096 cv
1 /0 /CSD get_res sepcs
.962 sep
f
199.887 15.4966 mo
198.275 15.6686 197.108 17.1146 197.28 18.7256 cv
197.452 20.3366 198.897 21.5036 200.509 21.3316 cv
202.12 21.1596 203.287 19.7146 203.115 18.1026 cv
202.943 16.4916 201.497 15.3246 199.887 15.4966 cv
1 /0 /CSD get_res sepcs
1 sep
f
197.426 18.5126 mo
197.27 17.0646 198.319 15.7656 199.769 15.6107 cv
201.216 15.4556 202.516 16.5046 202.671 17.9536 cv
202.825 19.4016 201.776 20.7006 200.327 20.8557 cv
198.88 21.0096 197.58 19.9606 197.426 18.5126 cv
1 /0 /CSD get_res sepcs
.906 sep
f
197.571 18.3006 mo
197.434 17.0146 198.364 15.8616 199.649 15.7246 cv
200.935 15.5876 202.089 16.5176 202.225 17.8036 cv
202.362 19.0886 201.432 20.2416 200.146 20.3786 cv
198.86 20.5166 197.708 19.5856 197.571 18.3006 cv
1 /0 /CSD get_res sepcs
.813 sep
f
197.716 18.0876 mo
197.597 16.9646 198.409 15.9576 199.531 15.8386 cv
200.653 15.7186 201.661 16.5316 201.78 17.6536 cv
201.9 18.7756 201.087 19.7836 199.965 19.9026 cv
198.843 20.0226 197.835 19.2096 197.716 18.0876 cv
1 /0 /CSD get_res sepcs
.719 sep
f
197.861 17.8746 mo
197.759 16.9146 198.454 16.0546 199.413 15.9526 cv
200.372 15.8495 201.233 16.5446 201.335 17.5036 cv
201.438 18.4636 200.743 19.3246 199.784 19.4266 cv
198.824 19.5286 197.964 18.8336 197.861 17.8746 cv
1 /0 /CSD get_res sepcs
.625 sep
f
198.007 17.6616 mo
197.921 16.8656 198.498 16.1506 199.294 16.0656 cv
200.091 15.9806 200.806 16.5576 200.89 17.3536 cv
200.976 18.1506 200.399 18.8656 199.603 18.9506 cv
198.806 19.0356 198.091 18.4586 198.007 17.6616 cv
1 /0 /CSD get_res sepcs
.531 sep
f
198.151 17.4496 mo
198.084 16.8156 198.543 16.2476 199.177 16.1796 cv
199.81 16.1126 200.378 16.5706 200.446 17.2046 cv
200.513 17.8376 200.055 18.4066 199.421 18.4736 cv
198.788 18.5416 198.22 18.0826 198.151 17.4496 cv
1 /0 /CSD get_res sepcs
.438 sep
f
198.297 17.2366 mo
198.247 16.7666 198.587 16.3436 199.058 16.2936 cv
199.528 16.2436 199.95 16.5836 200.001 17.0546 cv
200.051 17.5246 199.71 17.9476 199.239 17.9976 cv
198.768 18.0475 198.347 17.7065 198.297 17.2366 cv
1 /0 /CSD get_res sepcs
.344 sep
f
198.939 16.4076 mo
198.632 16.4406 198.409 16.7166 198.442 17.0236 cv
198.475 17.3306 198.751 17.5546 199.058 17.5206 cv
199.366 17.4886 199.589 17.2126 199.556 16.9046 cv
199.522 16.5976 199.247 16.3746 198.939 16.4076 cv
1 /0 /CSD get_res sepcs
.25 sep
f
110.393 97.4506 mo
108.47 97.6556 107.079 99.3806 107.284 101.303 cv
107.489 103.225 109.213 104.616 111.135 104.411 cv
113.057 104.207 114.449 102.482 114.244 100.56 cv
114.039 98.6376 112.314 97.2456 110.393 97.4506 cv
1 /0 /CSD get_res sepcs
.4 sep
f
110.393 97.4506 mo
108.47 97.6556 107.079 99.3806 107.284 101.303 cv
107.489 103.225 109.213 104.616 111.135 104.411 cv
113.057 104.207 114.449 102.482 114.244 100.56 cv
114.039 98.6376 112.314 97.2456 110.393 97.4506 cv
cp
true sop
1 /0 /CSD get_res sepcs
.4 sep
@
111.077 104.233 mo
109.232 104.43 107.577 103.095 107.381 101.25 cv
107.184 99.4056 108.519 97.7506 110.364 97.5546 cv
112.208 97.3566 113.863 98.6926 114.06 100.537 cv
114.256 102.382 112.921 104.037 111.077 104.233 cv
false sop
1 /0 /CSD get_res sepcs
.425 sep
f
111.018 104.056 mo
109.251 104.244 107.666 102.965 107.478 101.198 cv
107.289 99.4316 108.569 97.8466 110.335 97.6576 cv
112.102 97.4686 113.687 98.7476 113.875 100.516 cv
114.064 102.282 112.785 103.867 111.018 104.056 cv
1 /0 /CSD get_res sepcs
.45 sep
f
110.959 103.878 mo
109.27 104.059 107.755 102.835 107.575 101.146 cv
107.394 99.4565 108.618 97.9406 110.307 97.7615 cv
111.995 97.5806 113.511 98.8046 113.691 100.493 cv
113.872 102.182 112.648 103.697 110.959 103.878 cv
1 /0 /CSD get_res sepcs
.475 sep
f
110.278 97.8646 mo
108.667 98.0366 107.5 99.4816 107.672 101.094 cv
107.844 102.705 109.29 103.871 110.901 103.699 cv
112.512 103.527 113.679 102.082 113.507 100.471 cv
113.335 98.8586 111.89 97.6926 110.278 97.8646 cv
1 /0 /CSD get_res sepcs
.5 sep
f
110.143 97.9946 mo
111.568 97.8427 112.847 98.8746 112.998 100.3 cv
113.15 101.725 112.119 103.004 110.693 103.155 cv
109.268 103.308 107.99 102.275 107.838 100.851 cv
107.686 99.4257 108.718 98.1456 110.143 97.9946 cv
1 /0 /CSD get_res sepcs
.443 sep
f
110.008 98.1246 mo
111.247 97.9916 112.358 98.8906 112.49 100.129 cv
112.622 101.367 111.725 102.478 110.486 102.611 cv
109.247 102.743 108.136 101.846 108.004 100.607 cv
107.872 99.3687 108.769 98.2576 110.008 98.1246 cv
1 /0 /CSD get_res sepcs
.386 sep
f
109.873 98.2546 mo
110.925 98.1426 111.869 98.9046 111.981 99.9566 cv
112.094 101.01 111.332 101.955 110.279 102.066 cv
109.227 102.18 108.282 101.417 108.17 100.364 cv
108.058 99.3116 108.82 98.3666 109.873 98.2546 cv
1 /0 /CSD get_res sepcs
.329 sep
f
109.737 98.3846 mo
110.603 98.2926 111.38 98.9196 111.473 99.7866 cv
111.565 100.652 110.938 101.43 110.072 101.522 cv
109.206 101.615 108.428 100.987 108.336 100.121 cv
108.244 99.2546 108.871 98.4766 109.737 98.3846 cv
1 /0 /CSD get_res sepcs
.271 sep
f
109.602 98.5156 mo
110.282 98.4426 110.892 98.9346 110.964 99.6146 cv
111.037 100.295 110.544 100.905 109.864 100.978 cv
109.185 101.051 108.574 100.559 108.502 99.8776 cv
108.429 99.1976 108.922 98.5876 109.602 98.5156 cv
1 /0 /CSD get_res sepcs
.214 sep
f
109.466 98.6446 mo
109.96 98.5926 110.403 98.9496 110.456 99.4436 cv
110.509 99.9366 110.151 100.381 109.657 100.434 cv
109.164 100.486 108.72 100.129 108.668 99.6346 cv
108.615 99.1406 108.973 98.6976 109.466 98.6446 cv
1 /0 /CSD get_res sepcs
.157 sep
f
109.331 98.7746 mo
109.023 98.8086 108.801 99.0836 108.834 99.3916 cv
108.867 99.6986 109.143 99.9216 109.45 99.8886 cv
109.757 99.8556 109.98 99.5796 109.947 99.2726 cv
109.914 98.9646 109.639 98.7416 109.331 98.7746 cv
1 /0 /CSD get_res sepcs
.1 sep
f
287.452 121.473 mo
285.53 121.678 284.138 123.402 284.343 125.325 cv
284.548 127.247 286.272 128.639 288.194 128.434 cv
290.116 128.228 291.509 126.504 291.304 124.582 cv
291.098 122.66 289.374 121.268 287.452 121.473 cv
1 /0 /CSD get_res sepcs
.2 sep
f
287.452 121.473 mo
285.53 121.678 284.138 123.402 284.343 125.325 cv
284.548 127.247 286.272 128.639 288.194 128.434 cv
290.116 128.228 291.509 126.504 291.304 124.582 cv
291.098 122.66 289.374 121.268 287.452 121.473 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
288.116 128.196 mo
286.298 128.391 284.667 127.074 284.472 125.255 cv
284.278 123.436 285.595 121.805 287.413 121.611 cv
289.231 121.417 290.862 122.734 291.058 124.553 cv
291.251 126.371 289.935 128.002 288.116 128.196 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
288.038 127.959 mo
286.323 128.143 284.784 126.9 284.6 125.185 cv
284.419 123.471 285.661 121.932 287.376 121.749 cv
289.091 121.566 290.628 122.809 290.811 124.522 cv
290.995 126.238 289.753 127.776 288.038 127.959 cv
1 /0 /CSD get_res sepcs
.267 sep
f
287.337 121.888 mo
285.725 122.06 284.559 123.505 284.731 125.115 cv
284.903 126.727 286.348 127.894 287.96 127.722 cv
289.571 127.551 290.737 126.104 290.565 124.493 cv
290.395 122.882 288.948 121.715 287.337 121.888 cv
1 /0 /CSD get_res sepcs
.3 sep
f
287.8 127.299 mo
286.333 127.455 285.017 126.393 284.86 124.927 cv
284.704 123.46 285.767 122.144 287.233 121.988 cv
288.698 121.832 290.015 122.893 290.171 124.36 cv
290.327 125.826 289.265 127.143 287.8 127.299 cv
1 /0 /CSD get_res sepcs
.272 sep
f
287.638 126.875 mo
286.315 127.016 285.13 126.06 284.989 124.738 cv
284.848 123.416 285.806 122.23 287.126 122.089 cv
288.448 121.948 289.634 122.905 289.774 124.227 cv
289.917 125.549 288.958 126.734 287.638 126.875 cv
1 /0 /CSD get_res sepcs
.245 sep
f
287.475 126.451 mo
286.3 126.578 285.245 125.726 285.118 124.549 cv
284.993 123.372 285.845 122.316 287.022 122.19 cv
288.198 122.064 289.255 122.917 289.38 124.094 cv
289.505 125.27 288.653 126.326 287.475 126.451 cv
1 /0 /CSD get_res sepcs
.217 sep
f
287.315 126.028 mo
286.282 126.139 285.358 125.391 285.247 124.359 cv
285.138 123.328 285.884 122.401 286.917 122.292 cv
287.948 122.182 288.874 122.929 288.983 123.961 cv
289.095 124.992 288.347 125.918 287.315 126.028 cv
1 /0 /CSD get_res sepcs
.189 sep
f
287.153 125.605 mo
286.267 125.7 285.472 125.057 285.376 124.171 cv
285.282 123.283 285.925 122.488 286.811 122.393 cv
287.698 122.299 288.495 122.94 288.589 123.828 cv
288.683 124.715 288.042 125.51 287.153 125.605 cv
1 /0 /CSD get_res sepcs
.161 sep
f
286.993 125.182 mo
286.251 125.261 285.585 124.724 285.505 123.981 cv
285.427 123.239 285.964 122.573 286.706 122.494 cv
287.448 122.415 288.114 122.953 288.192 123.694 cv
288.272 124.436 287.735 125.102 286.993 125.182 cv
1 /0 /CSD get_res sepcs
.133 sep
f
286.831 124.759 mo
286.233 124.822 285.698 124.39 285.634 123.792 cv
285.571 123.195 286.003 122.659 286.6 122.596 cv
287.198 122.531 287.733 122.964 287.798 123.561 cv
287.862 124.159 287.429 124.694 286.831 124.759 cv
1 /0 /CSD get_res sepcs
.106 sep
f
286.671 124.335 mo
286.218 124.384 285.811 124.056 285.763 123.603 cv
285.716 123.151 286.042 122.744 286.495 122.696 cv
286.948 122.648 287.354 122.976 287.403 123.428 cv
287.45 123.881 287.122 124.287 286.671 124.335 cv
1 /0 /CSD get_res sepcs
.078 sep
f
286.39 122.798 mo
286.083 122.83 285.86 123.106 285.894 123.414 cv
285.925 123.722 286.202 123.944 286.509 123.912 cv
286.817 123.879 287.04 123.602 287.007 123.295 cv
286.973 122.988 286.698 122.766 286.39 122.798 cv
1 /0 /CSD get_res sepcs
.05 sep
f
244.452 61.7856 mo
242.53 61.9906 241.138 63.7146 241.343 65.6366 cv
241.548 67.5586 243.272 68.9506 245.194 68.7456 cv
247.116 68.5406 248.509 66.8156 248.304 64.8936 cv
248.098 62.9726 246.374 61.5806 244.452 61.7856 cv
1 /0 /CSD get_res sepcs
.65 sep
f
244.452 61.7856 mo
242.53 61.9906 241.138 63.7146 241.343 65.6366 cv
241.548 67.5586 243.272 68.9506 245.194 68.7456 cv
247.116 68.5406 248.509 66.8156 248.304 64.8936 cv
248.098 62.9726 246.374 61.5806 244.452 61.7856 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
245.136 68.5676 mo
243.292 68.7646 241.637 67.4286 241.44 65.5847 cv
241.243 63.7406 242.579 62.0856 244.423 61.8886 cv
246.267 61.6917 247.923 63.0276 248.119 64.8716 cv
248.315 66.7166 246.979 68.3716 245.136 68.5676 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
245.077 68.3896 mo
243.311 68.5786 241.725 67.2986 241.537 65.5326 cv
241.348 63.7656 242.628 62.1806 244.394 61.9926 cv
246.161 61.8036 247.746 63.0826 247.935 64.8496 cv
248.123 66.6166 246.844 68.2016 245.077 68.3896 cv
1 /0 /CSD get_res sepcs
.7 sep
f
245.019 68.2116 mo
243.329 68.3926 241.814 67.1686 241.634 65.4796 cv
241.454 63.7906 242.677 62.2756 244.366 62.0956 cv
246.056 61.9156 247.57 63.1386 247.751 64.8276 cv
247.931 66.5166 246.708 68.0316 245.019 68.2116 cv
1 /0 /CSD get_res sepcs
.725 sep
f
244.337 62.1996 mo
242.725 62.3716 241.56 63.8166 241.731 65.4276 cv
241.903 67.0386 243.349 68.2056 244.96 68.0346 cv
246.571 67.8626 247.738 66.4166 247.566 64.8056 cv
247.394 63.1936 245.948 62.0276 244.337 62.1996 cv
1 /0 /CSD get_res sepcs
.75 sep
f
241.897 65.1846 mo
241.745 63.7596 242.776 62.4816 244.202 62.3296 cv
245.628 62.1776 246.905 63.2086 247.058 64.6346 cv
247.21 66.0596 246.178 67.3376 244.753 67.4896 cv
243.327 67.6415 242.05 66.6096 241.897 65.1846 cv
1 /0 /CSD get_res sepcs
.671 sep
f
242.063 64.9416 mo
241.931 63.7026 242.828 62.5916 244.067 62.4596 cv
245.306 62.3276 246.417 63.2246 246.55 64.4626 cv
246.682 65.7016 245.784 66.8126 244.546 66.9456 cv
243.307 67.0776 242.195 66.1806 242.063 64.9416 cv
1 /0 /CSD get_res sepcs
.593 sep
f
242.229 64.6986 mo
242.116 63.6456 242.879 62.7016 243.932 62.5896 cv
244.984 62.4766 245.929 63.2396 246.04 64.2916 cv
246.153 65.3446 245.391 66.2886 244.339 66.4006 cv
243.286 66.5136 242.341 65.7506 242.229 64.6986 cv
1 /0 /CSD get_res sepcs
.514 sep
f
242.395 64.4556 mo
242.303 63.5895 242.931 62.8116 243.796 62.7195 cv
244.663 62.6266 245.44 63.2546 245.532 64.1205 cv
245.624 64.9866 244.997 65.7646 244.131 65.8566 cv
243.265 65.9496 242.487 65.3216 242.395 64.4556 cv
1 /0 /CSD get_res sepcs
.436 sep
f
242.561 64.2126 mo
242.488 63.5326 242.981 62.9226 243.661 62.8496 cv
244.341 62.7766 244.951 63.2696 245.023 63.9496 cv
245.097 64.6296 244.604 65.2396 243.924 65.3116 cv
243.243 65.3846 242.634 64.8926 242.561 64.2126 cv
1 /0 /CSD get_res sepcs
.357 sep
f
242.728 63.9696 mo
242.675 63.4756 243.032 63.0326 243.526 62.9796 cv
244.019 62.9266 244.462 63.2846 244.515 63.7786 cv
244.567 64.2716 244.21 64.7156 243.716 64.7676 cv
243.223 64.8206 242.78 64.4626 242.728 63.9696 cv
1 /0 /CSD get_res sepcs
.279 sep
f
243.39 63.1096 mo
243.083 63.1426 242.86 63.4186 242.894 63.7266 cv
242.926 64.0336 243.202 64.2566 243.509 64.2236 cv
243.817 64.1906 244.04 63.9146 244.007 63.6066 cv
243.973 63.2996 243.698 63.0776 243.39 63.1096 cv
1 /0 /CSD get_res sepcs
.2 sep
f
226.077 16.0356 mo
224.155 16.2406 222.763 17.9646 222.968 19.8866 cv
223.173 21.8086 224.897 23.2006 226.819 22.9956 cv
228.741 22.7906 230.134 21.0656 229.929 19.1436 cv
229.723 17.2226 227.999 15.8306 226.077 16.0356 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
226.077 16.0356 mo
224.155 16.2406 222.763 17.9646 222.968 19.8866 cv
223.173 21.8086 224.897 23.2006 226.819 22.9956 cv
228.741 22.7906 230.134 21.0656 229.929 19.1436 cv
229.723 17.2226 227.999 15.8306 226.077 16.0356 cv
cp
@
226.077 16.0356 mo
224.155 16.2406 222.763 17.9646 222.968 19.8866 cv
223.173 21.8086 224.897 23.2006 226.819 22.9956 cv
228.741 22.7906 230.134 21.0656 229.929 19.1436 cv
229.723 17.2226 227.999 15.8306 226.077 16.0356 cv
f
226.077 16.0356 mo
224.155 16.2406 222.763 17.9646 222.968 19.8866 cv
223.173 21.8086 224.897 23.2006 226.819 22.9956 cv
228.741 22.7906 230.134 21.0656 229.929 19.1436 cv
229.723 17.2226 227.999 15.8306 226.077 16.0356 cv
cp
true sop
1 /0 /CSD get_res sepcs
.85 sep
@
226.761 22.8176 mo
224.917 23.0146 223.262 21.6786 223.065 19.8347 cv
222.868 17.9906 224.204 16.3356 226.048 16.1386 cv
227.892 15.9417 229.548 17.2776 229.744 19.1216 cv
229.94 20.9666 228.604 22.6216 226.761 22.8176 cv
false sop
1 /0 /CSD get_res sepcs
.887 sep
f
226.702 22.6396 mo
224.936 22.8286 223.351 21.5486 223.162 19.7826 cv
222.973 18.0156 224.253 16.4306 226.019 16.2426 cv
227.786 16.0536 229.371 17.3326 229.56 19.0996 cv
229.748 20.8666 228.469 22.4516 226.702 22.6396 cv
1 /0 /CSD get_res sepcs
.925 sep
f
226.644 22.4616 mo
224.954 22.6426 223.439 21.4186 223.259 19.7296 cv
223.079 18.0406 224.302 16.5256 225.991 16.3456 cv
227.681 16.1656 229.195 17.3886 229.376 19.0776 cv
229.556 20.7666 228.333 22.2816 226.644 22.4616 cv
1 /0 /CSD get_res sepcs
.962 sep
f
225.962 16.4496 mo
224.35 16.6216 223.185 18.0666 223.356 19.6776 cv
223.528 21.2886 224.974 22.4556 226.585 22.2846 cv
228.196 22.1126 229.363 20.6666 229.191 19.0556 cv
229.019 17.4436 227.573 16.2776 225.962 16.4496 cv
1 /0 /CSD get_res sepcs
1 sep
f
223.501 19.4646 mo
223.347 18.0176 224.395 16.7176 225.845 16.5626 cv
227.292 16.4086 228.592 17.4566 228.747 18.9056 cv
228.901 20.3536 227.853 21.6536 226.403 21.8076 cv
224.956 21.9626 223.655 20.9136 223.501 19.4646 cv
1 /0 /CSD get_res sepcs
.906 sep
f
223.647 19.2526 mo
223.51 17.9676 224.44 16.8135 225.726 16.6766 cv
227.011 16.5396 228.164 17.4706 228.302 18.7556 cv
228.438 20.0406 227.508 21.1946 226.222 21.3315 cv
224.936 21.4686 223.784 20.5375 223.647 19.2526 cv
1 /0 /CSD get_res sepcs
.813 sep
f
223.792 19.0396 mo
223.673 17.9176 224.485 16.9106 225.607 16.7906 cv
226.729 16.6706 227.737 17.4836 227.856 18.6056 cv
227.976 19.7286 227.163 20.7356 226.041 20.8546 cv
224.919 20.9756 223.911 20.1626 223.792 19.0396 cv
1 /0 /CSD get_res sepcs
.719 sep
f
223.936 18.8276 mo
223.835 17.8676 224.53 17.0066 225.489 16.9046 cv
226.448 16.8026 227.31 17.4966 227.411 18.4556 cv
227.514 19.4156 226.819 20.2766 225.86 20.3786 cv
224.9 20.4806 224.04 19.7866 223.936 18.8276 cv
1 /0 /CSD get_res sepcs
.625 sep
f
224.083 18.6146 mo
223.997 17.8176 224.574 17.1025 225.37 17.0176 cv
226.167 16.9335 226.882 17.5106 226.966 18.3066 cv
227.052 19.1025 226.475 19.8176 225.679 19.9026 cv
224.882 19.9875 224.167 19.4106 224.083 18.6146 cv
1 /0 /CSD get_res sepcs
.531 sep
f
224.228 18.4016 mo
224.16 17.7676 224.618 17.1996 225.252 17.1326 cv
225.886 17.0646 226.454 17.5236 226.521 18.1566 cv
226.589 18.7896 226.13 19.3586 225.497 19.4266 cv
224.863 19.4936 224.296 19.0356 224.228 18.4016 cv
1 /0 /CSD get_res sepcs
.438 sep
f
224.372 18.1886 mo
224.323 17.7186 224.663 17.2966 225.134 17.2466 cv
225.604 17.1956 226.026 17.5366 226.077 18.0066 cv
226.127 18.4776 225.786 18.8996 225.315 18.9496 cv
224.845 18.9996 224.423 18.6596 224.372 18.1886 cv
1 /0 /CSD get_res sepcs
.344 sep
f
225.015 17.3596 mo
224.708 17.3926 224.485 17.6686 224.519 17.9766 cv
224.551 18.2836 224.827 18.5066 225.134 18.4736 cv
225.442 18.4406 225.665 18.1646 225.632 17.8566 cv
225.598 17.5496 225.323 17.3276 225.015 17.3596 cv
1 /0 /CSD get_res sepcs
.25 sep
f
262.765 17.4726 mo
260.843 17.6776 259.45 19.4026 259.655 21.3246 cv
259.86 23.2466 261.585 24.6386 263.507 24.4336 cv
265.429 24.2276 266.821 22.5036 266.616 20.5816 cv
266.411 18.6596 264.686 17.2676 262.765 17.4726 cv
cp
1 /0 /CSD get_res sepcs
.85 sep
f
262.765 17.4726 mo
260.843 17.6776 259.45 19.4026 259.655 21.3246 cv
259.86 23.2466 261.585 24.6386 263.507 24.4336 cv
265.429 24.2276 266.821 22.5036 266.616 20.5816 cv
266.411 18.6596 264.686 17.2676 262.765 17.4726 cv
cp
@
262.765 17.4726 mo
260.843 17.6776 259.45 19.4026 259.655 21.3246 cv
259.86 23.2466 261.585 24.6386 263.507 24.4336 cv
265.429 24.2276 266.821 22.5036 266.616 20.5816 cv
266.411 18.6596 264.686 17.2676 262.765 17.4726 cv
f
262.765 17.4726 mo
260.843 17.6776 259.45 19.4026 259.655 21.3246 cv
259.86 23.2466 261.585 24.6386 263.507 24.4336 cv
265.429 24.2276 266.821 22.5036 266.616 20.5816 cv
266.411 18.6596 264.686 17.2676 262.765 17.4726 cv
cp
true sop
1 /0 /CSD get_res sepcs
.85 sep
@
263.448 24.2556 mo
261.604 24.4526 259.949 23.1166 259.753 21.2716 cv
259.556 19.4276 260.892 17.7726 262.735 17.5766 cv
264.579 17.3796 266.235 18.7146 266.433 20.5596 cv
266.628 22.4036 265.292 24.0586 263.448 24.2556 cv
false sop
1 /0 /CSD get_res sepcs
.887 sep
f
263.39 24.0776 mo
261.623 24.2656 260.038 22.9866 259.85 21.2196 cv
259.661 19.4536 260.94 17.8686 262.708 17.6796 cv
264.473 17.4916 266.058 18.7706 266.247 20.5376 cv
266.435 22.3036 265.155 23.8885 263.39 24.0776 cv
1 /0 /CSD get_res sepcs
.925 sep
f
263.331 23.8996 mo
261.642 24.0796 260.127 22.8566 259.946 21.1676 cv
259.767 19.4786 260.989 17.9636 262.679 17.7836 cv
264.368 17.6026 265.884 18.8256 266.063 20.5156 cv
266.243 22.2046 265.02 23.7196 263.331 23.8996 cv
1 /0 /CSD get_res sepcs
.962 sep
f
262.649 17.8866 mo
261.038 18.0586 259.872 19.5046 260.044 21.1156 cv
260.216 22.7266 261.661 23.8936 263.272 23.7216 cv
264.884 23.5496 266.05 22.1036 265.878 20.4926 cv
265.708 18.8816 264.261 17.7146 262.649 17.8866 cv
1 /0 /CSD get_res sepcs
1 sep
f
260.188 20.9026 mo
260.034 19.4546 261.083 18.1546 262.532 18.0006 cv
263.979 17.8456 265.278 18.8946 265.435 20.3436 cv
265.589 21.7906 264.54 23.0906 263.091 23.2456 cv
261.644 23.3996 260.343 22.3516 260.188 20.9026 cv
1 /0 /CSD get_res sepcs
.906 sep
f
260.335 20.6896 mo
260.197 19.4046 261.128 18.2516 262.413 18.1146 cv
263.698 17.9766 264.85 18.9076 264.989 20.1936 cv
265.126 21.4786 264.196 22.6316 262.909 22.7686 cv
261.624 22.9066 260.472 21.9756 260.335 20.6896 cv
1 /0 /CSD get_res sepcs
.813 sep
f
260.479 20.4766 mo
260.36 19.3546 261.173 18.3475 262.295 18.2275 cv
263.417 18.1086 264.425 18.9216 264.544 20.0436 cv
264.663 21.1656 263.85 22.1725 262.729 22.2925 cv
261.606 22.4125 260.599 21.5995 260.479 20.4766 cv
1 /0 /CSD get_res sepcs
.719 sep
f
260.624 20.2646 mo
260.522 19.3056 261.218 18.4446 262.177 18.3416 cv
263.136 18.2396 263.997 18.9346 264.098 19.8936 cv
264.2 20.8526 263.507 21.7136 262.548 21.8166 cv
261.588 21.9186 260.728 21.2236 260.624 20.2646 cv
1 /0 /CSD get_res sepcs
.625 sep
f
260.77 20.0516 mo
260.685 19.2556 261.262 18.5406 262.058 18.4556 cv
262.854 18.3705 263.569 18.9476 263.653 19.7446 cv
263.739 20.5406 263.161 21.2546 262.366 21.3396 cv
261.569 21.4246 260.854 20.8486 260.77 20.0516 cv
1 /0 /CSD get_res sepcs
.531 sep
f
260.915 19.8386 mo
260.848 19.2056 261.306 18.6376 261.939 18.5696 cv
262.573 18.5016 263.142 18.9606 263.208 19.5946 cv
263.276 20.2276 262.817 20.7956 262.185 20.8636 cv
261.551 20.9316 260.983 20.4726 260.915 19.8386 cv
1 /0 /CSD get_res sepcs
.438 sep
f
261.06 19.6266 mo
261.011 19.1556 261.35 18.7336 261.821 18.6836 cv
262.292 18.6336 262.714 18.9746 262.765 19.4446 cv
262.813 19.9146 262.474 20.3366 262.003 20.3876 cv
261.532 20.4376 261.11 20.0966 261.06 19.6266 cv
1 /0 /CSD get_res sepcs
.344 sep
f
261.702 18.7976 mo
261.395 18.8306 261.173 19.1056 261.206 19.4136 cv
261.238 19.7216 261.515 19.9436 261.821 19.9116 cv
262.13 19.8776 262.353 19.6016 262.319 19.2946 cv
262.286 18.9876 262.011 18.7646 261.702 18.7976 cv
1 /0 /CSD get_res sepcs
.25 sep
f
250.827 115.473 mo
248.905 115.678 247.513 117.402 247.718 119.325 cv
247.923 121.247 249.647 122.639 251.569 122.434 cv
253.491 122.228 254.884 120.504 254.679 118.582 cv
254.473 116.66 252.749 115.268 250.827 115.473 cv
1 /0 /CSD get_res sepcs
.2 sep
f
250.827 115.473 mo
248.905 115.678 247.513 117.402 247.718 119.325 cv
247.923 121.247 249.647 122.639 251.569 122.434 cv
253.491 122.228 254.884 120.504 254.679 118.582 cv
254.473 116.66 252.749 115.268 250.827 115.473 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
251.491 122.196 mo
249.673 122.391 248.041 121.074 247.847 119.255 cv
247.653 117.436 248.97 115.805 250.788 115.611 cv
252.606 115.417 254.238 116.734 254.433 118.553 cv
254.626 120.371 253.31 122.002 251.491 122.196 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
251.413 121.959 mo
249.698 122.143 248.159 120.9 247.977 119.185 cv
247.794 117.471 249.036 115.932 250.751 115.749 cv
252.466 115.566 254.004 116.809 254.186 118.522 cv
254.37 120.238 253.128 121.776 251.413 121.959 cv
1 /0 /CSD get_res sepcs
.267 sep
f
250.712 115.888 mo
249.1 116.06 247.935 117.505 248.106 119.115 cv
248.278 120.727 249.724 121.894 251.335 121.722 cv
252.946 121.551 254.113 120.104 253.941 118.493 cv
253.769 116.882 252.323 115.715 250.712 115.888 cv
1 /0 /CSD get_res sepcs
.3 sep
f
251.174 121.299 mo
249.708 121.455 248.392 120.393 248.235 118.927 cv
248.079 117.46 249.141 116.144 250.607 115.988 cv
252.073 115.832 253.39 116.893 253.546 118.36 cv
253.702 119.826 252.64 121.143 251.174 121.299 cv
1 /0 /CSD get_res sepcs
.272 sep
f
251.013 120.875 mo
249.69 121.016 248.505 120.06 248.364 118.738 cv
248.224 117.416 249.181 116.23 250.502 116.089 cv
251.823 115.948 253.009 116.905 253.149 118.227 cv
253.291 119.549 252.334 120.734 251.013 120.875 cv
1 /0 /CSD get_res sepcs
.245 sep
f
250.852 120.451 mo
249.675 120.578 248.619 119.726 248.493 118.549 cv
248.368 117.372 249.22 116.316 250.397 116.19 cv
251.573 116.064 252.63 116.917 252.755 118.094 cv
252.88 119.27 252.028 120.326 250.852 120.451 cv
1 /0 /CSD get_res sepcs
.217 sep
f
250.69 120.028 mo
249.658 120.139 248.733 119.391 248.622 118.359 cv
248.513 117.328 249.26 116.401 250.292 116.292 cv
251.323 116.182 252.249 116.929 252.359 117.961 cv
252.47 118.992 251.722 119.918 250.69 120.028 cv
1 /0 /CSD get_res sepcs
.189 sep
f
250.528 119.605 mo
249.642 119.7 248.847 119.057 248.751 118.171 cv
248.657 117.283 249.3 116.488 250.186 116.393 cv
251.073 116.299 251.869 116.94 251.964 117.828 cv
252.057 118.715 251.416 119.51 250.528 119.605 cv
1 /0 /CSD get_res sepcs
.161 sep
f
250.368 119.182 mo
249.626 119.261 248.96 118.724 248.881 117.981 cv
248.802 117.239 249.339 116.573 250.081 116.494 cv
250.823 116.415 251.489 116.953 251.568 117.694 cv
251.647 118.436 251.11 119.102 250.368 119.182 cv
1 /0 /CSD get_res sepcs
.133 sep
f
250.206 118.759 mo
249.609 118.822 249.073 118.39 249.01 117.792 cv
248.946 117.195 249.378 116.659 249.975 116.596 cv
250.573 116.531 251.108 116.964 251.173 117.561 cv
251.236 118.159 250.804 118.694 250.206 118.759 cv
1 /0 /CSD get_res sepcs
.106 sep
f
250.046 118.335 mo
249.593 118.384 249.186 118.056 249.139 117.603 cv
249.091 117.151 249.418 116.744 249.87 116.696 cv
250.323 116.648 250.729 116.976 250.777 117.428 cv
250.825 117.881 250.498 118.287 250.046 118.335 cv
1 /0 /CSD get_res sepcs
.078 sep
f
249.765 116.798 mo
249.458 116.83 249.235 117.106 249.269 117.414 cv
249.301 117.722 249.577 117.944 249.884 117.912 cv
250.192 117.879 250.415 117.602 250.382 117.295 cv
250.348 116.988 250.073 116.766 249.765 116.798 cv
1 /0 /CSD get_res sepcs
.05 sep
f
175.455 130.764 mo
173.532 130.969 172.142 132.692 172.347 134.614 cv
172.552 136.537 174.275 137.929 176.198 137.724 cv
178.12 137.519 179.512 135.795 179.307 133.872 cv
179.101 131.95 177.377 130.559 175.455 130.764 cv
1 /0 /CSD get_res sepcs
.2 sep
f
175.455 130.764 mo
173.532 130.969 172.142 132.692 172.347 134.614 cv
172.552 136.537 174.275 137.929 176.198 137.724 cv
178.12 137.519 179.512 135.795 179.307 133.872 cv
179.101 131.95 177.377 130.559 175.455 130.764 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
176.12 137.486 mo
174.302 137.681 172.669 136.363 172.476 134.546 cv
172.281 132.727 173.599 131.096 175.417 130.901 cv
177.235 130.707 178.866 132.024 179.061 133.843 cv
179.255 135.661 177.938 137.293 176.12 137.486 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
176.042 137.25 mo
174.327 137.433 172.788 136.19 172.604 134.476 cv
172.422 132.761 173.664 131.223 175.379 131.039 cv
177.094 130.856 178.632 132.098 178.815 133.813 cv
178.998 135.527 177.757 137.066 176.042 137.25 cv
1 /0 /CSD get_res sepcs
.267 sep
f
175.341 131.177 mo
173.729 131.35 172.562 132.795 172.734 134.406 cv
172.906 136.018 174.353 137.185 175.964 137.013 cv
177.575 136.84 178.741 135.394 178.569 133.784 cv
178.397 132.172 176.952 131.005 175.341 131.177 cv
1 /0 /CSD get_res sepcs
.3 sep
f
175.802 136.589 mo
174.335 136.745 173.02 135.684 172.864 134.217 cv
172.707 132.751 173.769 131.435 175.235 131.278 cv
176.702 131.122 178.017 132.185 178.174 133.65 cv
178.331 135.117 177.269 136.433 175.802 136.589 cv
1 /0 /CSD get_res sepcs
.272 sep
f
175.641 136.166 mo
174.319 136.307 173.134 135.35 172.993 134.027 cv
172.852 132.707 173.809 131.521 175.13 131.38 cv
176.452 131.238 177.638 132.196 177.778 133.518 cv
177.919 134.839 176.962 136.024 175.641 136.166 cv
1 /0 /CSD get_res sepcs
.245 sep
f
175.479 135.742 mo
174.304 135.867 173.247 135.016 173.122 133.839 cv
172.996 132.662 173.848 131.606 175.025 131.48 cv
176.202 131.355 177.257 132.207 177.384 133.384 cv
177.509 134.56 176.656 135.617 175.479 135.742 cv
1 /0 /CSD get_res sepcs
.217 sep
f
175.318 135.318 mo
174.286 135.429 173.36 134.682 173.251 133.65 cv
173.141 132.618 173.888 131.692 174.92 131.582 cv
175.952 131.472 176.878 132.219 176.987 133.251 cv
177.098 134.283 176.35 135.209 175.318 135.318 cv
1 /0 /CSD get_res sepcs
.189 sep
f
175.157 134.895 mo
174.27 134.989 173.475 134.348 173.38 133.46 cv
173.285 132.574 173.928 131.777 174.814 131.684 cv
175.702 131.589 176.497 132.23 176.592 133.118 cv
176.686 134.005 176.044 134.801 175.157 134.895 cv
1 /0 /CSD get_res sepcs
.161 sep
f
174.996 134.472 mo
174.254 134.551 173.589 134.014 173.509 133.271 cv
173.43 132.529 173.968 131.863 174.71 131.784 cv
175.452 131.705 176.117 132.242 176.196 132.984 cv
176.276 133.727 175.738 134.393 174.996 134.472 cv
1 /0 /CSD get_res sepcs
.133 sep
f
174.835 134.049 mo
174.237 134.112 173.702 133.68 173.638 133.082 cv
173.574 132.485 174.007 131.949 174.604 131.886 cv
175.202 131.821 175.737 132.255 175.801 132.852 cv
175.864 133.449 175.433 133.984 174.835 134.049 cv
1 /0 /CSD get_res sepcs
.106 sep
f
174.674 133.625 mo
174.222 133.674 173.815 133.346 173.766 132.893 cv
173.719 132.441 174.046 132.035 174.499 131.986 cv
174.951 131.938 175.357 132.266 175.405 132.719 cv
175.454 133.171 175.126 133.577 174.674 133.625 cv
1 /0 /CSD get_res sepcs
.078 sep
f
174.393 132.088 mo
174.086 132.121 173.863 132.396 173.896 132.704 cv
173.929 133.012 174.205 133.234 174.513 133.201 cv
174.819 133.169 175.043 132.893 175.01 132.585 cv
174.978 132.277 174.701 132.055 174.393 132.088 cv
1 /0 /CSD get_res sepcs
.05 sep
f
208.515 130.785 mo
206.593 130.99 205.2 132.715 205.405 134.638 cv
205.61 136.56 207.335 137.951 209.257 137.746 cv
211.179 137.541 212.571 135.816 212.366 133.894 cv
212.161 131.973 210.436 130.58 208.515 130.785 cv
1 /0 /CSD get_res sepcs
.2 sep
f
208.515 130.785 mo
206.593 130.99 205.2 132.715 205.405 134.638 cv
205.61 136.56 207.335 137.951 209.257 137.746 cv
211.179 137.541 212.571 135.816 212.366 133.894 cv
212.161 131.973 210.436 130.58 208.515 130.785 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
209.179 137.509 mo
207.36 137.703 205.728 136.387 205.534 134.567 cv
205.341 132.749 206.657 131.117 208.476 130.924 cv
210.294 130.729 211.926 132.047 212.12 133.865 cv
212.313 135.684 210.997 137.314 209.179 137.509 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
209.101 137.271 mo
207.386 137.455 205.847 136.213 205.664 134.498 cv
205.481 132.783 206.723 131.244 208.438 131.061 cv
210.153 130.879 211.691 132.121 211.874 133.835 cv
212.058 135.551 210.815 137.089 209.101 137.271 cv
1 /0 /CSD get_res sepcs
.267 sep
f
208.399 131.2 mo
206.788 131.372 205.622 132.817 205.794 134.428 cv
205.966 136.039 207.411 137.207 209.022 137.034 cv
210.634 136.863 211.801 135.417 211.629 133.806 cv
211.457 132.194 210.011 131.027 208.399 131.2 cv
1 /0 /CSD get_res sepcs
.3 sep
f
208.861 136.611 mo
207.395 136.768 206.079 135.705 205.923 134.239 cv
205.767 132.772 206.828 131.457 208.295 131.301 cv
209.761 131.144 211.077 132.206 211.233 133.673 cv
211.39 135.139 210.327 136.455 208.861 136.611 cv
1 /0 /CSD get_res sepcs
.272 sep
f
208.7 136.187 mo
207.378 136.328 206.192 135.372 206.052 134.051 cv
205.911 132.728 206.868 131.543 208.189 131.401 cv
209.511 131.261 210.696 132.218 210.838 133.539 cv
210.978 134.861 210.021 136.047 208.7 136.187 cv
1 /0 /CSD get_res sepcs
.245 sep
f
208.539 135.764 mo
207.362 135.891 206.307 135.038 206.181 133.861 cv
206.056 132.685 206.907 131.629 208.085 131.503 cv
209.261 131.377 210.317 132.229 210.442 133.406 cv
210.567 134.583 209.716 135.639 208.539 135.764 cv
1 /0 /CSD get_res sepcs
.217 sep
f
208.378 135.341 mo
207.346 135.451 206.421 134.703 206.31 133.672 cv
206.2 132.641 206.947 131.714 207.979 131.604 cv
209.011 131.494 209.936 132.241 210.047 133.273 cv
210.157 134.305 209.409 135.23 208.378 135.341 cv
1 /0 /CSD get_res sepcs
.189 sep
f
208.217 134.918 mo
207.329 135.013 206.534 134.369 206.438 133.483 cv
206.345 132.596 206.987 131.801 207.874 131.705 cv
208.761 131.611 209.557 132.253 209.651 133.141 cv
209.746 134.027 209.103 134.822 208.217 134.918 cv
1 /0 /CSD get_res sepcs
.161 sep
f
208.056 134.494 mo
207.313 134.573 206.647 134.036 206.568 133.294 cv
206.489 132.552 207.026 131.886 207.768 131.807 cv
208.511 131.727 209.177 132.266 209.256 133.007 cv
209.335 133.749 208.798 134.415 208.056 134.494 cv
1 /0 /CSD get_res sepcs
.133 sep
f
207.894 134.071 mo
207.297 134.135 206.761 133.702 206.697 133.104 cv
206.634 132.508 207.065 131.972 207.663 131.908 cv
208.261 131.844 208.796 132.276 208.86 132.874 cv
208.924 133.472 208.491 134.007 207.894 134.071 cv
1 /0 /CSD get_res sepcs
.106 sep
f
207.733 133.647 mo
207.28 133.696 206.874 133.368 206.826 132.916 cv
206.778 132.464 207.105 132.057 207.557 132.009 cv
208.011 131.961 208.417 132.288 208.465 132.74 cv
208.513 133.193 208.186 133.6 207.733 133.647 cv
1 /0 /CSD get_res sepcs
.078 sep
f
207.452 132.11 mo
207.145 132.143 206.923 132.419 206.956 132.727 cv
206.988 133.034 207.265 133.257 207.571 133.225 cv
207.88 133.191 208.103 132.915 208.069 132.607 cv
208.036 132.301 207.761 132.078 207.452 132.11 cv
1 /0 /CSD get_res sepcs
.05 sep
f
190.452 110.598 mo
188.53 110.803 187.138 112.527 187.343 114.449 cv
187.548 116.372 189.272 117.764 191.194 117.559 cv
193.116 117.353 194.509 115.629 194.304 113.707 cv
194.098 111.785 192.374 110.393 190.452 110.598 cv
1 /0 /CSD get_res sepcs
.2 sep
f
190.452 110.598 mo
188.53 110.803 187.138 112.527 187.343 114.449 cv
187.548 116.372 189.272 117.764 191.194 117.559 cv
193.116 117.353 194.509 115.629 194.304 113.707 cv
194.098 111.785 192.374 110.393 190.452 110.598 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
191.116 117.321 mo
189.298 117.516 187.666 116.199 187.472 114.38 cv
187.278 112.561 188.595 110.93 190.413 110.736 cv
192.231 110.542 193.863 111.859 194.057 113.678 cv
194.251 115.496 192.935 117.127 191.116 117.321 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
191.038 117.084 mo
189.323 117.268 187.784 116.025 187.602 114.31 cv
187.419 112.596 188.661 111.057 190.376 110.874 cv
192.091 110.691 193.629 111.934 193.811 113.648 cv
193.995 115.363 192.753 116.901 191.038 117.084 cv
1 /0 /CSD get_res sepcs
.267 sep
f
190.337 111.012 mo
188.725 111.184 187.56 112.63 187.731 114.24 cv
187.903 115.852 189.349 117.019 190.96 116.847 cv
192.571 116.676 193.738 115.229 193.566 113.618 cv
193.394 112.007 191.948 110.84 190.337 111.012 cv
1 /0 /CSD get_res sepcs
.3 sep
f
190.799 116.424 mo
189.333 116.58 188.016 115.518 187.86 114.052 cv
187.704 112.586 188.766 111.269 190.232 111.113 cv
191.698 110.957 193.015 112.018 193.171 113.485 cv
193.327 114.951 192.265 116.268 190.799 116.424 cv
1 /0 /CSD get_res sepcs
.272 sep
f
190.638 116 mo
189.315 116.141 188.13 115.185 187.989 113.863 cv
187.849 112.541 188.806 111.355 190.127 111.215 cv
191.448 111.073 192.634 112.03 192.775 113.352 cv
192.916 114.674 191.959 115.859 190.638 116 cv
1 /0 /CSD get_res sepcs
.245 sep
f
190.477 115.576 mo
189.3 115.703 188.244 114.851 188.118 113.674 cv
187.993 112.497 188.845 111.441 190.022 111.315 cv
191.198 111.189 192.255 112.042 192.38 113.219 cv
192.505 114.395 191.653 115.451 190.477 115.576 cv
1 /0 /CSD get_res sepcs
.217 sep
f
190.315 115.153 mo
189.283 115.264 188.358 114.516 188.247 113.484 cv
188.138 112.453 188.885 111.527 189.917 111.417 cv
190.948 111.307 191.874 112.054 191.984 113.086 cv
192.095 114.117 191.347 115.043 190.315 115.153 cv
1 /0 /CSD get_res sepcs
.189 sep
f
190.154 114.73 mo
189.267 114.825 188.472 114.182 188.376 113.295 cv
188.282 112.408 188.925 111.613 189.811 111.518 cv
190.698 111.424 191.494 112.065 191.589 112.953 cv
191.684 113.84 191.041 114.635 190.154 114.73 cv
1 /0 /CSD get_res sepcs
.161 sep
f
189.993 114.307 mo
189.251 114.386 188.585 113.849 188.506 113.106 cv
188.427 112.364 188.964 111.698 189.706 111.619 cv
190.448 111.54 191.114 112.078 191.193 112.819 cv
191.272 113.561 190.735 114.227 189.993 114.307 cv
1 /0 /CSD get_res sepcs
.133 sep
f
189.831 113.883 mo
189.234 113.947 188.698 113.515 188.635 112.917 cv
188.571 112.32 189.003 111.784 189.601 111.721 cv
190.198 111.656 190.733 112.09 190.798 112.686 cv
190.861 113.283 190.429 113.819 189.831 113.883 cv
1 /0 /CSD get_res sepcs
.106 sep
f
189.671 113.46 mo
189.218 113.508 188.811 113.181 188.764 112.728 cv
188.716 112.275 189.043 111.869 189.495 111.821 cv
189.948 111.773 190.354 112.102 190.402 112.553 cv
190.45 113.006 190.123 113.412 189.671 113.46 cv
1 /0 /CSD get_res sepcs
.078 sep
f
189.39 111.923 mo
189.083 111.955 188.86 112.231 188.894 112.539 cv
188.926 112.847 189.202 113.069 189.509 113.037 cv
189.817 113.004 190.04 112.727 190.007 112.42 cv
189.973 112.113 189.698 111.891 189.39 111.923 cv
1 /0 /CSD get_res sepcs
.05 sep
f
163.83 112.451 mo
161.907 112.656 160.517 114.381 160.722 116.302 cv
160.927 118.225 162.65 119.616 164.573 119.411 cv
166.495 119.207 167.887 117.482 167.682 115.56 cv
167.476 113.638 165.752 112.246 163.83 112.451 cv
1 /0 /CSD get_res sepcs
.2 sep
f
163.83 112.451 mo
161.907 112.656 160.517 114.381 160.722 116.302 cv
160.927 118.225 162.65 119.616 164.573 119.411 cv
166.495 119.207 167.887 117.482 167.682 115.56 cv
167.476 113.638 165.752 112.246 163.83 112.451 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
164.495 119.174 mo
162.677 119.368 161.044 118.051 160.851 116.233 cv
160.656 114.414 161.974 112.783 163.792 112.589 cv
165.61 112.394 167.241 113.712 167.436 115.53 cv
167.63 117.349 166.313 118.98 164.495 119.174 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
164.417 118.937 mo
162.702 119.12 161.163 117.878 160.979 116.163 cv
160.797 114.448 162.039 112.91 163.754 112.727 cv
165.469 112.544 167.007 113.785 167.19 115.501 cv
167.373 117.215 166.132 118.754 164.417 118.937 cv
1 /0 /CSD get_res sepcs
.267 sep
f
163.716 112.865 mo
162.104 113.037 160.937 114.482 161.109 116.094 cv
161.281 117.705 162.728 118.872 164.339 118.7 cv
165.95 118.527 167.116 117.082 166.944 115.472 cv
166.772 113.859 165.327 112.693 163.716 112.865 cv
1 /0 /CSD get_res sepcs
.3 sep
f
164.177 118.276 mo
162.71 118.433 161.395 117.371 161.239 115.904 cv
161.082 114.438 162.144 113.123 163.61 112.966 cv
165.077 112.81 166.392 113.871 166.549 115.338 cv
166.706 116.805 165.644 118.12 164.177 118.276 cv
1 /0 /CSD get_res sepcs
.272 sep
f
164.016 117.853 mo
162.694 117.994 161.509 117.037 161.368 115.715 cv
161.227 114.394 162.184 113.209 163.505 113.067 cv
164.827 112.926 166.013 113.883 166.153 115.205 cv
166.294 116.526 165.337 117.712 164.016 117.853 cv
1 /0 /CSD get_res sepcs
.245 sep
f
163.854 117.43 mo
162.679 117.555 161.622 116.703 161.497 115.526 cv
161.371 114.35 162.223 113.294 163.4 113.168 cv
164.577 113.043 165.632 113.894 165.759 115.071 cv
165.884 116.248 165.031 117.305 163.854 117.43 cv
1 /0 /CSD get_res sepcs
.217 sep
f
163.693 117.006 mo
162.661 117.116 161.735 116.369 161.626 115.338 cv
161.516 114.306 162.263 113.38 163.295 113.269 cv
164.327 113.16 165.253 113.906 165.362 114.938 cv
165.473 115.971 164.725 116.896 163.693 117.006 cv
1 /0 /CSD get_res sepcs
.189 sep
f
163.532 116.583 mo
162.645 116.677 161.85 116.035 161.755 115.147 cv
161.66 114.262 162.303 113.465 163.189 113.371 cv
164.077 113.276 164.872 113.918 164.967 114.806 cv
165.061 115.692 164.419 116.488 163.532 116.583 cv
1 /0 /CSD get_res sepcs
.161 sep
f
163.371 116.159 mo
162.629 116.238 161.964 115.701 161.884 114.959 cv
161.805 114.217 162.343 113.551 163.085 113.472 cv
163.827 113.393 164.492 113.93 164.571 114.672 cv
164.651 115.414 164.113 116.08 163.371 116.159 cv
1 /0 /CSD get_res sepcs
.133 sep
f
163.21 115.736 mo
162.612 115.8 162.077 115.367 162.013 114.769 cv
161.949 114.173 162.382 113.637 162.979 113.573 cv
163.577 113.51 164.112 113.941 164.176 114.539 cv
164.239 115.137 163.808 115.672 163.21 115.736 cv
1 /0 /CSD get_res sepcs
.106 sep
f
163.049 115.312 mo
162.597 115.361 162.19 115.033 162.141 114.581 cv
162.094 114.129 162.421 113.723 162.874 113.674 cv
163.326 113.626 163.732 113.953 163.78 114.406 cv
163.829 114.858 163.501 115.265 163.049 115.312 cv
1 /0 /CSD get_res sepcs
.078 sep
f
162.768 113.775 mo
162.461 113.809 162.238 114.084 162.271 114.392 cv
162.304 114.699 162.58 114.922 162.888 114.889 cv
163.194 114.856 163.418 114.58 163.385 114.273 cv
163.353 113.965 163.076 113.742 162.768 113.775 cv
1 /0 /CSD get_res sepcs
.05 sep
f
140.791 130.019 mo
138.869 130.226 137.477 131.949 137.682 133.872 cv
137.887 135.793 139.611 137.185 141.534 136.98 cv
143.456 136.775 144.848 135.051 144.642 133.129 cv
144.437 131.207 142.713 129.814 140.791 130.019 cv
1 /0 /CSD get_res sepcs
.2 sep
f
140.791 130.019 mo
138.869 130.226 137.477 131.949 137.682 133.872 cv
137.887 135.793 139.611 137.185 141.534 136.98 cv
143.456 136.775 144.848 135.051 144.642 133.129 cv
144.437 131.207 142.713 129.814 140.791 130.019 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
141.456 136.743 mo
139.637 136.937 138.005 135.62 137.811 133.802 cv
137.618 131.983 138.935 130.352 140.753 130.158 cv
142.571 129.964 144.203 131.28 144.397 133.1 cv
144.591 134.918 143.274 136.549 141.456 136.743 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
141.377 136.506 mo
139.663 136.688 138.124 135.447 137.941 133.732 cv
137.758 132.018 139 130.479 140.715 130.296 cv
142.43 130.113 143.968 131.354 144.151 133.07 cv
144.334 134.784 143.092 136.323 141.377 136.506 cv
1 /0 /CSD get_res sepcs
.267 sep
f
140.677 130.434 mo
139.065 130.605 137.898 132.051 138.071 133.663 cv
138.243 135.273 139.688 136.441 141.299 136.269 cv
142.911 136.097 144.078 134.651 143.906 133.04 cv
143.734 131.429 142.288 130.262 140.677 130.434 cv
1 /0 /CSD get_res sepcs
.3 sep
f
141.138 135.846 mo
139.672 136.002 138.356 134.939 138.2 133.474 cv
138.043 132.008 139.105 130.691 140.572 130.535 cv
142.038 130.379 143.353 131.44 143.51 132.906 cv
143.666 134.373 142.604 135.688 141.138 135.846 cv
1 /0 /CSD get_res sepcs
.272 sep
f
140.977 135.422 mo
139.655 135.563 138.47 134.605 138.329 133.284 cv
138.187 131.963 139.144 130.777 140.466 130.637 cv
141.788 130.495 142.974 131.452 143.114 132.773 cv
143.255 134.096 142.298 135.281 140.977 135.422 cv
1 /0 /CSD get_res sepcs
.245 sep
f
140.816 134.998 mo
139.639 135.124 138.583 134.271 138.457 133.096 cv
138.332 131.918 139.185 130.863 140.361 130.737 cv
141.538 130.611 142.593 131.464 142.719 132.641 cv
142.845 133.817 141.993 134.873 140.816 134.998 cv
1 /0 /CSD get_res sepcs
.217 sep
f
140.655 134.575 mo
139.622 134.685 138.697 133.938 138.587 132.906 cv
138.477 131.875 139.224 130.949 140.256 130.839 cv
141.288 130.728 142.213 131.476 142.323 132.508 cv
142.433 133.539 141.686 134.465 140.655 134.575 cv
1 /0 /CSD get_res sepcs
.189 sep
f
140.493 134.151 mo
139.606 134.247 138.811 133.604 138.716 132.718 cv
138.621 131.83 139.264 131.034 140.15 130.939 cv
141.038 130.846 141.833 131.487 141.928 132.375 cv
142.022 133.262 141.38 134.057 140.493 134.151 cv
1 /0 /CSD get_res sepcs
.161 sep
f
140.332 133.728 mo
139.59 133.808 138.924 133.269 138.845 132.527 cv
138.766 131.786 139.303 131.12 140.045 131.041 cv
140.788 130.962 141.453 131.499 141.532 132.241 cv
141.612 132.983 141.074 133.649 140.332 133.728 cv
1 /0 /CSD get_res sepcs
.133 sep
f
140.171 133.305 mo
139.574 133.368 139.038 132.935 138.974 132.339 cv
138.91 131.742 139.343 131.206 139.94 131.143 cv
140.538 131.078 141.073 131.511 141.137 132.108 cv
141.201 132.705 140.768 133.241 140.171 133.305 cv
1 /0 /CSD get_res sepcs
.106 sep
f
140.01 132.882 mo
139.557 132.93 139.151 132.602 139.103 132.15 cv
139.055 131.697 139.382 131.292 139.835 131.243 cv
140.288 131.195 140.693 131.522 140.742 131.976 cv
140.79 132.428 140.462 132.834 140.01 132.882 cv
1 /0 /CSD get_res sepcs
.078 sep
f
139.729 131.345 mo
139.422 131.377 139.2 131.653 139.232 131.961 cv
139.265 132.268 139.541 132.491 139.849 132.458 cv
140.156 132.426 140.379 132.149 140.346 131.842 cv
140.313 131.534 140.037 131.311 139.729 131.345 cv
1 /0 /CSD get_res sepcs
.05 sep
f
119.103 123.332 mo
117.181 123.538 115.789 125.262 115.995 127.185 cv
116.2 129.105 117.924 130.498 119.846 130.293 cv
121.768 130.088 123.16 128.363 122.955 126.441 cv
122.75 124.519 121.025 123.127 119.103 123.332 cv
1 /0 /CSD get_res sepcs
.2 sep
f
119.103 123.332 mo
117.181 123.538 115.789 125.262 115.995 127.185 cv
116.2 129.105 117.924 130.498 119.846 130.293 cv
121.768 130.088 123.16 128.363 122.955 126.441 cv
122.75 124.519 121.025 123.127 119.103 123.332 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
119.768 130.056 mo
117.95 130.25 116.318 128.933 116.124 127.114 cv
115.93 125.296 117.247 123.664 119.065 123.471 cv
120.884 123.276 122.515 124.593 122.709 126.412 cv
122.903 128.23 121.586 129.861 119.768 130.056 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
119.69 129.818 mo
117.975 130.001 116.436 128.76 116.253 127.045 cv
116.071 125.33 117.312 123.792 119.027 123.608 cv
120.742 123.426 122.281 124.667 122.464 126.383 cv
122.646 128.097 121.405 129.636 119.69 129.818 cv
1 /0 /CSD get_res sepcs
.267 sep
f
118.989 123.746 mo
117.378 123.918 116.211 125.363 116.383 126.976 cv
116.555 128.586 118 129.754 119.612 129.582 cv
121.223 129.409 122.39 127.964 122.218 126.352 cv
122.046 124.741 120.601 123.574 118.989 123.746 cv
1 /0 /CSD get_res sepcs
.3 sep
f
119.451 129.158 mo
117.984 129.314 116.668 128.252 116.512 126.786 cv
116.355 125.32 117.417 124.004 118.884 123.848 cv
120.351 123.691 121.666 124.753 121.822 126.219 cv
121.979 127.685 120.917 129.001 119.451 129.158 cv
1 /0 /CSD get_res sepcs
.272 sep
f
119.29 128.734 mo
117.968 128.876 116.782 127.918 116.641 126.597 cv
116.5 125.275 117.457 124.09 118.779 123.949 cv
120.1 123.808 121.286 124.765 121.427 126.086 cv
121.568 127.408 120.611 128.594 119.29 128.734 cv
1 /0 /CSD get_res sepcs
.245 sep
f
119.128 128.31 mo
117.952 128.436 116.896 127.584 116.77 126.408 cv
116.644 125.23 117.497 124.176 118.673 124.05 cv
119.85 123.924 120.906 124.776 121.031 125.953 cv
121.157 127.13 120.305 128.185 119.128 128.31 cv
1 /0 /CSD get_res sepcs
.217 sep
f
118.967 127.888 mo
117.935 127.997 117.009 127.251 116.899 126.219 cv
116.789 125.187 117.537 124.262 118.568 124.151 cv
119.6 124.041 120.526 124.788 120.636 125.82 cv
120.746 126.852 119.999 127.777 118.967 127.888 cv
1 /0 /CSD get_res sepcs
.189 sep
f
118.806 127.464 mo
117.919 127.56 117.123 126.917 117.028 126.03 cv
116.933 125.143 117.576 124.347 118.463 124.252 cv
119.35 124.158 120.146 124.8 120.24 125.687 cv
120.335 126.574 119.693 127.369 118.806 127.464 cv
1 /0 /CSD get_res sepcs
.161 sep
f
118.644 127.041 mo
117.902 127.12 117.237 126.582 117.157 125.84 cv
117.078 125.099 117.616 124.433 118.358 124.353 cv
119.1 124.274 119.766 124.811 119.845 125.554 cv
119.924 126.296 119.387 126.962 118.644 127.041 cv
1 /0 /CSD get_res sepcs
.133 sep
f
118.483 126.617 mo
117.886 126.681 117.35 126.248 117.286 125.651 cv
117.223 125.055 117.655 124.518 118.252 124.455 cv
118.85 124.391 119.386 124.823 119.45 125.421 cv
119.513 126.018 119.081 126.554 118.483 126.617 cv
1 /0 /CSD get_res sepcs
.106 sep
f
118.322 126.194 mo
117.87 126.242 117.464 125.915 117.415 125.463 cv
117.367 125.01 117.695 124.604 118.147 124.556 cv
118.6 124.508 119.006 124.835 119.054 125.288 cv
119.102 125.74 118.774 126.146 118.322 126.194 cv
1 /0 /CSD get_res sepcs
.078 sep
f
118.042 124.657 mo
117.735 124.689 117.512 124.966 117.545 125.273 cv
117.578 125.581 117.853 125.804 118.161 125.77 cv
118.469 125.738 118.691 125.462 118.659 125.154 cv
118.625 124.847 118.35 124.624 118.042 124.657 cv
1 /0 /CSD get_res sepcs
.05 sep
f
267.14 102.473 mo
265.218 102.678 263.825 104.402 264.03 106.324 cv
264.235 108.246 265.96 109.639 267.882 109.434 cv
269.804 109.228 271.196 107.504 270.991 105.582 cv
270.786 103.66 269.061 102.268 267.14 102.473 cv
1 /0 /CSD get_res sepcs
.2 sep
f
267.14 102.473 mo
265.218 102.678 263.825 104.402 264.03 106.324 cv
264.235 108.246 265.96 109.639 267.882 109.434 cv
269.804 109.228 271.196 107.504 270.991 105.582 cv
270.786 103.66 269.061 102.268 267.14 102.473 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
267.804 109.196 mo
265.985 109.391 264.354 108.074 264.159 106.255 cv
263.966 104.436 265.282 102.805 267.1 102.611 cv
268.919 102.417 270.55 103.734 270.745 105.553 cv
270.938 107.371 269.622 109.002 267.804 109.196 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
267.725 108.959 mo
266.011 109.143 264.472 107.9 264.288 106.185 cv
264.106 104.471 265.348 102.932 267.063 102.749 cv
268.778 102.566 270.315 103.809 270.499 105.523 cv
270.683 107.238 269.44 108.776 267.725 108.959 cv
1 /0 /CSD get_res sepcs
.267 sep
f
267.024 102.887 mo
265.413 103.059 264.247 104.505 264.419 106.115 cv
264.591 107.727 266.036 108.894 267.647 108.723 cv
269.259 108.551 270.425 107.104 270.253 105.493 cv
270.083 103.882 268.636 102.715 267.024 102.887 cv
1 /0 /CSD get_res sepcs
.3 sep
f
267.487 108.299 mo
266.02 108.455 264.704 107.393 264.548 105.927 cv
264.391 104.461 265.454 103.144 266.921 102.988 cv
268.386 102.832 269.702 103.893 269.858 105.36 cv
270.015 106.826 268.952 108.143 267.487 108.299 cv
1 /0 /CSD get_res sepcs
.272 sep
f
267.325 107.875 mo
266.003 108.016 264.817 107.059 264.677 105.738 cv
264.536 104.416 265.493 103.23 266.813 103.09 cv
268.136 102.948 269.321 103.905 269.462 105.227 cv
269.604 106.549 268.645 107.734 267.325 107.875 cv
1 /0 /CSD get_res sepcs
.245 sep
f
267.163 107.451 mo
265.987 107.578 264.933 106.726 264.806 105.549 cv
264.681 104.372 265.532 103.316 266.71 103.19 cv
267.886 103.064 268.942 103.917 269.067 105.094 cv
269.192 106.27 268.341 107.326 267.163 107.451 cv
1 /0 /CSD get_res sepcs
.217 sep
f
267.003 107.028 mo
265.97 107.139 265.046 106.391 264.935 105.359 cv
264.825 104.328 265.571 103.402 266.604 103.292 cv
267.636 103.182 268.561 103.929 268.671 104.961 cv
268.782 105.992 268.034 106.918 267.003 107.028 cv
1 /0 /CSD get_res sepcs
.189 sep
f
266.841 106.605 mo
265.954 106.699 265.159 106.057 265.063 105.17 cv
264.97 104.283 265.612 103.488 266.499 103.393 cv
267.386 103.299 268.182 103.94 268.276 104.828 cv
268.37 105.715 267.729 106.51 266.841 106.605 cv
1 /0 /CSD get_res sepcs
.161 sep
f
266.681 106.182 mo
265.938 106.261 265.272 105.724 265.192 104.981 cv
265.114 104.239 265.651 103.573 266.394 103.494 cv
267.136 103.415 267.802 103.953 267.88 104.694 cv
267.96 105.436 267.423 106.102 266.681 106.182 cv
1 /0 /CSD get_res sepcs
.133 sep
f
266.518 105.758 mo
265.921 105.822 265.386 105.39 265.321 104.792 cv
265.259 104.195 265.69 103.659 266.288 103.596 cv
266.886 103.531 267.421 103.965 267.485 104.561 cv
267.55 105.158 267.116 105.694 266.518 105.758 cv
1 /0 /CSD get_res sepcs
.106 sep
f
266.358 105.335 mo
265.905 105.383 265.499 105.056 265.45 104.603 cv
265.403 104.15 265.729 103.744 266.183 103.696 cv
266.636 103.648 267.042 103.977 267.091 104.428 cv
267.138 104.881 266.81 105.287 266.358 105.335 cv
1 /0 /CSD get_res sepcs
.078 sep
f
266.077 103.798 mo
265.77 103.83 265.548 104.106 265.581 104.414 cv
265.612 104.722 265.89 104.944 266.196 104.912 cv
266.505 104.879 266.728 104.602 266.694 104.295 cv
266.661 103.988 266.386 103.766 266.077 103.798 cv
1 /0 /CSD get_res sepcs
.05 sep
f
228.14 108.785 mo
226.218 108.99 224.825 110.715 225.03 112.637 cv
225.235 114.559 226.96 115.951 228.882 115.746 cv
230.804 115.541 232.196 113.816 231.991 111.894 cv
231.786 109.973 230.061 108.58 228.14 108.785 cv
1 /0 /CSD get_res sepcs
.2 sep
f
228.14 108.785 mo
226.218 108.99 224.825 110.715 225.03 112.637 cv
225.235 114.559 226.96 115.951 228.882 115.746 cv
230.804 115.541 232.196 113.816 231.991 111.894 cv
231.786 109.973 230.061 108.58 228.14 108.785 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
228.804 115.509 mo
226.985 115.703 225.353 114.387 225.159 112.567 cv
224.966 110.749 226.282 109.117 228.1 108.924 cv
229.919 108.729 231.551 110.047 231.745 111.865 cv
231.938 113.684 230.622 115.314 228.804 115.509 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
228.726 115.271 mo
227.011 115.455 225.472 114.213 225.289 112.498 cv
225.106 110.783 226.348 109.244 228.063 109.061 cv
229.778 108.879 231.316 110.121 231.499 111.836 cv
231.683 113.551 230.44 115.089 228.726 115.271 cv
1 /0 /CSD get_res sepcs
.267 sep
f
228.024 109.199 mo
226.413 109.371 225.247 110.817 225.419 112.428 cv
225.591 114.039 227.036 115.207 228.647 115.034 cv
230.259 114.863 231.426 113.417 231.254 111.806 cv
231.082 110.194 229.636 109.027 228.024 109.199 cv
1 /0 /CSD get_res sepcs
.3 sep
f
228.486 114.611 mo
227.02 114.768 225.704 113.705 225.548 112.239 cv
225.391 110.773 226.453 109.457 227.92 109.301 cv
229.386 109.144 230.702 110.206 230.858 111.673 cv
231.015 113.139 229.952 114.455 228.486 114.611 cv
1 /0 /CSD get_res sepcs
.272 sep
f
228.325 114.187 mo
227.003 114.328 225.817 113.371 225.677 112.051 cv
225.536 110.728 226.493 109.543 227.814 109.402 cv
229.136 109.261 230.321 110.218 230.462 111.539 cv
230.603 112.861 229.646 114.047 228.325 114.187 cv
1 /0 /CSD get_res sepcs
.245 sep
f
228.164 113.764 mo
226.987 113.891 225.932 113.038 225.806 111.861 cv
225.681 110.685 226.532 109.629 227.71 109.503 cv
228.886 109.377 229.942 110.229 230.067 111.406 cv
230.192 112.583 229.341 113.639 228.164 113.764 cv
1 /0 /CSD get_res sepcs
.217 sep
f
228.003 113.341 mo
226.971 113.451 226.046 112.703 225.935 111.672 cv
225.825 110.641 226.572 109.715 227.604 109.604 cv
228.636 109.494 229.561 110.241 229.672 111.273 cv
229.782 112.305 229.034 113.23 228.003 113.341 cv
1 /0 /CSD get_res sepcs
.189 sep
f
227.841 112.918 mo
226.954 113.012 226.159 112.369 226.063 111.482 cv
225.97 110.596 226.612 109.801 227.499 109.705 cv
228.386 109.611 229.182 110.253 229.276 111.141 cv
229.37 112.027 228.728 112.822 227.841 112.918 cv
1 /0 /CSD get_res sepcs
.161 sep
f
227.681 112.494 mo
226.938 112.573 226.272 112.036 226.193 111.294 cv
226.114 110.552 226.651 109.886 227.394 109.807 cv
228.136 109.727 228.802 110.266 228.881 111.007 cv
228.96 111.749 228.423 112.415 227.681 112.494 cv
1 /0 /CSD get_res sepcs
.133 sep
f
227.519 112.07 mo
226.922 112.135 226.386 111.702 226.322 111.104 cv
226.259 110.508 226.69 109.972 227.288 109.908 cv
227.886 109.844 228.421 110.277 228.485 110.874 cv
228.549 111.471 228.116 112.007 227.519 112.07 cv
1 /0 /CSD get_res sepcs
.106 sep
f
227.358 111.647 mo
226.905 111.695 226.499 111.368 226.451 110.916 cv
226.403 110.463 226.73 110.057 227.183 110.009 cv
227.636 109.961 228.042 110.289 228.09 110.74 cv
228.138 111.193 227.81 111.6 227.358 111.647 cv
1 /0 /CSD get_res sepcs
.078 sep
f
227.077 110.11 mo
226.77 110.143 226.548 110.419 226.581 110.727 cv
226.613 111.034 226.89 111.257 227.196 111.225 cv
227.505 111.191 227.728 110.915 227.694 110.607 cv
227.661 110.301 227.386 110.078 227.077 110.11 cv
1 /0 /CSD get_res sepcs
.05 sep
f
135.162 104.197 mo
133.24 104.402 131.848 106.127 132.053 108.049 cv
132.258 109.972 133.983 111.363 135.905 111.158 cv
137.827 110.953 139.219 109.228 139.014 107.307 cv
138.809 105.385 137.084 103.992 135.162 104.197 cv
1 /0 /CSD get_res sepcs
.2 sep
f
135.162 104.197 mo
133.24 104.402 131.848 106.127 132.053 108.049 cv
132.258 109.972 133.983 111.363 135.905 111.158 cv
137.827 110.953 139.219 109.228 139.014 107.307 cv
138.809 105.385 137.084 103.992 135.162 104.197 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
135.827 110.921 mo
134.008 111.115 132.376 109.799 132.182 107.979 cv
131.989 106.161 133.306 104.529 135.124 104.336 cv
136.942 104.142 138.574 105.459 138.768 107.277 cv
138.962 109.096 137.645 110.727 135.827 110.921 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
135.748 110.684 mo
134.034 110.867 132.495 109.625 132.312 107.91 cv
132.129 106.195 133.371 104.656 135.086 104.474 cv
136.801 104.291 138.339 105.533 138.522 107.248 cv
138.705 108.963 137.463 110.501 135.748 110.684 cv
1 /0 /CSD get_res sepcs
.267 sep
f
135.048 104.611 mo
133.436 104.783 132.269 106.229 132.442 107.84 cv
132.614 109.451 134.059 110.619 135.67 110.447 cv
137.282 110.275 138.449 108.829 138.277 107.218 cv
138.105 105.606 136.659 104.439 135.048 104.611 cv
1 /0 /CSD get_res sepcs
.3 sep
f
135.509 110.023 mo
134.043 110.18 132.727 109.117 132.571 107.651 cv
132.414 106.185 133.476 104.869 134.943 104.713 cv
136.409 104.557 137.725 105.618 137.881 107.085 cv
138.038 108.551 136.975 109.867 135.509 110.023 cv
1 /0 /CSD get_res sepcs
.272 sep
f
135.348 109.6 mo
134.026 109.74 132.841 108.784 132.7 107.463 cv
132.559 106.141 133.515 104.955 134.837 104.814 cv
136.159 104.674 137.345 105.63 137.485 106.951 cv
137.626 108.273 136.669 109.459 135.348 109.6 cv
1 /0 /CSD get_res sepcs
.245 sep
f
135.187 109.177 mo
134.01 109.303 132.954 108.449 132.828 107.273 cv
132.704 106.097 133.556 105.041 134.732 104.915 cv
135.909 104.789 136.964 105.642 137.09 106.818 cv
137.216 107.995 136.364 109.051 135.187 109.177 cv
1 /0 /CSD get_res sepcs
.217 sep
f
135.026 108.753 mo
133.994 108.863 133.068 108.116 132.958 107.084 cv
132.848 106.053 133.595 105.127 134.627 105.017 cv
135.659 104.906 136.584 105.654 136.694 106.685 cv
136.805 107.717 136.058 108.643 135.026 108.753 cv
1 /0 /CSD get_res sepcs
.189 sep
f
134.864 108.33 mo
133.978 108.424 133.182 107.782 133.087 106.894 cv
132.992 106.008 133.635 105.213 134.521 105.117 cv
135.409 105.023 136.205 105.666 136.299 106.553 cv
136.394 107.439 135.751 108.235 134.864 108.33 cv
1 /0 /CSD get_res sepcs
.161 sep
f
134.703 107.906 mo
133.961 107.985 133.295 107.448 133.216 106.706 cv
133.137 105.964 133.674 105.298 134.416 105.219 cv
135.159 105.14 135.824 105.678 135.904 106.42 cv
135.983 107.161 135.445 107.827 134.703 107.906 cv
1 /0 /CSD get_res sepcs
.133 sep
f
134.542 107.482 mo
133.945 107.547 133.409 107.114 133.345 106.517 cv
133.281 105.92 133.714 105.384 134.311 105.32 cv
134.909 105.256 135.444 105.689 135.508 106.286 cv
135.572 106.883 135.139 107.42 134.542 107.482 cv
1 /0 /CSD get_res sepcs
.106 sep
f
134.381 107.06 mo
133.928 107.107 133.522 106.78 133.474 106.328 cv
133.426 105.875 133.753 105.47 134.206 105.422 cv
134.659 105.373 135.064 105.701 135.113 106.152 cv
135.161 106.605 134.833 107.012 134.381 107.06 cv
1 /0 /CSD get_res sepcs
.078 sep
f
134.101 105.522 mo
133.793 105.555 133.571 105.831 133.603 106.139 cv
133.636 106.446 133.912 106.669 134.22 106.637 cv
134.527 106.603 134.75 106.328 134.717 106.019 cv
134.684 105.713 134.408 105.49 134.101 105.522 cv
1 /0 /CSD get_res sepcs
.05 sep
f
101.518 111.764 mo
99.595 111.969 98.2041 113.693 98.4091 115.614 cv
98.614 117.537 100.338 118.929 102.26 118.724 cv
104.182 118.519 105.574 116.795 105.369 114.872 cv
105.164 112.95 103.439 111.559 101.518 111.764 cv
1 /0 /CSD get_res sepcs
.2 sep
f
101.518 111.764 mo
99.595 111.969 98.2041 113.693 98.4091 115.614 cv
98.614 117.537 100.338 118.929 102.26 118.724 cv
104.182 118.519 105.574 116.795 105.369 114.872 cv
105.164 112.95 103.439 111.559 101.518 111.764 cv
cp
true sop
1 /0 /CSD get_res sepcs
.2 sep
@
102.182 118.486 mo
100.364 118.681 98.7321 117.363 98.5381 115.546 cv
98.3441 113.727 99.6611 112.096 101.479 111.901 cv
103.298 111.707 104.929 113.024 105.123 114.843 cv
105.317 116.661 104 118.293 102.182 118.486 cv
false sop
1 /0 /CSD get_res sepcs
.233 sep
f
102.104 118.25 mo
100.389 118.433 98.851 117.19 98.6671 115.476 cv
98.4841 113.761 99.726 112.223 101.441 112.039 cv
103.156 111.856 104.695 113.098 104.877 114.813 cv
105.061 116.527 103.819 118.066 102.104 118.25 cv
1 /0 /CSD get_res sepcs
.267 sep
f
101.403 112.178 mo
99.7921 112.35 98.625 113.795 98.797 115.406 cv
98.969 117.018 100.414 118.185 102.026 118.013 cv
103.637 117.84 104.804 116.394 104.632 114.784 cv
104.46 113.172 103.015 112.006 101.403 112.178 cv
1 /0 /CSD get_res sepcs
.3 sep
f
101.865 117.589 mo
100.398 117.745 99.082 116.684 98.9261 115.217 cv
98.7691 113.751 99.832 112.435 101.298 112.278 cv
102.765 112.122 104.08 113.184 104.236 114.65 cv
104.393 116.117 103.331 117.433 101.865 117.589 cv
1 /0 /CSD get_res sepcs
.272 sep
f
101.703 117.166 mo
100.382 117.307 99.196 116.35 99.0551 115.027 cv
98.914 113.707 99.871 112.521 101.193 112.38 cv
102.514 112.238 103.7 113.195 103.841 114.518 cv
103.982 115.839 103.025 117.024 101.703 117.166 cv
1 /0 /CSD get_res sepcs
.245 sep
f
101.542 116.742 mo
100.366 116.867 99.31 116.016 99.184 114.839 cv
99.058 113.662 99.911 112.606 101.088 112.48 cv
102.264 112.355 103.32 113.207 103.446 114.385 cv
103.571 115.56 102.719 116.617 101.542 116.742 cv
1 /0 /CSD get_res sepcs
.217 sep
f
101.381 116.318 mo
100.349 116.429 99.423 115.682 99.313 114.65 cv
99.203 113.618 99.951 112.692 100.982 112.582 cv
102.014 112.473 102.94 113.219 103.05 114.251 cv
103.16 115.283 102.413 116.209 101.381 116.318 cv
1 /0 /CSD get_res sepcs
.189 sep
f
101.22 115.895 mo
100.333 115.989 99.537 115.348 99.442 114.461 cv
99.3481 113.574 99.9901 112.777 100.877 112.684 cv
101.764 112.589 102.56 113.23 102.654 114.118 cv
102.749 115.005 102.107 115.801 101.22 115.895 cv
1 /0 /CSD get_res sepcs
.161 sep
f
101.058 115.472 mo
100.316 115.551 99.651 115.014 99.5721 114.271 cv
99.4921 113.529 100.03 112.863 100.772 112.784 cv
101.514 112.705 102.18 113.242 102.259 113.984 cv
102.338 114.727 101.801 115.393 101.058 115.472 cv
1 /0 /CSD get_res sepcs
.133 sep
f
100.897 115.049 mo
100.3 115.112 99.7641 114.68 99.701 114.082 cv
99.6371 113.485 100.069 112.949 100.666 112.886 cv
101.264 112.822 101.8 113.254 101.863 113.852 cv
101.927 114.449 101.495 114.984 100.897 115.049 cv
1 /0 /CSD get_res sepcs
.106 sep
f
100.736 114.625 mo
100.284 114.674 99.8781 114.346 99.83 113.893 cv
99.7811 113.441 100.109 113.035 100.561 112.986 cv
101.014 112.938 101.42 113.266 101.468 113.719 cv
101.516 114.171 101.188 114.577 100.736 114.625 cv
1 /0 /CSD get_res sepcs
.078 sep
f
100.456 113.088 mo
100.148 113.121 99.9261 113.396 99.9591 113.704 cv
99.9921 114.012 100.268 114.234 100.575 114.201 cv
100.882 114.169 101.105 113.893 101.072 113.586 cv
101.04 113.277 100.764 113.055 100.456 113.088 cv
1 /0 /CSD get_res sepcs
.05 sep
f
127.767 81.3256 mo
125.845 81.5306 124.454 83.2556 124.659 85.1776 cv
124.864 87.0996 126.588 88.4906 128.51 88.2856 cv
130.432 88.0816 131.824 86.3566 131.619 84.4346 cv
131.414 82.5126 129.689 81.1206 127.767 81.3256 cv
1 /0 /CSD get_res sepcs
.4 sep
f
127.767 81.3256 mo
125.845 81.5306 124.454 83.2556 124.659 85.1776 cv
124.864 87.0996 126.588 88.4906 128.51 88.2856 cv
130.432 88.0816 131.824 86.3566 131.619 84.4346 cv
131.414 82.5126 129.689 81.1206 127.767 81.3256 cv
cp
true sop
1 /0 /CSD get_res sepcs
.4 sep
@
128.452 88.1076 mo
126.607 88.3046 124.952 86.9696 124.756 85.1246 cv
124.559 83.2806 125.894 81.6256 127.739 81.4296 cv
129.583 81.2316 131.238 82.5676 131.435 84.4116 cv
131.631 86.2566 130.296 87.9116 128.452 88.1076 cv
false sop
1 /0 /CSD get_res sepcs
.425 sep
f
128.393 87.9306 mo
126.626 88.1186 125.041 86.8396 124.853 85.0726 cv
124.664 83.3066 125.944 81.7216 127.71 81.5326 cv
129.477 81.3436 131.062 82.6226 131.25 84.3906 cv
131.439 86.1566 130.16 87.7416 128.393 87.9306 cv
1 /0 /CSD get_res sepcs
.45 sep
f
128.334 87.7526 mo
126.645 87.9336 125.13 86.7095 124.95 85.0206 cv
124.769 83.3315 125.993 81.8156 127.682 81.6365 cv
129.371 81.4556 130.886 82.6796 131.066 84.3676 cv
131.246 86.0566 130.023 87.5715 128.334 87.7526 cv
1 /0 /CSD get_res sepcs
.475 sep
f
127.653 81.7396 mo
126.042 81.9116 124.875 83.3566 125.047 84.9686 cv
125.219 86.5797 126.664 87.7456 128.276 87.5736 cv
129.887 87.4016 131.054 85.9566 130.882 84.3456 cv
130.71 82.7336 129.265 81.5676 127.653 81.7396 cv
1 /0 /CSD get_res sepcs
.5 sep
f
127.518 81.8696 mo
128.943 81.7177 130.222 82.7496 130.373 84.1746 cv
130.525 85.5996 129.494 86.8786 128.068 87.0296 cv
126.644 87.1826 125.365 86.1497 125.213 84.7256 cv
125.061 83.3007 126.093 82.0206 127.518 81.8696 cv
1 /0 /CSD get_res sepcs
.443 sep
f
127.383 81.9996 mo
128.621 81.8666 129.733 82.7656 129.865 84.0037 cv
129.997 85.2416 129.1 86.3527 127.861 86.4857 cv
126.623 86.6176 125.511 85.7206 125.379 84.4816 cv
125.246 83.2437 126.144 82.1326 127.383 81.9996 cv
1 /0 /CSD get_res sepcs
.386 sep
f
127.247 82.1296 mo
128.3 82.0176 129.244 82.7796 129.356 83.8316 cv
129.469 84.8846 128.706 85.8296 127.654 85.9406 cv
126.601 86.0546 125.657 85.2916 125.545 84.2386 cv
125.432 83.1866 126.195 82.2416 127.247 82.1296 cv
1 /0 /CSD get_res sepcs
.329 sep
f
127.112 82.2596 mo
127.978 82.1676 128.755 82.7946 128.848 83.6616 cv
128.94 84.5266 128.313 85.3046 127.447 85.3966 cv
126.581 85.4896 125.803 84.8616 125.711 83.9956 cv
125.619 83.1296 126.245 82.3516 127.112 82.2596 cv
1 /0 /CSD get_res sepcs
.271 sep
f
126.976 82.3906 mo
127.657 82.3176 128.267 82.8096 128.339 83.4896 cv
128.412 84.1696 127.919 84.7796 127.239 84.8526 cv
126.56 84.9256 125.949 84.4337 125.877 83.7526 cv
125.804 83.0726 126.297 82.4626 126.976 82.3906 cv
1 /0 /CSD get_res sepcs
.214 sep
f
126.841 82.5196 mo
127.335 82.4676 127.778 82.8246 127.831 83.3186 cv
127.884 83.8116 127.526 84.2556 127.032 84.3086 cv
126.538 84.3606 126.095 84.0036 126.043 83.5096 cv
125.99 83.0156 126.348 82.5726 126.841 82.5196 cv
1 /0 /CSD get_res sepcs
.157 sep
f
126.706 82.6496 mo
126.398 82.6836 126.176 82.9586 126.209 83.2666 cv
126.242 83.5736 126.518 83.7966 126.825 83.7636 cv
127.132 83.7306 127.355 83.4546 127.322 83.1476 cv
127.29 82.8396 127.014 82.6166 126.706 82.6496 cv
1 /0 /CSD get_res sepcs
.1 sep
f
159.64 90.7226 mo
157.718 90.9276 156.325 92.6516 156.53 94.5736 cv
156.735 96.4956 158.46 97.8886 160.382 97.6836 cv
162.304 97.4776 163.696 95.7536 163.491 93.8316 cv
163.286 91.9096 161.561 90.5176 159.64 90.7226 cv
1 /0 /CSD get_res sepcs
.4 sep
f
159.64 90.7226 mo
157.718 90.9276 156.325 92.6516 156.53 94.5736 cv
156.735 96.4956 158.46 97.8886 160.382 97.6836 cv
162.304 97.4776 163.696 95.7536 163.491 93.8316 cv
163.286 91.9096 161.561 90.5176 159.64 90.7226 cv
cp
true sop
1 /0 /CSD get_res sepcs
.4 sep
@
160.323 97.5056 mo
158.479 97.7026 156.824 96.3666 156.628 94.5216 cv
156.431 92.6776 157.767 91.0226 159.61 90.8256 cv
161.455 90.6296 163.11 91.9646 163.307 93.8096 cv
163.503 95.6536 162.167 97.3086 160.323 97.5056 cv
false sop
1 /0 /CSD get_res sepcs
.425 sep
f
160.265 97.3276 mo
158.498 97.5156 156.913 96.2356 156.724 94.4706 cv
156.536 92.7026 157.815 91.1186 159.582 90.9296 cv
161.349 90.7416 162.934 92.0206 163.122 93.7866 cv
163.31 95.5546 162.031 97.1385 160.265 97.3276 cv
1 /0 /CSD get_res sepcs
.45 sep
f
160.206 97.1496 mo
158.517 97.3296 157.002 96.1066 156.821 94.4176 cv
156.642 92.7276 157.864 91.2136 159.554 91.0326 cv
161.242 90.8526 162.758 92.0756 162.938 93.7656 cv
163.118 95.4546 161.895 96.9696 160.206 97.1496 cv
1 /0 /CSD get_res sepcs
.475 sep
f
159.524 91.1366 mo
157.913 91.3086 156.747 92.7546 156.919 94.3646 cv
157.091 95.9766 158.536 97.1436 160.147 96.9726 cv
161.759 96.8006 162.926 95.3536 162.754 93.7426 cv
162.581 92.1316 161.136 90.9646 159.524 91.1366 cv
1 /0 /CSD get_res sepcs
.5 sep
f
159.39 91.2676 mo
160.814 91.1146 162.093 92.1456 162.245 93.5716 cv
162.397 94.9966 161.365 96.2746 159.94 96.4276 cv
158.515 96.5796 157.237 95.5476 157.085 94.1226 cv
156.932 92.6966 157.965 91.4196 159.39 91.2676 cv
1 /0 /CSD get_res sepcs
.443 sep
f
159.255 91.3966 mo
160.493 91.2656 161.604 92.1616 161.737 93.3996 cv
161.868 94.6396 160.972 95.7506 159.733 95.8826 cv
158.494 96.0156 157.383 95.1186 157.251 93.8796 cv
157.118 92.6406 158.016 91.5286 159.255 91.3966 cv
1 /0 /CSD get_res sepcs
.386 sep
f
159.119 91.5266 mo
160.171 91.4146 161.116 92.1776 161.228 93.2296 cv
161.341 94.2816 160.579 95.2266 159.526 95.3386 cv
158.473 95.4506 157.528 94.6886 157.417 93.6366 cv
157.304 92.5836 158.066 91.6396 159.119 91.5266 cv
1 /0 /CSD get_res sepcs
.329 sep
f
158.983 91.6566 mo
159.85 91.5636 160.627 92.1916 160.72 93.0586 cv
160.811 93.9246 160.185 94.7016 159.318 94.7946 cv
158.452 94.8866 157.675 94.2596 157.583 93.3926 cv
157.49 92.5266 158.118 91.7496 158.983 91.6566 cv
1 /0 /CSD get_res sepcs
.271 sep
f
158.848 91.7866 mo
159.528 91.7146 160.139 92.2066 160.211 92.8876 cv
160.284 93.5667 159.792 94.1776 159.111 94.2496 cv
158.431 94.3216 157.821 93.8297 157.749 93.1496 cv
157.676 92.4706 158.169 91.8596 158.848 91.7866 cv
1 /0 /CSD get_res sepcs
.214 sep
f
158.714 91.9176 mo
159.207 91.8646 159.649 92.2226 159.702 92.7166 cv
159.755 93.2096 159.397 93.6526 158.903 93.7056 cv
158.41 93.7576 157.968 93.3996 157.915 92.9066 cv
157.862 92.4136 158.22 91.9706 158.714 91.9176 cv
1 /0 /CSD get_res sepcs
.157 sep
f
158.577 92.0476 mo
158.27 92.0796 158.048 92.3556 158.081 92.6636 cv
158.113 92.9716 158.39 93.1936 158.696 93.1616 cv
159.005 93.1286 159.228 92.8516 159.194 92.5446 cv
159.161 92.2376 158.886 92.0156 158.577 92.0476 cv
1 /0 /CSD get_res sepcs
.1 sep
f
178.202 86.1596 mo
176.28 86.3646 174.888 88.0896 175.093 90.0116 cv
175.298 91.9336 177.022 93.3256 178.944 93.1206 cv
180.866 92.9156 182.259 91.1906 182.054 89.2686 cv
181.849 87.3476 180.124 85.9546 178.202 86.1596 cv
1 /0 /CSD get_res sepcs
.4 sep
f
178.202 86.1596 mo
176.28 86.3646 174.888 88.0896 175.093 90.0116 cv
175.298 91.9336 177.022 93.3256 178.944 93.1206 cv
180.866 92.9156 182.259 91.1906 182.054 89.2686 cv
181.849 87.3476 180.124 85.9546 178.202 86.1596 cv
cp
true sop
1 /0 /CSD get_res sepcs
.4 sep
@
178.886 92.9426 mo
177.042 93.1406 175.387 91.8046 175.19 89.9596 cv
174.993 88.1146 176.329 86.4606 178.173 86.2635 cv
180.017 86.0666 181.673 87.4016 181.869 89.2466 cv
182.065 91.0916 180.729 92.7455 178.886 92.9426 cv
false sop
1 /0 /CSD get_res sepcs
.425 sep
f
178.827 92.7656 mo
177.061 92.9526 175.476 91.6736 175.287 89.9077 cv
175.099 88.1406 176.378 86.5566 178.144 86.3666 cv
179.911 86.1796 181.496 87.4586 181.685 89.2246 cv
181.873 90.9916 180.594 92.5756 178.827 92.7656 cv
1 /0 /CSD get_res sepcs
.45 sep
f
178.769 92.5876 mo
177.079 92.7676 175.564 91.5446 175.384 89.8546 cv
175.204 88.1656 176.427 86.6506 178.116 86.4706 cv
179.805 86.2906 181.32 87.5136 181.501 89.2026 cv
181.681 90.8926 180.458 92.4066 178.769 92.5876 cv
1 /0 /CSD get_res sepcs
.475 sep
f
178.087 86.5736 mo
176.475 86.7456 175.31 88.1916 175.481 89.8026 cv
175.653 91.4136 177.098 92.5816 178.71 92.4096 cv
180.321 92.2376 181.488 90.7916 181.316 89.1806 cv
181.143 87.5686 179.698 86.4016 178.087 86.5736 cv
1 /0 /CSD get_res sepcs
.5 sep
f
177.952 86.7046 mo
179.377 86.5526 180.655 87.5836 180.808 89.0096 cv
180.96 90.4346 179.928 91.7126 178.503 91.8646 cv
177.077 92.0176 175.8 90.9846 175.647 89.5596 cv
175.495 88.1346 176.527 86.8566 177.952 86.7046 cv
1 /0 /CSD get_res sepcs
.443 sep
f
177.817 86.8346 mo
179.056 86.7026 180.167 87.5996 180.3 88.8376 cv
180.431 90.0766 179.534 91.1876 178.296 91.3196 cv
177.057 91.4526 175.945 90.5566 175.813 89.3166 cv
175.681 88.0776 176.578 86.9666 177.817 86.8346 cv
1 /0 /CSD get_res sepcs
.386 sep
f
177.682 86.9646 mo
178.733 86.8516 179.679 87.6146 179.79 88.6676 cv
179.903 89.7196 179.142 90.6636 178.089 90.7756 cv
177.036 90.8886 176.091 90.1266 175.979 89.0736 cv
175.866 88.0206 176.629 87.0766 177.682 86.9646 cv
1 /0 /CSD get_res sepcs
.329 sep
f
177.546 87.0946 mo
178.413 87.0016 179.189 87.6296 179.282 88.4956 cv
179.374 89.3616 178.747 90.1396 177.881 90.2316 cv
177.015 90.3236 176.237 89.6966 176.145 88.8306 cv
176.053 87.9646 176.681 87.1866 177.546 87.0946 cv
1 /0 /CSD get_res sepcs
.271 sep
f
177.411 87.2246 mo
178.091 87.1516 178.701 87.6436 178.773 88.3246 cv
178.847 89.0046 178.354 89.6146 177.674 89.6866 cv
176.993 89.7596 176.384 89.2676 176.311 88.5876 cv
176.238 87.9076 176.731 87.2976 177.411 87.2246 cv
1 /0 /CSD get_res sepcs
.214 sep
f
177.276 87.3546 mo
177.769 87.3026 178.212 87.6596 178.265 88.1536 cv
178.317 88.6466 177.96 89.0906 177.466 89.1426 cv
176.973 89.1946 176.53 88.8376 176.478 88.3446 cv
176.425 87.8516 176.782 87.4076 177.276 87.3546 cv
1 /0 /CSD get_res sepcs
.157 sep
f
177.14 87.4846 mo
176.833 87.5176 176.61 87.7936 176.643 88.1016 cv
176.676 88.4086 176.952 88.6316 177.259 88.5996 cv
177.567 88.5656 177.79 88.2896 177.757 87.9816 cv
177.724 87.6756 177.448 87.4526 177.14 87.4846 cv
1 /0 /CSD get_res sepcs
.1 sep
f
197.14 89.4726 mo
195.218 89.6776 193.825 91.4016 194.03 93.3236 cv
194.235 95.2456 195.96 96.6386 197.882 96.4336 cv
199.804 96.2276 201.196 94.5036 200.991 92.5816 cv
200.786 90.6596 199.061 89.2676 197.14 89.4726 cv
1 /0 /CSD get_res sepcs
.4 sep
f
197.14 89.4726 mo
195.218 89.6776 193.825 91.4016 194.03 93.3236 cv
194.235 95.2456 195.96 96.6386 197.882 96.4336 cv
199.804 96.2276 201.196 94.5036 200.991 92.5816 cv
200.786 90.6596 199.061 89.2676 197.14 89.4726 cv
cp
true sop
1 /0 /CSD get_res sepcs
.4 sep
@
197.823 96.2556 mo
195.979 96.4526 194.324 95.1166 194.128 93.2716 cv
193.931 91.4276 195.267 89.7726 197.11 89.5756 cv
198.955 89.3796 200.61 90.7146 200.807 92.5596 cv
201.003 94.4036 199.667 96.0586 197.823 96.2556 cv
false sop
1 /0 /CSD get_res sepcs
.425 sep
f
197.765 96.0776 mo
195.998 96.2656 194.413 94.9856 194.224 93.2206 cv
194.036 91.4526 195.315 89.8686 197.082 89.6796 cv
198.848 89.4916 200.434 90.7706 200.622 92.5366 cv
200.81 94.3046 199.531 95.8885 197.765 96.0776 cv
1 /0 /CSD get_res sepcs
.45 sep
f
197.706 95.8996 mo
196.017 96.0796 194.502 94.8566 194.321 93.1676 cv
194.142 91.4776 195.364 89.9636 197.054 89.7826 cv
198.742 89.6026 200.258 90.8256 200.438 92.5156 cv
200.618 94.2046 199.395 95.7196 197.706 95.8996 cv
1 /0 /CSD get_res sepcs
.475 sep
f
197.024 89.8866 mo
195.413 90.0586 194.247 91.5046 194.419 93.1146 cv
194.591 94.7266 196.036 95.8936 197.647 95.7226 cv
199.259 95.5506 200.426 94.1036 200.254 92.4926 cv
200.081 90.8816 198.636 89.7146 197.024 89.8866 cv
1 /0 /CSD get_res sepcs
.5 sep
f
196.89 90.0176 mo
198.314 89.8646 199.593 90.8956 199.745 92.3216 cv
199.897 93.7466 198.865 95.0246 197.44 95.1776 cv
196.015 95.3296 194.737 94.2976 194.585 92.8726 cv
194.432 91.4466 195.465 90.1696 196.89 90.0176 cv
1 /0 /CSD get_res sepcs
.443 sep
f
196.755 90.1466 mo
197.993 90.0156 199.104 90.9116 199.237 92.1496 cv
199.368 93.3896 198.472 94.5006 197.233 94.6326 cv
195.994 94.7656 194.883 93.8686 194.751 92.6296 cv
194.618 91.3906 195.516 90.2786 196.755 90.1466 cv
1 /0 /CSD get_res sepcs
.386 sep
f
196.619 90.2766 mo
197.671 90.1646 198.616 90.9276 198.728 91.9796 cv
198.841 93.0316 198.079 93.9766 197.026 94.0886 cv
195.973 94.2006 195.028 93.4386 194.917 92.3866 cv
194.804 91.3336 195.566 90.3896 196.619 90.2766 cv
1 /0 /CSD get_res sepcs
.329 sep
f
196.483 90.4066 mo
197.35 90.3136 198.127 90.9416 198.22 91.8086 cv
198.311 92.6746 197.685 93.4516 196.818 93.5446 cv
195.952 93.6366 195.175 93.0096 195.083 92.1426 cv
194.99 91.2766 195.618 90.4996 196.483 90.4066 cv
1 /0 /CSD get_res sepcs
.271 sep
f
196.348 90.5366 mo
197.028 90.4646 197.639 90.9566 197.711 91.6376 cv
197.784 92.3167 197.292 92.9276 196.611 92.9996 cv
195.931 93.0716 195.321 92.5797 195.249 91.8996 cv
195.176 91.2206 195.669 90.6096 196.348 90.5366 cv
1 /0 /CSD get_res sepcs
.214 sep
f
196.214 90.6676 mo
196.707 90.6146 197.149 90.9726 197.202 91.4666 cv
197.255 91.9596 196.897 92.4026 196.403 92.4556 cv
195.91 92.5076 195.468 92.1496 195.415 91.6566 cv
195.362 91.1636 195.72 90.7206 196.214 90.6676 cv
1 /0 /CSD get_res sepcs
.157 sep
f
196.077 90.7976 mo
195.77 90.8296 195.548 91.1056 195.581 91.4136 cv
195.613 91.7216 195.89 91.9436 196.196 91.9116 cv
196.505 91.8786 196.728 91.6016 196.694 91.2946 cv
196.661 90.9876 196.386 90.7656 196.077 90.7976 cv
1 /0 /CSD get_res sepcs
.1 sep
f
229.515 88.1596 mo
227.593 88.3646 226.2 90.0896 226.405 92.0116 cv
226.61 93.9336 228.335 95.3256 230.257 95.1206 cv
232.179 94.9156 233.571 93.1906 233.366 91.2686 cv
233.161 89.3476 231.436 87.9546 229.515 88.1596 cv
1 /0 /CSD get_res sepcs
.4 sep
f
229.515 88.1596 mo
227.593 88.3646 226.2 90.0896 226.405 92.0116 cv
226.61 93.9336 228.335 95.3256 230.257 95.1206 cv
232.179 94.9156 233.571 93.1906 233.366 91.2686 cv
233.161 89.3476 231.436 87.9546 229.515 88.1596 cv
cp
true sop
1 /0 /CSD get_res sepcs
.4 sep
@
230.198 94.9426 mo
228.354 95.1406 226.699 93.8046 226.503 91.9596 cv
226.306 90.1146 227.641 88.4606 229.485 88.2635 cv
231.33 88.0666 232.985 89.4016 233.182 91.2466 cv
233.378 93.0916 232.042 94.7455 230.198 94.9426 cv
false sop
1 /0 /CSD get_res sepcs
.425 sep
f
230.14 94.7656 mo
228.373 94.9526 226.788 93.6736 226.6 91.9077 cv
226.411 90.1406 227.69 88.5566 229.457 88.3666 cv
231.223 88.1796 232.808 89.4586 232.997 91.2246 cv
233.186 92.9916 231.906 94.5756 230.14 94.7656 cv
1 /0 /CSD get_res sepcs
.45 sep
f
230.081 94.5876 mo
228.391 94.7676 226.877 93.5446 226.696 91.8546 cv
226.516 90.1656 227.739 88.6506 229.429 88.4706 cv
231.117 88.2906 232.633 89.5136 232.813 91.2026 cv
232.993 92.8926 231.77 94.4066 230.081 94.5876 cv
1 /0 /CSD get_res sepcs
.475 sep
f
229.399 88.5736 mo
227.788 88.7456 226.622 90.1916 226.794 91.8026 cv
226.966 93.4136 228.411 94.5816 230.022 94.4096 cv
231.634 94.2376 232.801 92.7916 232.629 91.1806 cv
232.456 89.5686 231.011 88.4016 229.399 88.5736 cv
1 /0 /CSD get_res sepcs
.5 sep
f
229.265 88.7046 mo
230.689 88.5526 231.968 89.5836 232.12 91.0096 cv
232.272 92.4346 231.24 93.7126 229.815 93.8646 cv
228.39 94.0176 227.112 92.9846 226.96 91.5596 cv
226.808 90.1346 227.84 88.8566 229.265 88.7046 cv
1 /0 /CSD get_res sepcs
.443 sep
f
229.13 88.8346 mo
230.368 88.7026 231.479 89.5996 231.612 90.8376 cv
231.743 92.0766 230.847 93.1876 229.608 93.3196 cv
228.369 93.4526 227.258 92.5566 227.126 91.3166 cv
226.993 90.0776 227.89 88.9666 229.13 88.8346 cv
1 /0 /CSD get_res sepcs
.386 sep
f
228.994 88.9646 mo
230.046 88.8516 230.991 89.6146 231.103 90.6676 cv
231.216 91.7196 230.454 92.6636 229.401 92.7756 cv
228.349 92.8886 227.403 92.1266 227.292 91.0736 cv
227.179 90.0206 227.941 89.0766 228.994 88.9646 cv
1 /0 /CSD get_res sepcs
.329 sep
f
228.858 89.0946 mo
229.726 89.0016 230.502 89.6296 230.595 90.4956 cv
230.686 91.3616 230.06 92.1396 229.193 92.2316 cv
228.327 92.3236 227.55 91.6966 227.458 90.8306 cv
227.365 89.9646 227.993 89.1866 228.858 89.0946 cv
1 /0 /CSD get_res sepcs
.271 sep
f
228.724 89.2246 mo
229.403 89.1516 230.014 89.6436 230.086 90.3246 cv
230.159 91.0046 229.667 91.6146 228.986 91.6866 cv
228.306 91.7596 227.696 91.2676 227.624 90.5876 cv
227.551 89.9076 228.044 89.2976 228.724 89.2246 cv
1 /0 /CSD get_res sepcs
.214 sep
f
228.589 89.3546 mo
229.082 89.3026 229.524 89.6596 229.577 90.1536 cv
229.63 90.6466 229.272 91.0906 228.778 91.1426 cv
228.285 91.1946 227.843 90.8376 227.79 90.3446 cv
227.737 89.8516 228.095 89.4076 228.589 89.3546 cv
1 /0 /CSD get_res sepcs
.157 sep
f
228.452 89.4846 mo
228.145 89.5176 227.923 89.7936 227.956 90.1016 cv
227.988 90.4086 228.265 90.6316 228.571 90.5996 cv
228.88 90.5656 229.103 90.2896 229.069 89.9816 cv
229.036 89.6756 228.761 89.4526 228.452 89.4846 cv
1 /0 /CSD get_res sepcs
.1 sep
f
217.702 71.9106 mo
215.78 72.1156 214.388 73.8396 214.593 75.7616 cv
214.798 77.6836 216.522 79.0756 218.444 78.8706 cv
220.366 78.6656 221.759 76.9406 221.554 75.0186 cv
221.348 73.0976 219.624 71.7056 217.702 71.9106 cv
1 /0 /CSD get_res sepcs
.4 sep
f
217.702 71.9106 mo
215.78 72.1156 214.388 73.8396 214.593 75.7616 cv
214.798 77.6836 216.522 79.0756 218.444 78.8706 cv
220.366 78.6656 221.759 76.9406 221.554 75.0186 cv
221.348 73.0976 219.624 71.7056 217.702 71.9106 cv
cp
true sop
1 /0 /CSD get_res sepcs
.4 sep
@
218.386 78.6926 mo
216.542 78.8906 214.887 77.5546 214.69 75.7096 cv
214.493 73.8655 215.829 72.2106 217.673 72.0135 cv
219.518 71.8166 221.173 73.1526 221.369 74.9966 cv
221.565 76.8416 220.229 78.4955 218.386 78.6926 cv
false sop
1 /0 /CSD get_res sepcs
.425 sep
f
218.327 78.5156 mo
216.56 78.7026 214.975 77.4236 214.787 75.6577 cv
214.598 73.8906 215.878 72.3056 217.644 72.1176 cv
219.411 71.9286 220.996 73.2076 221.185 74.9746 cv
221.373 76.7416 220.094 78.3256 218.327 78.5156 cv
1 /0 /CSD get_res sepcs
.45 sep
f
218.268 78.3376 mo
216.579 78.5176 215.064 77.2946 214.884 75.6046 cv
214.704 73.9156 215.927 72.4006 217.616 72.2206 cv
219.305 72.0406 220.82 73.2636 221.001 74.9526 cv
221.181 76.6426 219.958 78.1566 218.268 78.3376 cv
1 /0 /CSD get_res sepcs
.475 sep
f
217.587 72.3246 mo
215.976 72.4966 214.81 73.9416 214.981 75.5526 cv
215.153 77.1636 216.598 78.3316 218.21 78.1596 cv
219.821 77.9876 220.988 76.5416 220.816 74.9306 cv
220.644 73.3186 219.198 72.1526 217.587 72.3246 cv
1 /0 /CSD get_res sepcs
.5 sep
f
217.452 72.4546 mo
218.877 72.3026 220.155 73.3336 220.308 74.7596 cv
220.46 76.1846 219.428 77.4626 218.003 77.6146 cv
216.577 77.7676 215.3 76.7346 215.147 75.3096 cv
214.995 73.8846 216.027 72.6066 217.452 72.4546 cv
1 /0 /CSD get_res sepcs
.443 sep
f
217.317 72.5846 mo
218.556 72.4526 219.667 73.3496 219.8 74.5876 cv
219.931 75.8266 219.034 76.9376 217.796 77.0696 cv
216.557 77.2026 215.445 76.3056 215.313 75.0666 cv
215.181 73.8286 216.078 72.7166 217.317 72.5846 cv
1 /0 /CSD get_res sepcs
.386 sep
f
217.182 72.7146 mo
218.233 72.6016 219.179 73.3646 219.29 74.4166 cv
219.403 75.4696 218.641 76.4136 217.589 76.5256 cv
216.536 76.6386 215.591 75.8756 215.479 74.8236 cv
215.366 73.7706 216.129 72.8266 217.182 72.7146 cv
1 /0 /CSD get_res sepcs
.329 sep
f
217.046 72.8446 mo
217.913 72.7516 218.689 73.3796 218.782 74.2456 cv
218.874 75.1116 218.247 75.8896 217.381 75.9816 cv
216.515 76.0746 215.737 75.4466 215.645 74.5806 cv
215.553 73.7146 216.181 72.9366 217.046 72.8446 cv
1 /0 /CSD get_res sepcs
.271 sep
f
216.911 72.9746 mo
217.591 72.9016 218.201 73.3946 218.273 74.0746 cv
218.347 74.7546 217.854 75.3646 217.174 75.4366 cv
216.493 75.5096 215.884 75.0176 215.811 74.3376 cv
215.738 73.6576 216.231 73.0476 216.911 72.9746 cv
1 /0 /CSD get_res sepcs
.214 sep
f
216.776 73.1046 mo
217.269 73.0526 217.712 73.4096 217.765 73.9036 cv
217.817 74.3966 217.46 74.8406 216.966 74.8926 cv
216.473 74.9456 216.03 74.5876 215.978 74.0946 cv
215.925 73.6006 216.282 73.1576 216.776 73.1046 cv
1 /0 /CSD get_res sepcs
.157 sep
f
216.64 73.2346 mo
216.333 73.2676 216.11 73.5436 216.144 73.8516 cv
216.176 74.1586 216.452 74.3816 216.759 74.3486 cv
217.067 74.3156 217.29 74.0396 217.257 73.7326 cv
217.223 73.4246 216.948 73.2026 216.64 73.2346 cv
1 /0 /CSD get_res sepcs
.1 sep
f
252.765 84.9096 mo
250.843 85.1146 249.45 86.8396 249.655 88.7616 cv
249.86 90.6836 251.585 92.0756 253.507 91.8706 cv
255.429 91.6656 256.821 89.9406 256.616 88.0186 cv
256.411 86.0976 254.686 84.7046 252.765 84.9096 cv
1 /0 /CSD get_res sepcs
.4 sep
f
252.765 84.9096 mo
250.843 85.1146 249.45 86.8396 249.655 88.7616 cv
249.86 90.6836 251.585 92.0756 253.507 91.8706 cv
255.429 91.6656 256.821 89.9406 256.616 88.0186 cv
256.411 86.0976 254.686 84.7046 252.765 84.9096 cv
cp
true sop
1 /0 /CSD get_res sepcs
.4 sep
@
253.448 91.6926 mo
251.604 91.8906 249.949 90.5546 249.753 88.7096 cv
249.556 86.8646 250.891 85.2106 252.735 85.0135 cv
254.58 84.8166 256.235 86.1516 256.432 87.9966 cv
256.628 89.8416 255.292 91.4955 253.448 91.6926 cv
false sop
1 /0 /CSD get_res sepcs
.425 sep
f
253.39 91.5156 mo
251.623 91.7026 250.038 90.4236 249.85 88.6577 cv
249.661 86.8906 250.94 85.3066 252.707 85.1166 cv
254.473 84.9296 256.058 86.2086 256.247 87.9746 cv
256.436 89.7416 255.156 91.3256 253.39 91.5156 cv
1 /0 /CSD get_res sepcs
.45 sep
f
253.331 91.3376 mo
251.641 91.5176 250.127 90.2946 249.946 88.6046 cv
249.766 86.9156 250.989 85.4006 252.679 85.2206 cv
254.367 85.0406 255.883 86.2636 256.063 87.9526 cv
256.243 89.6426 255.02 91.1566 253.331 91.3376 cv
1 /0 /CSD get_res sepcs
.475 sep
f
252.649 85.3236 mo
251.038 85.4956 249.872 86.9416 250.044 88.5526 cv
250.216 90.1636 251.661 91.3316 253.272 91.1596 cv
254.884 90.9876 256.051 89.5416 255.879 87.9306 cv
255.706 86.3186 254.261 85.1516 252.649 85.3236 cv
1 /0 /CSD get_res sepcs
.5 sep
f
252.515 85.4546 mo
253.939 85.3026 255.218 86.3336 255.37 87.7596 cv
255.522 89.1846 254.49 90.4626 253.065 90.6146 cv
251.64 90.7676 250.362 89.7346 250.21 88.3096 cv
250.058 86.8846 251.09 85.6066 252.515 85.4546 cv
1 /0 /CSD get_res sepcs
.443 sep
f
252.38 85.5846 mo
253.618 85.4526 254.729 86.3496 254.862 87.5876 cv
254.993 88.8266 254.097 89.9376 252.858 90.0696 cv
251.619 90.2026 250.508 89.3066 250.376 88.0666 cv
250.243 86.8276 251.14 85.7166 252.38 85.5846 cv
1 /0 /CSD get_res sepcs
.386 sep
f
252.244 85.7146 mo
253.296 85.6016 254.241 86.3646 254.353 87.4176 cv
254.466 88.4696 253.704 89.4136 252.651 89.5256 cv
251.599 89.6386 250.653 88.8766 250.542 87.8236 cv
250.429 86.7706 251.191 85.8266 252.244 85.7146 cv
1 /0 /CSD get_res sepcs
.329 sep
f
252.108 85.8446 mo
252.975 85.7516 253.752 86.3796 253.845 87.2456 cv
253.936 88.1116 253.31 88.8896 252.443 88.9816 cv
251.577 89.0736 250.8 88.4466 250.708 87.5806 cv
250.615 86.7146 251.243 85.9366 252.108 85.8446 cv
1 /0 /CSD get_res sepcs
.271 sep
f
251.974 85.9746 mo
252.653 85.9016 253.264 86.3936 253.336 87.0746 cv
253.409 87.7546 252.917 88.3646 252.236 88.4366 cv
251.556 88.5096 250.946 88.0176 250.874 87.3376 cv
250.801 86.6576 251.294 86.0476 251.974 85.9746 cv
1 /0 /CSD get_res sepcs
.214 sep
f
251.839 86.1046 mo
252.332 86.0526 252.774 86.4096 252.827 86.9036 cv
252.88 87.3966 252.522 87.8406 252.028 87.8926 cv
251.535 87.9446 251.093 87.5876 251.04 87.0946 cv
250.987 86.6016 251.345 86.1576 251.839 86.1046 cv
1 /0 /CSD get_res sepcs
.157 sep
f
251.702 86.2346 mo
251.395 86.2676 251.173 86.5436 251.206 86.8516 cv
251.238 87.1586 251.515 87.3816 251.821 87.3496 cv
252.13 87.3156 252.353 87.0396 252.319 86.7316 cv
252.286 86.4256 252.011 86.2026 251.702 86.2346 cv
1 /0 /CSD get_res sepcs
.1 sep
f
297.015 86.4726 mo
295.093 86.6776 293.7 88.4016 293.905 90.3236 cv
294.11 92.2456 295.835 93.6386 297.757 93.4336 cv
299.679 93.2276 301.071 91.5036 300.866 89.5816 cv
300.661 87.6596 298.936 86.2676 297.015 86.4726 cv
1 /0 /CSD get_res sepcs
.4 sep
f
297.015 86.4726 mo
295.093 86.6776 293.7 88.4016 293.905 90.3236 cv
294.11 92.2456 295.835 93.6386 297.757 93.4336 cv
299.679 93.2276 301.071 91.5036 300.866 89.5816 cv
300.661 87.6596 298.936 86.2676 297.015 86.4726 cv
cp
true sop
1 /0 /CSD get_res sepcs
.4 sep
@
297.698 93.2556 mo
295.854 93.4526 294.2 92.1166 294.003 90.2716 cv
293.806 88.4276 295.142 86.7726 296.985 86.5756 cv
298.829 86.3796 300.485 87.7146 300.683 89.5596 cv
300.878 91.4036 299.542 93.0586 297.698 93.2556 cv
false sop
1 /0 /CSD get_res sepcs
.425 sep
f
297.64 93.0776 mo
295.872 93.2656 294.288 91.9856 294.098 90.2206 cv
293.911 88.4526 295.19 86.8686 296.958 86.6796 cv
298.723 86.4916 300.308 87.7706 300.497 89.5366 cv
300.684 91.3046 299.405 92.8885 297.64 93.0776 cv
1 /0 /CSD get_res sepcs
.45 sep
f
297.581 92.8996 mo
295.892 93.0796 294.376 91.8566 294.196 90.1676 cv
294.017 88.4776 295.239 86.9636 296.929 86.7826 cv
298.616 86.6026 300.134 87.8256 300.313 89.5156 cv
300.493 91.2046 299.27 92.7196 297.581 92.8996 cv
1 /0 /CSD get_res sepcs
.475 sep
f
296.899 86.8866 mo
295.288 87.0586 294.122 88.5046 294.294 90.1146 cv
294.466 91.7266 295.911 92.8936 297.522 92.7226 cv
299.134 92.5506 300.3 91.1036 300.128 89.4926 cv
299.956 87.8816 298.511 86.7146 296.899 86.8866 cv
1 /0 /CSD get_res sepcs
.5 sep
f
296.765 87.0176 mo
298.188 86.8646 299.468 87.8956 299.62 89.3216 cv
299.772 90.7466 298.741 92.0246 297.315 92.1776 cv
295.89 92.3296 294.612 91.2976 294.46 89.8726 cv
294.308 88.4466 295.341 87.1696 296.765 87.0176 cv
1 /0 /CSD get_res sepcs
.443 sep
f
296.63 87.1466 mo
297.868 87.0156 298.979 87.9116 299.112 89.1496 cv
299.243 90.3896 298.347 91.5006 297.108 91.6326 cv
295.87 91.7656 294.759 90.8686 294.626 89.6296 cv
294.493 88.3906 295.392 87.2786 296.63 87.1466 cv
1 /0 /CSD get_res sepcs
.386 sep
f
296.495 87.2766 mo
297.546 87.1646 298.491 87.9276 298.603 88.9796 cv
298.716 90.0316 297.954 90.9766 296.901 91.0886 cv
295.849 91.2006 294.903 90.4386 294.792 89.3866 cv
294.679 88.3336 295.44 87.3896 296.495 87.2766 cv
1 /0 /CSD get_res sepcs
.329 sep
f
296.358 87.4066 mo
297.225 87.3136 298.001 87.9416 298.095 88.8086 cv
298.186 89.6746 297.56 90.4516 296.692 90.5446 cv
295.827 90.6366 295.05 90.0096 294.958 89.1426 cv
294.866 88.2766 295.493 87.4996 296.358 87.4066 cv
1 /0 /CSD get_res sepcs
.271 sep
f
296.224 87.5366 mo
296.903 87.4646 297.513 87.9566 297.587 88.6376 cv
297.659 89.3167 297.167 89.9276 296.487 89.9996 cv
295.806 90.0716 295.196 89.5797 295.124 88.8996 cv
295.05 88.2206 295.544 87.6096 296.224 87.5366 cv
1 /0 /CSD get_res sepcs
.214 sep
f
296.089 87.6676 mo
296.583 87.6146 297.024 87.9726 297.077 88.4666 cv
297.13 88.9596 296.772 89.4026 296.278 89.4556 cv
295.784 89.5076 295.343 89.1496 295.29 88.6566 cv
295.237 88.1636 295.595 87.7206 296.089 87.6676 cv
1 /0 /CSD get_res sepcs
.157 sep
f
295.952 87.7976 mo
295.645 87.8296 295.423 88.1056 295.456 88.4136 cv
295.487 88.7216 295.765 88.9436 296.071 88.9116 cv
296.38 88.8786 296.603 88.6016 296.569 88.2946 cv
296.536 87.9876 296.261 87.7656 295.952 87.7976 cv
1 /0 /CSD get_res sepcs
.1 sep
f
275.89 59.2226 mo
273.968 59.4276 272.575 61.1526 272.78 63.0746 cv
272.985 64.9966 274.71 66.3886 276.632 66.1836 cv
278.554 65.9776 279.946 64.2536 279.741 62.3316 cv
279.536 60.4096 277.811 59.0176 275.89 59.2226 cv
1 /0 /CSD get_res sepcs
.65 sep
f
275.89 59.2226 mo
273.968 59.4276 272.575 61.1526 272.78 63.0746 cv
272.985 64.9966 274.71 66.3886 276.632 66.1836 cv
278.554 65.9776 279.946 64.2536 279.741 62.3316 cv
279.536 60.4096 277.811 59.0176 275.89 59.2226 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
276.573 66.0056 mo
274.729 66.2026 273.075 64.8666 272.878 63.0216 cv
272.681 61.1776 274.017 59.5226 275.86 59.3266 cv
277.704 59.1296 279.36 60.4646 279.558 62.3096 cv
279.753 64.1536 278.417 65.8086 276.573 66.0056 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
276.515 65.8276 mo
274.747 66.0156 273.163 64.7366 272.974 62.9696 cv
272.786 61.2036 274.065 59.6186 275.833 59.4296 cv
277.598 59.2416 279.183 60.5206 279.372 62.2876 cv
279.56 64.0536 278.28 65.6385 276.515 65.8276 cv
1 /0 /CSD get_res sepcs
.7 sep
f
276.456 65.6496 mo
274.767 65.8296 273.251 64.6066 273.071 62.9176 cv
272.892 61.2286 274.114 59.7136 275.804 59.5336 cv
277.493 59.3526 279.009 60.5756 279.188 62.2656 cv
279.368 63.9546 278.145 65.4696 276.456 65.6496 cv
1 /0 /CSD get_res sepcs
.725 sep
f
275.774 59.6366 mo
274.163 59.8086 272.997 61.2546 273.169 62.8656 cv
273.341 64.4766 274.786 65.6436 276.397 65.4716 cv
278.009 65.2996 279.175 63.8536 279.003 62.2426 cv
278.833 60.6316 277.386 59.4646 275.774 59.6366 cv
1 /0 /CSD get_res sepcs
.75 sep
f
273.335 62.6226 mo
273.183 61.1976 274.216 59.9186 275.64 59.7665 cv
277.065 59.6146 278.343 60.6465 278.495 62.0715 cv
278.647 63.4966 277.616 64.7745 276.19 64.9276 cv
274.765 65.0795 273.487 64.0475 273.335 62.6226 cv
1 /0 /CSD get_res sepcs
.671 sep
f
273.501 62.3786 mo
273.368 61.1406 274.267 60.0286 275.505 59.8966 cv
276.743 59.7646 277.854 60.6616 277.987 61.9006 cv
278.12 63.1396 277.222 64.2506 275.983 64.3826 cv
274.745 64.5156 273.634 63.6186 273.501 62.3786 cv
1 /0 /CSD get_res sepcs
.593 sep
f
273.667 62.1356 mo
273.554 61.0836 274.315 60.1396 275.37 60.0266 cv
276.421 59.9146 277.366 60.6766 277.478 61.7296 cv
277.591 62.7816 276.829 63.7266 275.776 63.8386 cv
274.723 63.9506 273.778 63.1885 273.667 62.1356 cv
1 /0 /CSD get_res sepcs
.514 sep
f
273.833 61.8926 mo
273.741 61.0266 274.368 60.2496 275.233 60.1566 cv
276.1 60.0646 276.878 60.6917 276.97 61.5587 cv
277.061 62.4246 276.435 63.2017 275.567 63.2936 cv
274.702 63.3867 273.925 62.7596 273.833 61.8926 cv
1 /0 /CSD get_res sepcs
.436 sep
f
273.999 61.6496 mo
273.927 60.9696 274.419 60.3596 275.098 60.2876 cv
275.778 60.2146 276.388 60.7066 276.462 61.3866 cv
276.534 62.0666 276.042 62.6776 275.362 62.7496 cv
274.681 62.8226 274.071 62.3296 273.999 61.6496 cv
1 /0 /CSD get_res sepcs
.357 sep
f
274.165 61.4066 mo
274.112 60.9126 274.47 60.4696 274.964 60.4166 cv
275.458 60.3646 275.899 60.7226 275.952 61.2156 cv
276.005 61.7096 275.647 62.1526 275.153 62.2056 cv
274.659 62.2576 274.218 61.9006 274.165 61.4066 cv
1 /0 /CSD get_res sepcs
.279 sep
f
274.827 60.5476 mo
274.52 60.5806 274.298 60.8556 274.331 61.1636 cv
274.362 61.4716 274.64 61.6936 274.946 61.6616 cv
275.255 61.6276 275.478 61.3516 275.444 61.0446 cv
275.411 60.7376 275.136 60.5146 274.827 60.5476 cv
1 /0 /CSD get_res sepcs
.2 sep
f
222.827 49.1606 mo
220.905 49.3656 219.513 51.0896 219.718 53.0116 cv
219.923 54.9346 221.647 56.3256 223.569 56.1206 cv
225.491 55.9156 226.884 54.1906 226.679 52.2686 cv
226.474 50.3476 224.749 48.9556 222.827 49.1606 cv
1 /0 /CSD get_res sepcs
.65 sep
f
222.827 49.1606 mo
220.905 49.3656 219.513 51.0896 219.718 53.0116 cv
219.923 54.9346 221.647 56.3256 223.569 56.1206 cv
225.491 55.9156 226.884 54.1906 226.679 52.2686 cv
226.474 50.3476 224.749 48.9556 222.827 49.1606 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
223.511 55.9426 mo
221.667 56.1396 220.012 54.8046 219.815 52.9597 cv
219.618 51.1156 220.954 49.4606 222.798 49.2636 cv
224.643 49.0667 226.298 50.4026 226.494 52.2476 cv
226.69 54.0916 225.354 55.7466 223.511 55.9426 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
223.452 55.7646 mo
221.686 55.9536 220.101 54.6736 219.912 52.9076 cv
219.724 51.1406 221.003 49.5556 222.769 49.3676 cv
224.536 49.1786 226.121 50.4576 226.31 52.2246 cv
226.498 53.9916 225.219 55.5766 223.452 55.7646 cv
1 /0 /CSD get_res sepcs
.7 sep
f
223.394 55.5866 mo
221.704 55.7676 220.189 54.5436 220.009 52.8546 cv
219.829 51.1656 221.052 49.6506 222.741 49.4706 cv
224.431 49.2906 225.945 50.5136 226.126 52.2026 cv
226.306 53.8916 225.083 55.4066 223.394 55.5866 cv
1 /0 /CSD get_res sepcs
.725 sep
f
222.712 49.5746 mo
221.101 49.7466 219.935 51.1916 220.106 52.8026 cv
220.278 54.4136 221.723 55.5806 223.335 55.4096 cv
224.946 55.2376 226.113 53.7916 225.941 52.1806 cv
225.769 50.5686 224.323 49.4026 222.712 49.5746 cv
1 /0 /CSD get_res sepcs
.75 sep
f
220.272 52.5596 mo
220.12 51.1346 221.151 49.8566 222.577 49.7046 cv
224.002 49.5526 225.28 50.5836 225.432 52.0096 cv
225.585 53.4346 224.553 54.7126 223.128 54.8646 cv
221.702 55.0165 220.425 53.9846 220.272 52.5596 cv
1 /0 /CSD get_res sepcs
.671 sep
f
220.438 52.3166 mo
220.306 51.0786 221.203 49.9666 222.442 49.8346 cv
223.681 49.7026 224.792 50.5996 224.925 51.8376 cv
225.056 53.0766 224.159 54.1876 222.921 54.3206 cv
221.682 54.4526 220.57 53.5556 220.438 52.3166 cv
1 /0 /CSD get_res sepcs
.593 sep
f
220.604 52.0736 mo
220.491 51.0206 221.254 50.0766 222.307 49.9646 cv
223.358 49.8516 224.304 50.6146 224.415 51.6666 cv
224.528 52.7196 223.765 53.6636 222.714 53.7756 cv
221.661 53.8886 220.716 53.1256 220.604 52.0736 cv
1 /0 /CSD get_res sepcs
.514 sep
f
220.77 51.8306 mo
220.678 50.9645 221.306 50.1866 222.171 50.0945 cv
223.038 50.0016 223.815 50.6296 223.907 51.4955 cv
223.999 52.3616 223.372 53.1396 222.506 53.2316 cv
221.64 53.3246 220.862 52.6966 220.77 51.8306 cv
1 /0 /CSD get_res sepcs
.436 sep
f
220.936 51.5876 mo
220.863 50.9076 221.356 50.2976 222.036 50.2246 cv
222.716 50.1516 223.326 50.6446 223.398 51.3246 cv
223.472 52.0046 222.979 52.6146 222.299 52.6866 cv
221.618 52.7596 221.009 52.2676 220.936 51.5876 cv
1 /0 /CSD get_res sepcs
.357 sep
f
221.103 51.3446 mo
221.05 50.8506 221.407 50.4076 221.901 50.3546 cv
222.394 50.3026 222.837 50.6596 222.89 51.1536 cv
222.942 51.6476 222.585 52.0906 222.091 52.1426 cv
221.598 52.1956 221.155 51.8376 221.103 51.3446 cv
1 /0 /CSD get_res sepcs
.279 sep
f
221.765 50.4846 mo
221.458 50.5176 221.235 50.7936 221.268 51.1016 cv
221.301 51.4086 221.577 51.6316 221.884 51.5986 cv
222.192 51.5656 222.415 51.2896 222.382 50.9826 cv
222.349 50.6746 222.073 50.4526 221.765 50.4846 cv
1 /0 /CSD get_res sepcs
.2 sep
f
201.56 40.8856 mo
199.638 41.0906 198.245 42.8156 198.45 44.7376 cv
198.655 46.6596 200.38 48.0516 202.302 47.8466 cv
204.223 47.6416 205.616 45.9166 205.411 43.9946 cv
205.206 42.0726 203.481 40.6806 201.56 40.8856 cv
1 /0 /CSD get_res sepcs
.65 sep
f
201.56 40.8856 mo
199.638 41.0906 198.245 42.8156 198.45 44.7376 cv
198.655 46.6596 200.38 48.0516 202.302 47.8466 cv
204.223 47.6416 205.616 45.9166 205.411 43.9946 cv
205.206 42.0726 203.481 40.6806 201.56 40.8856 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
202.243 47.6686 mo
200.399 47.8656 198.744 46.5296 198.548 44.6846 cv
198.351 42.8406 199.686 41.1856 201.53 40.9896 cv
203.375 40.7926 205.03 42.1276 205.227 43.9726 cv
205.423 45.8166 204.088 47.4716 202.243 47.6686 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
202.185 47.4906 mo
200.418 47.6786 198.833 46.3996 198.644 44.6326 cv
198.456 42.8666 199.735 41.2816 201.503 41.0926 cv
203.268 40.9046 204.854 42.1836 205.042 43.9506 cv
205.231 45.7166 203.952 47.3016 202.185 47.4906 cv
1 /0 /CSD get_res sepcs
.7 sep
f
202.126 47.3126 mo
200.436 47.4926 198.922 46.2696 198.741 44.5806 cv
198.561 42.8916 199.784 41.3766 201.473 41.1966 cv
203.163 41.0166 204.678 42.2396 204.858 43.9286 cv
205.038 45.6176 203.815 47.1326 202.126 47.3126 cv
1 /0 /CSD get_res sepcs
.725 sep
f
201.445 41.2996 mo
199.834 41.4716 198.667 42.9176 198.839 44.5286 cv
199.011 46.1396 200.456 47.3066 202.067 47.1346 cv
203.679 46.9626 204.846 45.5176 204.674 43.9056 cv
204.502 42.2946 203.056 41.1276 201.445 41.2996 cv
1 /0 /CSD get_res sepcs
.75 sep
f
199.005 44.2856 mo
198.853 42.8606 199.885 41.5816 201.31 41.4296 cv
202.735 41.2776 204.013 42.3096 204.165 43.7346 cv
204.317 45.1596 203.286 46.4376 201.86 46.5906 cv
200.435 46.7426 199.157 45.7106 199.005 44.2856 cv
1 /0 /CSD get_res sepcs
.671 sep
f
199.171 44.0416 mo
199.038 42.8036 199.936 41.6917 201.175 41.5596 cv
202.413 41.4276 203.524 42.3246 203.657 43.5636 cv
203.789 44.8026 202.891 45.9136 201.653 46.0457 cv
200.415 46.1786 199.303 45.2816 199.171 44.0416 cv
1 /0 /CSD get_res sepcs
.593 sep
f
199.337 43.7986 mo
199.225 42.7466 199.987 41.8026 201.039 41.6896 cv
202.092 41.5776 203.036 42.3396 203.148 43.3926 cv
203.261 44.4446 202.499 45.3896 201.446 45.5016 cv
200.394 45.6136 199.449 44.8516 199.337 43.7986 cv
1 /0 /CSD get_res sepcs
.514 sep
f
199.503 43.5566 mo
199.41 42.6896 200.038 41.9126 200.903 41.8196 cv
201.77 41.7276 202.548 42.3546 202.64 43.2216 cv
202.732 44.0876 202.104 44.8646 201.239 44.9566 cv
200.372 45.0496 199.595 44.4226 199.503 43.5566 cv
1 /0 /CSD get_res sepcs
.436 sep
f
199.669 43.3126 mo
199.597 42.6326 200.089 42.0226 200.769 41.9506 cv
201.448 41.8776 202.058 42.3706 202.132 43.0506 cv
202.204 43.7296 201.712 44.3406 201.031 44.4126 cv
200.352 44.4856 199.741 43.9926 199.669 43.3126 cv
1 /0 /CSD get_res sepcs
.357 sep
f
199.835 43.0696 mo
199.782 42.5756 200.14 42.1326 200.634 42.0806 cv
201.127 42.0276 201.569 42.3856 201.622 42.8786 cv
201.675 43.3726 201.317 43.8156 200.824 43.8686 cv
200.33 43.9206 199.888 43.5636 199.835 43.0696 cv
1 /0 /CSD get_res sepcs
.279 sep
f
200.498 42.2106 mo
200.19 42.2436 199.968 42.5186 200.001 42.8266 cv
200.033 43.1346 200.31 43.3566 200.616 43.3246 cv
200.925 43.2906 201.147 43.0156 201.114 42.7076 cv
201.081 42.4006 200.806 42.1776 200.498 42.2106 cv
1 /0 /CSD get_res sepcs
.2 sep
f
262.077 38.9726 mo
260.155 39.1776 258.763 40.9026 258.968 42.8246 cv
259.173 44.7466 260.897 46.1386 262.819 45.9336 cv
264.741 45.7276 266.134 44.0036 265.929 42.0816 cv
265.723 40.1596 263.999 38.7676 262.077 38.9726 cv
1 /0 /CSD get_res sepcs
.65 sep
f
262.077 38.9726 mo
260.155 39.1776 258.763 40.9026 258.968 42.8246 cv
259.173 44.7466 260.897 46.1386 262.819 45.9336 cv
264.741 45.7276 266.134 44.0036 265.929 42.0816 cv
265.723 40.1596 263.999 38.7676 262.077 38.9726 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
262.761 45.7556 mo
260.917 45.9526 259.262 44.6166 259.065 42.7716 cv
258.868 40.9276 260.204 39.2726 262.048 39.0766 cv
263.892 38.8796 265.548 40.2146 265.745 42.0596 cv
265.94 43.9036 264.604 45.5586 262.761 45.7556 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
262.702 45.5776 mo
260.936 45.7656 259.35 44.4866 259.162 42.7196 cv
258.973 40.9536 260.253 39.3686 262.019 39.1796 cv
263.786 38.9916 265.37 40.2706 265.56 42.0376 cv
265.747 43.8036 264.468 45.3896 262.702 45.5776 cv
1 /0 /CSD get_res sepcs
.7 sep
f
262.644 45.3996 mo
260.954 45.5796 259.439 44.3566 259.259 42.6676 cv
259.079 40.9786 260.302 39.4636 261.991 39.2836 cv
263.681 39.1026 265.196 40.3266 265.376 42.0156 cv
265.556 43.7046 264.333 45.2196 262.644 45.3996 cv
1 /0 /CSD get_res sepcs
.725 sep
f
261.962 39.3866 mo
260.35 39.5586 259.185 41.0046 259.356 42.6156 cv
259.528 44.2266 260.974 45.3936 262.585 45.2216 cv
264.196 45.0496 265.362 43.6036 265.19 41.9936 cv
265.02 40.3816 263.573 39.2146 261.962 39.3866 cv
1 /0 /CSD get_res sepcs
.75 sep
f
259.522 42.3726 mo
259.37 40.9476 260.401 39.6686 261.827 39.5165 cv
263.251 39.3646 264.53 40.3965 264.683 41.8215 cv
264.835 43.2466 263.804 44.5256 262.378 44.6776 cv
260.952 44.8295 259.675 43.7975 259.522 42.3726 cv
1 /0 /CSD get_res sepcs
.671 sep
f
259.688 42.1296 mo
259.556 40.8906 260.453 39.7786 261.692 39.6466 cv
262.931 39.5146 264.042 40.4116 264.175 41.6506 cv
264.306 42.8896 263.409 44.0005 262.171 44.1326 cv
260.932 44.2656 259.82 43.3686 259.688 42.1296 cv
1 /0 /CSD get_res sepcs
.593 sep
f
259.854 41.8866 mo
259.741 40.8336 260.504 39.8896 261.557 39.7766 cv
262.608 39.6646 263.554 40.4266 263.665 41.4796 cv
263.778 42.5316 263.017 43.4766 261.964 43.5886 cv
260.911 43.7006 259.966 42.9386 259.854 41.8866 cv
1 /0 /CSD get_res sepcs
.514 sep
f
260.02 41.6426 mo
259.928 40.7766 260.556 39.9996 261.421 39.9066 cv
262.288 39.8146 263.065 40.4417 263.157 41.3087 cv
263.249 42.1746 262.622 42.9517 261.756 43.0436 cv
260.89 43.1367 260.112 42.5096 260.02 41.6426 cv
1 /0 /CSD get_res sepcs
.436 sep
f
260.186 41.3996 mo
260.113 40.7196 260.606 40.1096 261.286 40.0376 cv
261.966 39.9646 262.575 40.4566 262.649 41.1376 cv
262.722 41.8166 262.229 42.4276 261.549 42.4996 cv
260.868 42.5726 260.259 42.0796 260.186 41.3996 cv
1 /0 /CSD get_res sepcs
.357 sep
f
260.353 41.1566 mo
260.3 40.6626 260.657 40.2196 261.151 40.1676 cv
261.644 40.1146 262.087 40.4726 262.14 40.9656 cv
262.192 41.4596 261.835 41.9026 261.341 41.9556 cv
260.848 42.0076 260.405 41.6506 260.353 41.1566 cv
1 /0 /CSD get_res sepcs
.279 sep
f
261.015 40.2976 mo
260.708 40.3306 260.485 40.6056 260.519 40.9136 cv
260.551 41.2216 260.827 41.4436 261.134 41.4116 cv
261.442 41.3786 261.665 41.1026 261.632 40.7946 cv
261.598 40.4876 261.323 40.2646 261.015 40.2976 cv
1 /0 /CSD get_res sepcs
.2 sep
f
162.868 61.4076 mo
160.946 61.6126 159.555 63.3376 159.76 65.2596 cv
159.965 67.1816 161.688 68.5736 163.611 68.3686 cv
165.533 68.1636 166.925 66.4386 166.72 64.5166 cv
166.515 62.5946 164.79 61.2026 162.868 61.4076 cv
1 /0 /CSD get_res sepcs
.65 sep
f
162.868 61.4076 mo
160.946 61.6126 159.555 63.3376 159.76 65.2596 cv
159.965 67.1816 161.688 68.5736 163.611 68.3686 cv
165.533 68.1636 166.925 66.4386 166.72 64.5166 cv
166.515 62.5946 164.79 61.2026 162.868 61.4076 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
163.553 68.1906 mo
161.708 68.3876 160.054 67.0516 159.856 65.2066 cv
159.66 63.3626 160.995 61.7086 162.84 61.5116 cv
164.685 61.3146 166.339 62.6506 166.536 64.4946 cv
166.733 66.3386 165.397 67.9936 163.553 68.1906 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
163.494 68.0126 mo
161.728 68.2017 160.143 66.9216 159.954 65.1547 cv
159.765 63.3886 161.045 61.8036 162.811 61.6146 cv
164.578 61.4266 166.163 62.7056 166.351 64.4727 cv
166.54 66.2396 165.261 67.8246 163.494 68.0126 cv
1 /0 /CSD get_res sepcs
.7 sep
f
163.436 67.8346 mo
161.747 68.0146 160.231 66.7916 160.051 65.1026 cv
159.871 63.4136 161.094 61.8986 162.782 61.7186 cv
164.472 61.5386 165.987 62.7616 166.167 64.4506 cv
166.348 66.1396 165.124 67.6546 163.436 67.8346 cv
1 /0 /CSD get_res sepcs
.725 sep
f
162.755 61.8216 mo
161.144 61.9936 159.976 63.4396 160.147 65.0506 cv
160.319 66.6626 161.766 67.8286 163.377 67.6566 cv
164.988 67.4846 166.155 66.0396 165.983 64.4286 cv
165.811 62.8166 164.366 61.6496 162.755 61.8216 cv
1 /0 /CSD get_res sepcs
.75 sep
f
160.313 64.8076 mo
160.162 63.3826 161.194 62.1036 162.619 61.9526 cv
164.044 61.7996 165.323 62.8316 165.475 64.2566 cv
165.626 65.6826 164.595 66.9606 163.169 67.1126 cv
161.745 67.2646 160.466 66.2326 160.313 64.8076 cv
1 /0 /CSD get_res sepcs
.671 sep
f
160.479 64.5646 mo
160.348 63.3256 161.245 62.2146 162.483 62.0816 cv
163.723 61.9496 164.834 62.8476 164.966 64.0856 cv
165.099 65.3246 164.201 66.4355 162.962 66.5676 cv
161.724 66.7006 160.612 65.8036 160.479 64.5646 cv
1 /0 /CSD get_res sepcs
.593 sep
f
160.645 64.3216 mo
160.534 63.2686 161.296 62.3246 162.349 62.2116 cv
163.401 62.1006 164.345 62.8616 164.458 63.9146 cv
164.569 64.9676 163.808 65.9116 162.755 66.0236 cv
161.702 66.1356 160.759 65.3736 160.645 64.3216 cv
1 /0 /CSD get_res sepcs
.514 sep
f
160.811 64.0786 mo
160.72 63.2116 161.347 62.4346 162.214 62.3426 cv
163.079 62.2496 163.856 62.8766 163.949 63.7436 cv
164.042 64.6096 163.414 65.3866 162.548 65.4796 cv
161.682 65.5716 160.904 64.9446 160.811 64.0786 cv
1 /0 /CSD get_res sepcs
.436 sep
f
160.978 63.8346 mo
160.905 63.1546 161.397 62.5446 162.077 62.4726 cv
162.758 62.3996 163.368 62.8926 163.44 63.5726 cv
163.513 64.2526 163.02 64.8626 162.341 64.9346 cv
161.661 65.0076 161.05 64.5156 160.978 63.8346 cv
1 /0 /CSD get_res sepcs
.357 sep
f
161.144 63.5916 mo
161.091 63.0986 161.448 62.6546 161.942 62.6026 cv
162.436 62.5496 162.88 62.9076 162.932 63.4006 cv
162.985 63.8946 162.627 64.3376 162.134 64.3906 cv
161.64 64.4436 161.196 64.0856 161.144 63.5916 cv
1 /0 /CSD get_res sepcs
.279 sep
f
161.807 62.7326 mo
161.499 62.7656 161.276 63.0406 161.31 63.3486 cv
161.343 63.6566 161.618 63.8786 161.927 63.8466 cv
162.233 63.8136 162.456 63.5376 162.423 63.2296 cv
162.39 62.9226 162.114 62.6996 161.807 62.7326 cv
1 /0 /CSD get_res sepcs
.2 sep
f
130.767 44.8256 mo
128.845 45.0306 127.454 46.7546 127.659 48.6776 cv
127.864 50.5995 129.588 51.9916 131.51 51.7866 cv
133.432 51.5806 134.824 49.8566 134.619 47.9346 cv
134.414 46.0126 132.689 44.6205 130.767 44.8256 cv
1 /0 /CSD get_res sepcs
.65 sep
f
130.767 44.8256 mo
128.845 45.0306 127.454 46.7546 127.659 48.6776 cv
127.864 50.5995 129.588 51.9916 131.51 51.7866 cv
133.432 51.5806 134.824 49.8566 134.619 47.9346 cv
134.414 46.0126 132.689 44.6205 130.767 44.8256 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
131.452 51.6076 mo
129.607 51.8046 127.953 50.4696 127.756 48.6246 cv
127.559 46.7806 128.894 45.1256 130.739 44.9296 cv
132.583 44.7326 134.238 46.0676 134.435 47.9126 cv
134.631 49.7566 133.296 51.4116 131.452 51.6076 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
131.393 51.4306 mo
129.626 51.6186 128.041 50.3396 127.853 48.5726 cv
127.665 46.8066 128.944 45.2216 130.71 45.0326 cv
132.477 44.8436 134.062 46.1236 134.25 47.8906 cv
134.439 49.6566 133.16 51.2416 131.393 51.4306 cv
1 /0 /CSD get_res sepcs
.7 sep
f
131.334 51.2526 mo
129.645 51.4326 128.13 50.2095 127.95 48.5206 cv
127.769 46.8315 128.993 45.3166 130.682 45.1356 cv
132.371 44.9556 133.886 46.1786 134.066 47.8686 cv
134.246 49.5566 133.023 51.0726 131.334 51.2526 cv
1 /0 /CSD get_res sepcs
.725 sep
f
130.653 45.2396 mo
129.042 45.4116 127.875 46.8566 128.047 48.4686 cv
128.219 50.0796 129.664 51.2466 131.276 51.0746 cv
132.887 50.9026 134.054 49.4565 133.882 47.8456 cv
133.71 46.2346 132.265 45.0676 130.653 45.2396 cv
1 /0 /CSD get_res sepcs
.75 sep
f
128.213 48.2256 mo
128.061 46.8006 129.093 45.5216 130.518 45.3696 cv
131.943 45.2176 133.222 46.2496 133.373 47.6746 cv
133.526 49.0996 132.494 50.3776 131.069 50.5296 cv
129.644 50.6826 128.365 49.6496 128.213 48.2256 cv
1 /0 /CSD get_res sepcs
.671 sep
f
128.379 47.9816 mo
128.247 46.7436 129.144 45.6316 130.383 45.4996 cv
131.621 45.3676 132.733 46.2646 132.865 47.5035 cv
132.997 48.7426 132.1 49.8536 130.861 49.9856 cv
129.623 50.1176 128.511 49.2206 128.379 47.9816 cv
1 /0 /CSD get_res sepcs
.593 sep
f
128.545 47.7386 mo
128.432 46.6866 129.195 45.7426 130.247 45.6296 cv
131.3 45.5176 132.244 46.2796 132.356 47.3316 cv
132.469 48.3846 131.706 49.3296 130.654 49.4416 cv
129.601 49.5536 128.657 48.7916 128.545 47.7386 cv
1 /0 /CSD get_res sepcs
.514 sep
f
128.711 47.4956 mo
128.619 46.6296 129.246 45.8516 130.112 45.7596 cv
130.978 45.6676 131.756 46.2946 131.848 47.1616 cv
131.94 48.0276 131.313 48.8046 130.447 48.8966 cv
129.581 48.9896 128.803 48.3616 128.711 47.4956 cv
1 /0 /CSD get_res sepcs
.436 sep
f
128.877 47.2526 mo
128.804 46.5726 129.297 45.9626 129.976 45.8906 cv
130.657 45.8176 131.267 46.3096 131.339 46.9896 cv
131.412 47.6696 130.919 48.2795 130.24 48.3525 cv
129.56 48.4255 128.95 47.9326 128.877 47.2526 cv
1 /0 /CSD get_res sepcs
.357 sep
f
129.043 47.0096 mo
128.99 46.5156 129.348 46.0726 129.841 46.0196 cv
130.335 45.9676 130.778 46.3246 130.831 46.8186 cv
130.884 47.3126 130.526 47.7556 130.032 47.8086 cv
129.538 47.8606 129.096 47.5036 129.043 47.0096 cv
1 /0 /CSD get_res sepcs
.279 sep
f
129.706 46.1496 mo
129.398 46.1836 129.176 46.4586 129.209 46.7666 cv
129.242 47.0736 129.518 47.2966 129.825 47.2636 cv
130.132 47.2306 130.355 46.9556 130.322 46.6476 cv
130.29 46.3396 130.014 46.1176 129.706 46.1496 cv
1 /0 /CSD get_res sepcs
.2 sep
f
173.257 32.2886 mo
171.335 32.4936 169.943 34.2186 170.148 36.1406 cv
170.353 38.0616 172.077 39.4546 174 39.2486 cv
175.922 39.0436 177.313 37.3196 177.108 35.3976 cv
176.903 33.4756 175.179 32.0836 173.257 32.2886 cv
1 /0 /CSD get_res sepcs
.65 sep
f
173.257 32.2886 mo
171.335 32.4936 169.943 34.2186 170.148 36.1406 cv
170.353 38.0616 172.077 39.4546 174 39.2486 cv
175.922 39.0436 177.313 37.3196 177.108 35.3976 cv
176.903 33.4756 175.179 32.0836 173.257 32.2886 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
173.941 39.0706 mo
172.097 39.2676 170.442 37.9326 170.245 36.0876 cv
170.049 34.2436 171.384 32.5886 173.229 32.3926 cv
175.073 32.1956 176.728 33.5306 176.925 35.3756 cv
177.122 37.2196 175.786 38.8746 173.941 39.0706 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
173.883 38.8926 mo
172.116 39.0817 170.531 37.8026 170.343 36.0356 cv
170.154 34.2686 171.433 32.6846 173.2 32.4957 cv
174.967 32.3076 176.552 33.5866 176.74 35.3527 cv
176.929 37.1196 175.649 38.7047 173.883 38.8926 cv
1 /0 /CSD get_res sepcs
.7 sep
f
173.824 38.7156 mo
172.136 38.8956 170.62 37.6725 170.439 35.9836 cv
170.26 34.2946 171.482 32.7796 173.172 32.5995 cv
174.86 32.4186 176.376 33.6426 176.556 35.3306 cv
176.736 37.0196 175.513 38.5356 173.824 38.7156 cv
1 /0 /CSD get_res sepcs
.725 sep
f
173.144 32.7026 mo
171.532 32.8746 170.364 34.3196 170.536 35.9316 cv
170.709 37.5426 172.154 38.7096 173.766 38.5376 cv
175.377 38.3656 176.544 36.9196 176.372 35.3086 cv
176.2 33.6976 174.755 32.5306 173.144 32.7026 cv
1 /0 /CSD get_res sepcs
.75 sep
f
170.702 35.6876 mo
170.551 34.2636 171.583 32.9846 173.008 32.8326 cv
174.433 32.6806 175.712 33.7126 175.863 35.1376 cv
176.015 36.5626 174.983 37.8406 173.558 37.9937 cv
172.134 38.1446 170.854 37.1136 170.702 35.6876 cv
1 /0 /CSD get_res sepcs
.671 sep
f
170.868 35.4446 mo
170.736 34.2056 171.634 33.0946 172.872 32.9626 cv
174.111 32.8306 175.223 33.7276 175.354 34.9666 cv
175.487 36.2056 174.59 37.3166 173.35 37.4486 cv
172.112 37.5806 171.001 36.6836 170.868 35.4446 cv
1 /0 /CSD get_res sepcs
.593 sep
f
171.034 35.2016 mo
170.923 34.1496 171.685 33.2056 172.737 33.0926 cv
173.79 32.9806 174.733 33.7426 174.847 34.7946 cv
174.958 35.8476 174.196 36.7916 173.144 36.9046 cv
172.091 37.0166 171.147 36.2546 171.034 35.2016 cv
1 /0 /CSD get_res sepcs
.514 sep
f
171.2 34.9586 mo
171.108 34.0926 171.735 33.3156 172.603 33.2226 cv
173.468 33.1306 174.245 33.7576 174.338 34.6236 cv
174.431 35.4906 173.803 36.2676 172.936 36.3596 cv
172.07 36.4526 171.293 35.8256 171.2 34.9586 cv
1 /0 /CSD get_res sepcs
.436 sep
f
171.366 34.7156 mo
171.294 34.0356 171.786 33.4256 172.467 33.3526 cv
173.146 33.2806 173.757 33.7726 173.829 34.4526 cv
173.901 35.1326 173.409 35.7436 172.729 35.8156 cv
172.05 35.8885 171.438 35.3956 171.366 34.7156 cv
1 /0 /CSD get_res sepcs
.357 sep
f
171.532 34.4726 mo
171.479 33.9786 171.837 33.5356 172.331 33.4826 cv
172.825 33.4306 173.268 33.7886 173.321 34.2816 cv
173.374 34.7756 173.016 35.2186 172.522 35.2706 cv
172.028 35.3236 171.585 34.9666 171.532 34.4726 cv
1 /0 /CSD get_res sepcs
.279 sep
f
172.196 33.6126 mo
171.889 33.6456 171.665 33.9216 171.698 34.2296 cv
171.731 34.5376 172.007 34.7596 172.315 34.7266 cv
172.622 34.6936 172.845 34.4176 172.811 34.1106 cv
172.779 33.8036 172.503 33.5806 172.196 33.6126 cv
1 /0 /CSD get_res sepcs
.2 sep
f
287.827 38.4726 mo
285.905 38.6776 284.513 40.4026 284.718 42.3246 cv
284.923 44.2466 286.647 45.6386 288.569 45.4336 cv
290.491 45.2276 291.884 43.5036 291.679 41.5816 cv
291.473 39.6596 289.749 38.2676 287.827 38.4726 cv
1 /0 /CSD get_res sepcs
.65 sep
f
287.827 38.4726 mo
285.905 38.6776 284.513 40.4026 284.718 42.3246 cv
284.923 44.2466 286.647 45.6386 288.569 45.4336 cv
290.491 45.2276 291.884 43.5036 291.679 41.5816 cv
291.473 39.6596 289.749 38.2676 287.827 38.4726 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
288.511 45.2556 mo
286.667 45.4526 285.013 44.1166 284.815 42.2716 cv
284.618 40.4276 285.954 38.7726 287.798 38.5766 cv
289.642 38.3796 291.298 39.7146 291.495 41.5596 cv
291.69 43.4036 290.354 45.0586 288.511 45.2556 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
288.452 45.0776 mo
286.685 45.2656 285.1 43.9866 284.911 42.2196 cv
284.723 40.4536 286.003 38.8686 287.77 38.6796 cv
289.536 38.4916 291.12 39.7706 291.309 41.5376 cv
291.497 43.3036 290.218 44.8885 288.452 45.0776 cv
1 /0 /CSD get_res sepcs
.7 sep
f
288.394 44.8996 mo
286.704 45.0796 285.188 43.8566 285.009 42.1676 cv
284.829 40.4786 286.052 38.9636 287.741 38.7836 cv
289.431 38.6026 290.946 39.8256 291.126 41.5156 cv
291.306 43.2046 290.083 44.7196 288.394 44.8996 cv
1 /0 /CSD get_res sepcs
.725 sep
f
287.712 38.8866 mo
286.1 39.0586 284.934 40.5046 285.106 42.1156 cv
285.278 43.7266 286.723 44.8936 288.335 44.7216 cv
289.946 44.5496 291.112 43.1036 290.94 41.4926 cv
290.77 39.8816 289.323 38.7146 287.712 38.8866 cv
1 /0 /CSD get_res sepcs
.75 sep
f
285.272 41.8726 mo
285.12 40.4476 286.153 39.1686 287.577 39.0165 cv
289.003 38.8646 290.28 39.8965 290.433 41.3215 cv
290.585 42.7466 289.554 44.0245 288.128 44.1776 cv
286.702 44.3295 285.425 43.2975 285.272 41.8726 cv
1 /0 /CSD get_res sepcs
.671 sep
f
285.438 41.6286 mo
285.306 40.3906 286.204 39.2786 287.442 39.1466 cv
288.681 39.0146 289.792 39.9116 289.925 41.1506 cv
290.058 42.3896 289.159 43.5006 287.921 43.6326 cv
286.683 43.7656 285.571 42.8686 285.438 41.6286 cv
1 /0 /CSD get_res sepcs
.593 sep
f
285.604 41.3856 mo
285.491 40.3336 286.253 39.3896 287.308 39.2766 cv
288.358 39.1646 289.304 39.9266 289.415 40.9796 cv
289.528 42.0316 288.767 42.9766 287.714 43.0886 cv
286.661 43.2006 285.716 42.4385 285.604 41.3856 cv
1 /0 /CSD get_res sepcs
.514 sep
f
285.77 41.1426 mo
285.679 40.2766 286.306 39.4996 287.171 39.4066 cv
288.038 39.3146 288.815 39.9417 288.907 40.8087 cv
288.999 41.6746 288.372 42.4517 287.505 42.5436 cv
286.64 42.6367 285.862 42.0096 285.77 41.1426 cv
1 /0 /CSD get_res sepcs
.436 sep
f
285.936 40.8996 mo
285.864 40.2196 286.356 39.6096 287.036 39.5376 cv
287.716 39.4646 288.325 39.9566 288.399 40.6366 cv
288.472 41.3166 287.979 41.9276 287.3 41.9996 cv
286.618 42.0726 286.009 41.5796 285.936 40.8996 cv
1 /0 /CSD get_res sepcs
.357 sep
f
286.103 40.6566 mo
286.05 40.1626 286.407 39.7196 286.901 39.6666 cv
287.395 39.6146 287.837 39.9726 287.89 40.4656 cv
287.942 40.9596 287.585 41.4026 287.091 41.4556 cv
286.597 41.5076 286.155 41.1506 286.103 40.6566 cv
1 /0 /CSD get_res sepcs
.279 sep
f
286.765 39.7976 mo
286.458 39.8306 286.235 40.1056 286.269 40.4136 cv
286.3 40.7216 286.577 40.9436 286.884 40.9116 cv
287.192 40.8776 287.415 40.6016 287.382 40.2946 cv
287.348 39.9876 287.073 39.7646 286.765 39.7976 cv
1 /0 /CSD get_res sepcs
.2 sep
f
238.515 34.3476 mo
236.593 34.5526 235.2 36.2776 235.405 38.1996 cv
235.61 40.1216 237.335 41.5136 239.257 41.3086 cv
241.179 41.1026 242.571 39.3786 242.366 37.4566 cv
242.161 35.5346 240.436 34.1426 238.515 34.3476 cv
1 /0 /CSD get_res sepcs
.65 sep
f
238.515 34.3476 mo
236.593 34.5526 235.2 36.2776 235.405 38.1996 cv
235.61 40.1216 237.335 41.5136 239.257 41.3086 cv
241.179 41.1026 242.571 39.3786 242.366 37.4566 cv
242.161 35.5346 240.436 34.1426 238.515 34.3476 cv
cp
true sop
1 /0 /CSD get_res sepcs
.65 sep
@
239.198 41.1306 mo
237.354 41.3276 235.699 39.9916 235.503 38.1466 cv
235.306 36.3026 236.641 34.6476 238.485 34.4516 cv
240.33 34.2546 241.985 35.5896 242.182 37.4346 cv
242.378 39.2786 241.042 40.9336 239.198 41.1306 cv
false sop
1 /0 /CSD get_res sepcs
.675 sep
f
239.14 40.9526 mo
237.373 41.1406 235.788 39.8616 235.6 38.0946 cv
235.411 36.3286 236.69 34.7436 238.457 34.5546 cv
240.223 34.3666 241.808 35.6456 241.997 37.4126 cv
242.186 39.1786 240.906 40.7635 239.14 40.9526 cv
1 /0 /CSD get_res sepcs
.7 sep
f
239.081 40.7746 mo
237.391 40.9546 235.877 39.7316 235.696 38.0426 cv
235.516 36.3536 236.739 34.8386 238.429 34.6586 cv
240.118 34.4776 241.633 35.7006 241.813 37.3906 cv
241.993 39.0796 240.77 40.5946 239.081 40.7746 cv
1 /0 /CSD get_res sepcs
.725 sep
f
238.399 34.7616 mo
236.788 34.9336 235.622 36.3796 235.794 37.9906 cv
235.966 39.6016 237.411 40.7686 239.022 40.5966 cv
240.634 40.4246 241.801 38.9786 241.629 37.3676 cv
241.457 35.7566 240.011 34.5896 238.399 34.7616 cv
1 /0 /CSD get_res sepcs
.75 sep
f
235.96 37.7476 mo
235.808 36.3226 236.84 35.0436 238.265 34.8915 cv
239.69 34.7396 240.968 35.7715 241.12 37.1965 cv
241.272 38.6216 240.24 39.8995 238.815 40.0526 cv
237.39 40.2045 236.112 39.1725 235.96 37.7476 cv
1 /0 /CSD get_res sepcs
.671 sep
f
236.126 37.5036 mo
235.993 36.2656 236.89 35.1536 238.13 35.0216 cv
239.368 34.8896 240.479 35.7866 240.612 37.0256 cv
240.744 38.2646 239.847 39.3756 238.608 39.5076 cv
237.369 39.6406 236.258 38.7436 236.126 37.5036 cv
1 /0 /CSD get_res sepcs
.593 sep
f
236.292 37.2606 mo
236.179 36.2086 236.941 35.2646 237.994 35.1516 cv
239.047 35.0396 239.991 35.8016 240.103 36.8546 cv
240.216 37.9066 239.454 38.8516 238.401 38.9636 cv
237.349 39.0756 236.403 38.3135 236.292 37.2606 cv
1 /0 /CSD get_res sepcs
.514 sep
f
236.458 37.0176 mo
236.365 36.1516 236.993 35.3746 237.858 35.2816 cv
238.725 35.1896 239.503 35.8167 239.595 36.6837 cv
239.686 37.5496 239.06 38.3267 238.193 38.4186 cv
237.327 38.5117 236.55 37.8846 236.458 37.0176 cv
1 /0 /CSD get_res sepcs
.436 sep
f
236.624 36.7746 mo
236.552 36.0946 237.044 35.4846 237.724 35.4126 cv
238.403 35.3396 239.014 35.8316 239.086 36.5116 cv
239.159 37.1916 238.667 37.8026 237.986 37.8746 cv
237.306 37.9476 236.696 37.4546 236.624 36.7746 cv
1 /0 /CSD get_res sepcs
.357 sep
f
236.79 36.5316 mo
236.737 36.0376 237.095 35.5946 237.589 35.5416 cv
238.082 35.4896 238.524 35.8476 238.577 36.3406 cv
238.63 36.8346 238.272 37.2776 237.778 37.3306 cv
237.285 37.3826 236.843 37.0256 236.79 36.5316 cv
1 /0 /CSD get_res sepcs
.279 sep
f
237.452 35.6726 mo
237.145 35.7056 236.923 35.9806 236.956 36.2886 cv
236.988 36.5966 237.265 36.8186 237.571 36.7866 cv
237.88 36.7526 238.103 36.4766 238.069 36.1696 cv
238.036 35.8626 237.761 35.6396 237.452 35.6726 cv
1 /0 /CSD get_res sepcs
.2 sep
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 /1 ]]
] del_res
/ZNINNA+TradeGothic*1 uf
/ZNINNA+TradeGothic uf
/GAAAAA+TradeGothic uf
/ZNINMZ+Times-Italic*1 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: font BFLGAB+Times-Italic
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: (PANTONE 193 CV)
%%CMYKCustomColor: 0 0.9098 0.6510 0.1137 (PANTONE 193 CV)
%%RGBCustomColor: 
%%EOF
