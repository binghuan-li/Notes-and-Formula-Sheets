%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: A91pnvorz_oe8z13_jjs.tmp.pdf
%%Creator: Adobe Acrobat 20.5.0
%%For: lbing
%%CreationDate: 13/02/2024, 23:23:23
%%BoundingBox: -1 0 390 172
%%HiResBoundingBox: 0 0 389.6541 171.1841
%%CropBox: 0 0 389.6541 171.1841
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 833 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c018 91.98c2f96, 2021/06/15-20:39:32        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2024-02-13T23:22:21Z"
   xmp:CreateDate="2024-02-13T23:22:21Z"
   xmp:MetadataDate="2024-02-13T23:22:21Z"
   xmp:CreatorTool="Adobe Acrobat Pro 2020 20.5.30574"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:da3831d3-854e-4f7c-937a-74f9b8b273ad"
   xmpMM:InstanceID="uuid:57d35cac-c6ce-4e1e-8d2b-b10e59d8a3ec"
   pdf:Producer="Adobe Acrobat Pro 2020 20.5.30574"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -171.184 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 171.184 li
389.654 171.184 li
389.654 0 li
cp
clp
.900055 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
60.9776 67.8481 mo
60.9776 87.7313 52.9181 103.85 42.9765 103.85 cv
33.0349 103.85 24.9754 87.7313 24.9754 67.8481 cv
24.9754 47.9649 33.0349 31.8459 42.9765 31.8459 cv
52.9181 31.8459 60.9776 47.9649 60.9776 67.8481 cv
cp
false sop
.75021 .679683 .670222 .90164 cmyk
@
339.977 67.8481 mo
339.977 77.7897 335.947 85.8492 330.977 85.8492 cv
326.006 85.8492 321.976 77.7897 321.976 67.8481 cv
321.976 57.9065 326.006 49.847 330.977 49.847 cv
335.947 49.847 339.977 57.9065 339.977 67.8481 cv
0 0 0 0 cmyk
f
339.977 67.8481 mo
339.977 77.7897 335.947 85.8492 330.977 85.8492 cv
326.006 85.8492 321.976 77.7897 321.976 67.8481 cv
321.976 57.9065 326.006 49.847 330.977 49.847 cv
335.947 49.847 339.977 57.9065 339.977 67.8481 cv
gsave
grestore
/151977336.0 
<<
/ID /151977336.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [-2 -4 10 5 ] 
/XStep 8 
/YStep 4 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
-2 -4 mo
10 -4 li
10 5 li
-2 5 li
cp
clp
.7 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
-2 -1 mo
10 5 li
false sop
.75021 .679683 .670222 .90164 cmyk
@
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/151977336.0 /Pattern get_res
[1 0 0 1 -29.0235 -40.1519 ]make_pattern set_pattern
f
2 vmreclaim
.900055 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
339.977 67.8481 mo
339.977 77.7897 335.947 85.8492 330.977 85.8492 cv
326.006 85.8492 321.976 77.7897 321.976 67.8481 cv
321.976 57.9065 326.006 49.847 330.977 49.847 cv
335.947 49.847 339.977 57.9065 339.977 67.8481 cv
cp
false sop
.75021 .679683 .670222 .90164 cmyk
@
348.978 67.8481 mo
348.978 87.7313 340.918 103.85 330.977 103.85 cv
321.035 103.85 312.975 87.7313 312.975 67.8481 cv
312.975 47.9649 321.035 31.8459 330.977 31.8459 cv
340.918 31.8459 348.978 47.9649 348.978 67.8481 cv
cp
@
42.9677 31.8481 mo
330.985 31.8481 li
@
42.9677 49.8481 mo
330.985 49.8481 li
@
42.9677 85.8481 mo
330.985 85.8481 li
@
42.9677 103.848 mo
330.985 103.848 li
@
gsave
5.67255 -1.05444 mo
5.67255 170.956 li
368.695 170.956 li
368.695 -1.05444 li
cp
88.7576 69.6499 mo
97.8782 69.6499 li
97.8782 66.0497 li
88.7576 66.0497 li
95.9581 67.8497 li
88.7576 69.6499 li
cp
44.7749 22.067 mo
44.7749 12.9464 li
41.1747 12.9464 li
41.1747 22.067 li
42.9748 14.8666 li
44.7749 22.067 li
cp
eclp
42.9748 13.8464 mo
42.9748 67.8497 li
96.9781 67.8497 li
@
grestore
.450027 lw
44.7766 22.0684 mo
42.9765 14.8679 li
41.1763 22.0684 li
@
88.7562 69.6483 mo
95.9567 67.8481 li
88.7562 66.048 li
@
gsave
5.66211 -1.05554 mo
5.66211 170.955 li
368.684 170.955 li
368.684 -1.05554 li
cp
242.777 58.0681 mo
242.777 48.9475 li
239.176 48.9475 li
239.176 58.0681 li
240.976 50.8677 li
242.777 58.0681 li
cp
239.176 59.6281 mo
239.176 68.7487 li
242.777 68.7487 li
242.777 59.6281 li
240.976 66.8286 li
239.176 59.6281 li
cp
eclp
.900055 lw
240.976 67.8486 mo
240.976 49.8475 li
@
grestore
239.176 59.6278 mo
240.976 66.8282 li
242.777 59.6278 li
@
242.777 58.0684 mo
240.976 50.8679 li
239.176 58.0684 li
@
gsave
5.65991 -1.05499 mo
5.65991 170.955 li
368.682 170.955 li
368.682 -1.05499 li
cp
278.777 40.0676 mo
278.777 30.947 li
275.176 30.947 li
275.176 40.0676 li
276.977 32.8671 li
278.777 40.0676 li
cp
275.176 59.6287 mo
275.176 68.7493 li
278.777 68.7493 li
278.777 59.6287 li
276.977 66.8291 li
275.176 59.6287 li
cp
eclp
.900055 lw
276.976 67.8492 mo
276.976 31.847 li
@
grestore
275.176 59.6278 mo
276.976 66.8282 li
278.777 59.6278 li
@
278.777 40.0684 mo
276.976 32.8679 li
275.176 40.0684 li
@
.900055 lw
[5.40033 5.40033 ] 0 dsh
6.96548 67.8481 mo
366.987 67.8481 li
@
gsave
5.66321 -1.05365 mo
5.66321 170.957 li
368.685 170.957 li
368.685 -1.05365 li
cp
221.176 32.6284 mo
221.176 41.749 li
224.777 41.749 li
224.777 32.6284 li
222.976 39.8288 li
221.176 32.6284 li
cp
eclp
[] 0 dsh
222.976 13.8472 mo
222.976 40.8489 li
@
grestore
.450027 lw
[] 0 dsh
221.176 32.6279 mo
222.976 39.8283 li
224.777 32.6279 li
@
gsave
5.6687 -1.0542 mo
5.6687 170.956 li
368.691 170.956 li
368.691 -1.0542 li
cp
131.176 50.6289 mo
131.176 59.7495 li
134.777 59.7495 li
134.777 50.6289 li
132.976 57.8293 li
131.176 50.6289 li
cp
eclp
.900055 lw
132.976 13.8467 mo
132.976 58.8495 li
@
grestore
131.176 50.6278 mo
132.976 57.8282 li
134.777 50.6278 li
@
gsave
5.66541 -1.0578 mo
5.66541 170.953 li
368.688 170.953 li
368.688 -1.0578 li
cp
188.357 97.5482 mo
205.878 97.5482 li
205.878 92.1479 li
188.357 92.1479 li
199.157 94.8481 li
188.357 97.5482 li
cp
eclp
2.70016 lw
168.975 94.8481 mo
204.978 94.8481 li
@
grestore
188.356 97.5483 mo
199.157 94.8481 li
188.356 92.1479 li
188.356 97.5483 li
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
2.70016 lw
188.356 97.5483 mo
199.157 94.8481 li
188.356 92.1479 li
188.356 97.5483 li
cp
.75021 .679683 .670222 .90164 cmyk
@
gsave
5.66595 -1.05847 mo
5.66595 170.952 li
368.688 170.952 li
368.688 -1.05847 li
cp
179.777 103.008 mo
179.777 93.9473 li
176.176 93.9473 li
176.176 103.008 li
177.976 95.8074 li
179.777 103.008 li
cp
eclp
.900055 lw
177.976 117.349 mo
177.976 94.8474 li
@
grestore
179.777 103.008 mo
177.976 95.8079 li
176.176 103.008 li
179.777 103.008 li
1 /0 /CSD get_res sepcs
1 sep
ef
.450027 lw
179.777 103.008 mo
177.976 95.8079 li
176.176 103.008 li
179.777 103.008 li
cp
.75021 .679683 .670222 .90164 cmyk
@
gsave
5.67419 -1.05847 mo
5.67419 170.952 li
368.696 170.952 li
368.696 -1.05847 li
cp
44.7766 103.008 mo
44.7766 93.9473 li
41.1764 93.9473 li
41.1764 103.008 li
42.9765 95.8074 li
44.7766 103.008 li
cp
eclp
.900055 lw
42.9765 117.349 mo
42.9765 94.8474 li
@
grestore
44.7766 103.008 mo
42.9765 95.8079 li
41.1763 103.008 li
44.7766 103.008 li
1 /0 /CSD get_res sepcs
1 sep
ef
44.7766 103.008 mo
42.9765 95.8079 li
41.1763 103.008 li
44.7766 103.008 li
cp
.75021 .679683 .670222 .90164 cmyk
@
gsave
5.65662 -1.05847 mo
5.65662 170.952 li
368.679 170.952 li
368.679 -1.05847 li
cp
332.777 103.008 mo
332.777 93.9473 li
329.176 93.9473 li
329.176 103.008 li
330.977 95.8074 li
332.777 103.008 li
cp
eclp
.900055 lw
330.977 117.349 mo
330.977 94.8474 li
@
grestore
332.777 103.008 mo
330.977 95.8079 li
329.176 103.008 li
332.777 103.008 li
1 /0 /CSD get_res sepcs
1 sep
ef
332.777 103.008 mo
330.977 95.8079 li
329.176 103.008 li
332.777 103.008 li
cp
.75021 .679683 .670222 .90164 cmyk
@
gsave
5.66541 -1.06134 mo
5.66541 170.949 li
368.688 170.949 li
368.688 -1.06134 li
cp
322.825 155.148 mo
331.885 155.148 li
331.885 151.548 li
322.825 151.548 li
330.025 153.348 li
322.825 155.148 li
cp
51.1282 151.548 mo
42.0676 151.548 li
42.0676 155.148 li
51.1282 155.148 li
43.9278 153.348 li
51.1282 151.548 li
cp
eclp
.900055 lw
42.9677 153.348 mo
330.985 153.348 li
@
grestore
51.1367 151.548 mo
43.9363 153.348 li
51.1367 155.148 li
51.1367 151.548 li
1 /0 /CSD get_res sepcs
1 sep
ef
51.1367 151.548 mo
43.9363 153.348 li
51.1367 155.148 li
51.1367 151.548 li
cp
.75021 .679683 .670222 .90164 cmyk
@
322.816 155.148 mo
330.017 153.348 li
322.816 151.548 li
322.816 155.148 li
1 /0 /CSD get_res sepcs
1 sep
ef
322.816 155.148 mo
330.017 153.348 li
322.816 151.548 li
322.816 155.148 li
cp
.75021 .679683 .670222 .90164 cmyk
@
51.977 67.8481 mo
51.977 77.7897 47.9468 85.8492 42.9765 85.8492 cv
38.0062 85.8492 33.9759 77.7897 33.9759 67.8481 cv
33.9759 57.9065 38.0062 49.847 42.9765 49.847 cv
47.9468 49.847 51.977 57.9065 51.977 67.8481 cv
0 0 0 0 cmyk
f
51.977 67.8481 mo
51.977 77.7897 47.9468 85.8492 42.9765 85.8492 cv
38.0062 85.8492 33.9759 77.7897 33.9759 67.8481 cv
33.9759 57.9065 38.0062 49.847 42.9765 49.847 cv
47.9468 49.847 51.977 57.9065 51.977 67.8481 cv
gsave
grestore
/151977768.0 
<<
/ID /151977768.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [-2 -4 10 5 ] 
/XStep 8 
/YStep 4 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
-2 -4 mo
10 -4 li
10 5 li
-2 5 li
cp
clp
.7 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
-2 -1 mo
10 5 li
false sop
.75021 .679683 .670222 .90164 cmyk
@
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/151977768.0 /Pattern get_res
[1 0 0 1 -29.0235 -40.1519 ]make_pattern set_pattern
f
2 vmreclaim
.900055 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
51.977 67.8481 mo
51.977 77.7897 47.9468 85.8492 42.9765 85.8492 cv
38.0062 85.8492 33.9759 77.7897 33.9759 67.8481 cv
33.9759 57.9065 38.0062 49.847 42.9765 49.847 cv
47.9468 49.847 51.977 57.9065 51.977 67.8481 cv
cp
false sop
.75021 .679683 .670222 .90164 cmyk
@
%ADOBeginSubsetFont: FAAAAA+CMMI12 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /FAAAAA+CMMI12 def
/FontInfo 6 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
dup 108 /l put
dup 112 /p put
dup 114 /r put
dup 122 /z put
def
/FontBBox {-31 -250 827 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 683 704 431 441 452 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.0437899 def
/StdHW [22] def
/StdVW [65] def
/StemSnapH [22 29] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/a <1C60D8A8C9B7B9B9A72E7DE322C6832BE644423B0A88991AD27EBB446C4B
78A15D1551E0041671A94D00FAC341F63F9F6BD0BD1F7E1159EBC4D3A51076CB
AD3084D7BB435F13C64A1022F92EAF97A9B9FAB89D5EF4E00013898C527E1024
1850938E8A18F13139220B05353D163E079F72D46D074AF4BE0712F52399BD5B
FEDD0FF6EDB7D541DC9FE47616272E42EA7EC15CA1C36E943C9AE8E71D7BF511
B93807535299A1710F16F2B27DB38539B4CC43D74740BCDB557F037C4BE96327
1D0813FE14E2562EE6FDE375> |-
/b <1C60D8A8C9B08A95BE770D3275FAE599DCE86302389D928C948C3248911E
F3BDAE7899D68C434C0023363E1A52D113FA5E85D13714688C0905DF35108DC4
9DA01AA4FF3D55F3F63D8035D8F894AB6EABFB5B41D20162CB7F581F978175F6
A2C55F2E1BD326CB16638AA4398DD94109B6618681AFBA4E6E497235EC9C6E63
9BAA1A2C5F9DA6FC326C6C831A7A9567E65E93A328316B9E25C19BBE6894545D
29FF108EA01324007D8AF2BECF1D0304B4FBB32BFB61D2ED8655> |-
/l <1C60D8A8C9B08A956D794C064F51429FBAB5F4DA8F63179E8998B2D6570C
3C58B2D5F435FACB6907B62CF42B5BAFC7F3566F9EF14A40BF613A3D45EFCA47
2AA99FB799A6E9DEAD300C9718B6E801ECD0FF62EA3D37B958AAD37739F4B1E2
9C9021B4835B7756B60BD3CDB268E2E9BC9AD1AB67812D4A237F4DCA834D3E8D
4D5E2BEE944E05C2C1111AD864D6CA6E8B> |-
/p <1C60D8A8C9B08A95A3D58A586A3FBE8DD573DC1B5201277ECEB772F037AE
79EC6960313F5C2D7C5729982F1E5CF35929D31B7F8AB831CC69A21925CA8357
2F240C36380F9036E0AD2CD1407925AE8431ABC2E72D550FD901B9BA0A4DEAFB
65769FF7CD9F5D2CFB4CA30B173943F434C90553BA131A160E052959FD00DD88
B44EED8E1CAC3DD183694B6F371C4CDA4D9FA5327CD8C6D69F4B38BE7F8846A1
032948C6FD6272419B1AF2F0083F3BABFF6F394A9D351FD4943BA751FDC62544
EB329D1504169D056D1FB4A34BE1878CA33F8748F751E9F553B834C2DD5E593C
EB17E1> |-
/r <1C60D8A8C9B08A95B0C35763BDE8CBAEC916A0C367F2EDEEB5A0404C4863
2E331940A66CACDE58F08DF738EFE9FEA7BE1CA7910E4D0A565410A79FDE0648
D9229D30BF7E972F0C10B39DADE42910C13A86EBC32C98B330FD768F6143DFEA
AEC00836D4242428EAACE66FA3A30C0AEF01481C8172806FAF63BAC1D5F807AE
BF2A866F0F6C6F9E518EC48504C3122CCBDDD48F0555F550919B6CF2F2036FB1
7886852C620A3F80C8E7FC256AB51758C9CD2E96CE55CEDF4B78A816252785E6
4388A1B20C8881> |-
/z <1C60D8A8C9B08A95AD9EFC7F8BEFD6D96D836D8101132D991756D73D9ADF
95E4A763F2D3766AFFF20016D96D714D9FBD33893BEAFE99F057FA69A63AA357
256C05A7B71BEE66D53D886B68F40FC07D36AA10293CD903EB9C9CDBBCCFBE52
C45BD4E1A8C24A3552734B2BAE318C2CD3F6DD35B251EEE08850FE74618F5F08
0CD5032DCB0E8DDBDD851E0111BE1DA3660260B31DB26B083509E3AF0F5A0478
58F34F603DDA174F4AFB4A60525C889F7BA04AF3AE905CA74AFAA191E9B1C7E2
1AEEC1C969FAF8305D227F1C2831687507DC20B9090C389B192BA166E1880692
0623210DF503F34172745129725E21> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/USJGRH+CMMI12 /FAAAAA+CMMI12 findfont ct_VMDictPut
/USJGRH+CMMI12*1 
[97{/.notdef}rp /a /b 9{/.notdef}rp /l 3{/.notdef}rp /p /.notdef 
/r 7{/.notdef}rp /z 133{/.notdef}rp]
USJGRH+CMMI12 nf
USJGRH+CMMI12*1 [11.955 0 0 -11.955 0 0 ]msf
38.5565 9.30811 mo
(r)sh
245.556 63.3081 mo
(b)sh
281.556 45.3081 mo
(a)sh
96.9965 76.8681 mo
(z)sh
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32144a5d84000000cc000000606376
7420adbfdf8e0000012c0000066e6670676d38a5162b0000079c00000bb0
676c7966a00bf45e0000db38000a305c68656164eb4b56cd0000134c0000
00366868656112331a5f0000138400000024686d74785668b900000013a8
0000465a6c6f63615e6a32d200005a04000046606d617870178d09af0000
a064000000206e616d652d31e6ec0000a08400002e8270726570a1b2e8ea
0000cf0800000c2f67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002effc000785b0000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200015
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
0471048304f9008c00910096009b00a000a500aa00af00b400b90000405b
8574737271706f6e6d6c6b6a6968676665625d58575655544f4e41403f3e
3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f
1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b09051582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab102
00080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845
441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d
2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062
602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c
45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a
45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0
177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b0
02855958b00185592d2c20b0032545b019234445b01a23444565234520b0
0325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ff
e0001a45208a54582321b03f1b235961441cb114008a5279b31940201945
208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b
2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121
212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b8022323701020b802234520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826
b00826b00826b008260f10161345683ab001162d2cb4000100000015b008
26b00826b00826b008260f1016134568653ab001162d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c4b5258b00425b0042549b00425b00425496120b0005458212043b00055
58b00325b00325b8ffc038b8ffc038591bb04054582043b0005458b00225
b8ffc038591b2043b0005458b00325b00325b8ffc038b8ffc0381bb00325
b8ffc03859595959212121212d2c462346608a8a462320468a608a61b8ff
8062232010238ab902c202c28a70456020b0005058b00161b8ffba8b1bb0
468c59b0106068013a2d2c2320b000508a8a64b10003255458b0401bb101
03255458b037438b59b04f2b5923b0622b2321235865592d2cb13a000c21
5460432d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b202800243604259b12801885158b94000080063b81000885458ba000201
00000243604259595959595959b10002435458400a37403a403b403e023f
021bb10102435458b237403aba0100003b0100b33e013f011bb180024352
58b237403ab80180b13b401bb901000002435258b237403aba0180003b01
401bb901800002435258b237403ab80200b13b401bb237403aba0100003b
0100595959b9400000808855b94000020063b8040088555a58b33e003f01
1bb33e003f0159595942424242422d2cb0024354584b53234b515a58381b
2121591b21212121592d2cb0572b580c028a4b53b004264b515a580a381b
0a2121591b21212121592d2c20b0024354b00123b05f237821b1000243b0
56237921b0024323b020205c58212121b100471c598a8a208a208a23b810
00635658b81000635658212121b1012c1c591b2159b08062205c58212121
b1001b1c5923b08062205c58212121b1000c1c598ab00161b8ffb31c2321
2d2c20b0024354b00123b07b237821b1000243b072237921b10002438ab0
20205c58212121b0631c598a8a208a208a23b81000635658b81000635658
b00426b0015bb00426b00426b004261b21212121b13600231c591b2159b0
042623b08062205c588a5c8a5a23212321b01d1c598ab08062205c582121
2321b00e1c59b00426b00161b8ff981c23212d2c012d2cb0022563b02060
66b00225b82000626023622d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b03543525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b03543525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12501885058b940
00020063b8040088545cb0124b525b1bb001592d000100000007000024e1
aba55f0f3cf5081b080000000000a2e3272a00000000d684e4ecfaaffd67
1000085100000009000100010000000000010000073efe4e00431000faaf
fa7a10000001000000000000000000000000000011960600010000000000
0239000002390000023900b002d7005e0473001504730049071d00770556
00580187005a02aa007c02aa007c031d004004ac0072023900aa02aa0041
023900ba0239000004730055047300df0473003c047300560473001a0473
00550473004d047300610473005304730055023900b9023900aa04ac0070
04ac007204ac00700473005a081f006f0556fffd0556009605c7006605c7
009e055600a204e300a80639006d05c700a4023900bf0400003705560096
0473009606aa009805c7009c063900630556009e0639005805c700a10556
005c04e3003005c700a105560009078d0019055600090556000604e30029
0239008b023900000239002703c100360473ffe102aa00590473004a0473
008604000050047300460473004b02390013047300420473008701c70088
01c7ffa20400008801c7008306aa00870473008704730044047300870473
004802aa00850400003f02390024047300830400001a05c700060400000f
040000210400002802ac0039021400bc02ac002f04ac00570556fffd0556
fffd05c70068055600a205c7009c0639006305c700a10473004a0473004a
0473004a0473004a0473004a0473004a040000500473004b0473004b0473
004b0473004b023900bd023900230239ffe5023900090473008704730044
047300440473004404730044047300440473008304730083047300830473
008304730049033300800473006b0473001b0473005102cd006d044c0001
04e3009905e5000305e50003080000e102aa00de02aa003d0464004e0800
00010639005305b4009a0464004e0464004d0464004d0473fffd049c00a0
03f4003805b4007a069600a1046400000231000002f6002f02ec002d0625
007f071d004404e3008104e3009e02aa00e804ac0072046400540473002e
0464003304e5001a047300860473008c080000ef0556fffd0556fffd0639
006308000081078d00520473fffc0800000002aa005302aa004701c70080
01c7006c0464004e03f4002f04000021055600060156fe390473ffe402aa
005c02aa005c040000170400001704730049023900b901c7006c02aa0047
080000250556fffd055600a20556fffd055600a2055600a20239008d0239
ffe0023900040239001506390063063900630639006305c700a105c700a1
05c700a1023900c602aa001902aa000602aa001d02aa002e02aa00e502aa
00a202aa006b02aa003a02aa004b02aa00280473000001c700030556005c
0400003f04e3002904000028021400bc05c7fffd04730049055600060400
00210556009e0473008704ac007204ac00a102aa006b02aa001902aa0021
06ac006b06ac006b06ac0021047300000639006d04730042023900b10556
005c0400003f05c700660400005005c700660400005004730046046bffe1
02aa00ee0556fffd0473004a0556fffd0473004a05c7009e04eb004705c7
fffd055600a20473004b055600a20473004b0473009601c7004204730096
025500880473009602ac008305c7009c0473008705c7009c047300870639
00630473004405c700a102aa008505c700a102aa003c0556005c0400003f
04e300300239002404e300300300002305c700a10473008305c700a10473
008304e300290400002804e3002904000028046800a40639006006620055
04a00048047400480391006204f000440329002e05300048046bffe10400
00b002eb005208c000330800004f040000990800004f040000990800004f
040000980400009807d5016a05c0009e04ab007204d5009d04ac007104d5
022204d5010505abffe9050001c905ab027e05abffe905ab027e05abffe9
05ab027e05abffe905abffe905abffe905abffe905abffe905ab01c005ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905ab02d605ab006605abffea05d5ffff04d500920800000007eb0130
07eb012007eb013007eb012004d500b204d5008004d5002a082b0198086b
01b807550010060000f40600006f0440003a0540003704c0003f04150040
040000250600005505e100bf038d008804d5ffd90180008002d500800715
00610296000f04d5009202d6008302d6008304d500b202d600700556fffd
0473004a05c700660400005005c7006604000050055600a20473004b0556
00a20473004b055600a20473004b0639006d047300420639006d04730042
0639006d0473004205c700a40473008705c7001f047300060239ffce0239
ffce0239ffe40239ffe40239fff60239fff50239004b01c7001904000037
01c7ffa20556009604000088040000860473009601c7006a05c7009c0473
008705c900a50473008b0639006304730044063900630473004405c700a1
02aa006a0556005c0400003f04e300300239000c05c700a10473008305c7
00a10473008305c700a10473008305c700a104730083078d001905c70006
055600060400002101c700890556fffd0473004a08000001071d00440639
005304e30081023900b9078d001905c70006078d001905c70006078d0019
05c70006055600060400002101c7008a02aaffe10473001b04cd005a06ac
006b06ac002206ac002206ac004a02aa00e202aa006b02aa00de02aaffea
0557ffff0646ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7
ff780556fffd055600960558fffe055600a204e3002905c700a4023900bf
055600960558000b06aa009805c7009c0533006d0639006305c700a40556
009e04f2009404e30030055600060556000906af007f05fb006102390004
0556000604a00048039100620473008b01c7006b04600088049a008c0400
0019038700480473008b0473005c01c700890400008604000018049c00a0
0400001a0395005c04730044048d008303db0056046000880433001105b4
007a063f005701c7ffc9046000880473004804600088063f0057055700a2
06eb0032045500a105c000640556005c023900bf02390004040000370875
000d081500a406d5003104a900a10515000a05c000a00556fffd054000a7
05560096045500a1056b0000055600a20763000704d5004e05c000a105c0
00a104a900a10540001206aa009805c700a40639006305c000a00556009e
05c7006604e300300515000a061500520556000905eb009f055500570755
00a1078000a106550000071500a8054000a505c0004a081500a405c7001a
0473004a0495005b0440008802eb008804ab00000473004b055afffb03ab
003204780087047800870380008604ab00180580008c046b008804730044
04550088047300870400005003aa0026040000210695004b0400000f0495
008a042b0045066b008d0695008d0500002805c0008b042b00840415002b
060000890455001f0473004b0473000002eb00890415004b0400003f01c7
00880239000901c7ffa20740001306800083047300000380008604000021
046b008803e900a1034a008808000041089500a00585002d000000000000
000000000000000000000000000000000000000000000000000000000000
0000ffac00000000000001010000ffce0310007d0000ff37023300d20000
030b0000ff04023900b90481006904560032033100190411002d04d10096
01f9009b030f005f04ca009b04b8008c01f9009b0413002803b0005003b4
003c04ca009b04cf005001f9009b02d2003c0498005a043c00190488006e
045f007303b1001903d4000a0466009604130028058e00640524002803f2
009b03f2009b03f2009b01e3005a0356005a0686009b01f9004604130028
0413002803b4ff4903b4ff490448002d058e0064058e0064058e0064058e
006404810069048100690481006904560032033100190411002d04d10096
024b0000034a000004b8008c024b00000413002803b0005003b4003c04cf
005002d2003c0498005a0488006e045f007303d4000a0466009604130028
058e00640524002801f9009b0456003203b00050045f0073049b003c0000
ffdc0000ff250000ffdc0000fe51028d00ab028d00a002da0043034d0079
01a8ffba0000004600000046000000460000004600000048000000460000
0046000000460435017c0435012e043500b7043500810435012c043500be
043500af043500810435009a043500db04350085028d00c0043500b30600
01000600010002420036060001000435009e04350098043500cb06000100
060001000600010006000100060001000000004606000100060001000600
01000600010006000100060001000600010006000100051bffba06000100
060001000600010005b5003a05b5003a01f4ffba01f4ffba060001000600
010006000100060001000481003604350036043dffba043dffba03e9004a
03e9004a067f0014077600140327ffba041effba067f0014077600140327
ffba041effba051b003204b500240300fff7060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100000000310000004600000046
000000400000004606000100060001000000ffdc0000fe510000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ffdc0000ff160000ffdc0000ff200000ffdc0473004a080000000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d0011028d00300600
010004ee0015034d007901a8001301d6ffd701a8005601d6001103750032
0375003201a8002e01d60013051b003204b5002401f4ffba01f4ffba01a8
009301d6001305b5003a05b5003a01f4ffba01f4ffba0242fffe0300fff7
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3005f02b3005f02b3
005f02b3005f03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba08c9003e08c9
003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba
04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba045a002a039a00360435ffba0327ffba
064f0027064f00270224ffba021affba04a7004604a700460224ffba021a
ffba04cf002d04cf002d0327ffba0327ffba040d0047040d004701a8ffba
01a8ffba02b4002302b400230327ffba0327ffba043500450435004501f4
ffba01f4ffba024200360300fff7039affba0327ffba0375003203750032
051b003204b50024051b003204b5002401f4ffba01f4ffba045a003104ce
0041045a002704ce003a045a005304ce004a045a005304ce004a06000100
060001000000004600000046060001000600010006000100000000460000
004606000100060001000000004800000046060001000600010006000100
000000460000004600000046000000460000004000000031060001000000
004600000046060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100028d00ca028d00c7028d00c6060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0100ffba0800ffba1000ffba06dc0063053f004406d500a1055b00830000
fddc0000fc2f0000fca60000fe540000fcd70000fd730000fe290000fe0d
0000fd110000fc670000fd9d0000fbf50000fc720000fed50000fed50000
ff02041b00a006ac006b06ac00190000feb60000fd730000fe080000fca6
0000fe530000fd110000fbc80000faf40000faaf0000fc720000fbaa0000
fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb980000fdea0000fe84
0000fdc20000fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000
fd580000fc900000fd150000fc2c0000fc130000fc120000fb960000fb96
01c700880556fffd0473004a0556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a055600a20473004b055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b0239006301c7001f023900ba01c7007c
063900630473004406390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406dc0063
053f004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004405c700a10473008305c700a10473008306d500a1055b0083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
00830556000604000021055600060400002105560006040000210556fffd
0473004a0239ffe201c7ffb0063900630473004405c700a10473008305c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
0000fefe0000fefe0000fefe0000fefe0455fffd02eb000c07630007055a
fffb04a900a10380008604a900a10380008605c700a4046b00880473fffd
040000140473fffd04000014055600090400000f05550057042b00450555
00a1047300870605006304730055063900600473004405b5003a01f4ffba
0224ffba021affba04a7004601f4009e01f4001001f4001b01f4001001f4
006b01f4fff90227ffce0000000f0000fff502aa00a402aa00a400000013
00000056000000560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8
001d01d6fff501a8009301d6001303750032037500320375003203750032
051b003204b5002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba0481003604350036043d
ffba043dffba02b3003202b3003202b3005f02b3005f02b3005f02b3005f
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3005f02b3
005f02b3003802b3003802b3004902b3004903e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba0692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e
08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435
ffba0327ffba064f0027064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba064f0027064f00270224ffba021affba064f
0027064f00270224ffba021affba064f0027064f00270224ffba021affba
04a7004604a7004604a7004604a70046093e0032093e00320740ffba0740
ffba067f0014077600140327ffba041effba04cf002d04cf002d0327ffba
0327ffba04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327
ffba0327ffba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba067f0014077600140327ffba041effba067f00140776
00140327ffba041effba067f0014077600140327ffba041effba040d0047
040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d
0047040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba
043500450435004501f4ffba01f4ffba0435004504350045043500450435
0045043500450435004501f4ffba01f4ffba043500450435004504810036
04350036043dffba043dffba024200360300fff7031a001a031a001a031a
001a03750032037500320375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
003203750032051bffba04b5ffba051b003204b5002401f4ffba01f4ffba
0375003203750032051b003204b5002401f4ffba01f4ffba051b003204b5
0024067f0045067f0045067f0045067f004501a800280000fe290000fea2
0000fef30000ff1d0000ff120000ff920000fe7e08fc003208ad00320000
ff880000ffaf0000ff3f0000ff640000fe7e0000ff36018d000002f6fffd
0000fe820000ff1004cd00320000ff580000ff580000ff640692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a
039a00360435ffba0327ffba034d007902b400230242003601f4ffba0290
ffba01f4002f01f4003b01f4001201f400b101f4006d067f001407760014
01f9009b0000fee002bc000003f2009b045afff504cefff5045a005304ce
004a045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a04350071043500ad045a000f04ce000f0473
001406110014054000a7047300860540000a0473000a05c7005105c70066
0400005005c7fffd067a00140540004a04730046047400480556006e04d5
005304e3ffc40639006d04fe000f070c008701c700830239001f05560096
0400008801c7001504000018072000a405c7ffb80473008b0639006006f2
00630557004406090014047300860556009e0556006b0400004f04f20094
030b00440239002404e300140239002404e3003005fb006105c700a1062e
00100400002104e300290400002804e3002904e30031045c0044045c003f
0473003c0473005503ab003203e5002404730087021400bc034e00bc04ac
0072023900b00aaa009e09c7009e08640046087f009606aa0096039c0083
09c7009c078e009c062b0087047300550556fffd0473004a0000fefe0556
fffd0473004a08000001071d00440639006d0473001a0639006d04730042
05560096040000880639006304730044063900630473004404e30029045c
004c01c7ffa20aaa009e09c7009e086400460639006d04730042084600a4
04f2009e05c7009c047300870556fffd0473004a0556fffd0473004a0556
00a20473004b055600a20473004b0239ff8a0239ff64023900040239fff6
0639006304730044063900630473004405c700a102aaffcc05c700a102aa
006805c700a10473007605c700a1047300830556005c0400003f04e30030
02390024045c0051037e001305c700a40473008705a600a404d6005e0486
005e04e30029040000280556fffd0473004a055600a20473004b06390063
047300440000fefd06390063047300440639006304730044063900630473
004405560006040000210473005704730048047300860473008604000013
0400005004730046047300460473005505e9005503ab004903ab0032050d
0032040f00440239ffb90473004204730042047800500402001904ef0019
0473008b047300870473008701c7001901c7005702d90044029e0000026e
001401c700830493008306aa008406aa008406aa00870473ffa60473008b
046c00870473004406530044063f00570466004402aaffe402aaffe402aa
ffe402aa008502aa008502aa008502aaffe40455008a0455008a0400003f
01c7ffa20214ffb901c7ff7202cb00000239000f0239002404730019048c
0054046000880400001a05c7000604000018042800190400002804540028
045c004c045c007904000024040000500400002404000050063900630440
0088040f004904780050046b0088032e000004000008033b008804730048
040000240400005007b7004607400046080b004605b30024036f002405c0
0024061c0013054a0083050f008303e2001e043800630311006403110064
0146ffce01eb006401eb000001eb000002ea006403d90000029100000187
005a02d7005e01c7008001c7006c01c7008a02aa00fb02aa00fb02ca0032
02ca003204ac007004ac007004ac006504ac006502aa012102aa00de02aa
005902aa012102aa001d02aa005902aa00de023900b6023900b602aa00fb
02aa00fb02aa00a602aa00a602aa00a602aa001d02aaffe202aafffb0294
00000142006402b8003202a0000002ca0032031000960310009603100096
031000960310009602aa006202aa006202aa002802aa001d02aa00470457
009604570096045700960457009604570043045700430457004304570043
04570043031000430457002f0457002f0457002f0457002f0457002f0310
002f04570025045700250457002504570025045700250310002f0457001a
0457001a0457001a0457001a0457001a0310001a04570042045700420457
004204570042045700420310004204570096045700960457009604570096
0457004204570042045700420457004204570042031000420457002f0457
002f0457002f0457002f0457002f0310002f0457002f0457002f0457002f
0457002f0457002f0310002f045700260457002604570026045700260457
002603100026045700420457004204570042045700420457004203100042
045700960457009604570096045700960457004204570042045700420457
004204570042031000420457002604570026045700260457002604570026
031000260457002304570023045700230457002304570023031000230457
002f0457002f0457002f0457002f0457002f0310002f0457004b0457004b
0457004b0457004b0457004b0310004b0457009604570096045700960457
00960457004204570042045700420457004204570042031000420457001a
0457001a0457001a0457001a0457001a0310001a04570024045700240457
00240457002404570024031000240457002f0457002f0457002f0457002f
0457002f0310002f0457004e0457004e0457004e0457004e0457004e0310
004e045700960457009604570096045700960000fec10000fec60000fdac
0000fed80000ff920000fee90000ff4c0000fea00000fec40000ffce0000
ff660000fea00000fed80000fed80000ff970000ff980000ff990000fff4
0000ff420000ff420000ff440000ff5f0000fe870000ffec0000ffa60000
ff510000ff510000ff510000fec90000ff1c000000000000fee90000ff4c
0000ff930000ff2a0000ff560000ffce0000fe870000febb0000fec40000
fec40000fed80000fed80000feb30000fec90000fdad0000fec80000feb3
0000fec90000fdad0000fe160000fee60000ffa60000fe870000ff440000
feba0000ff230000ff9a0000fdac0000fe88000000000000feb00000ff98
0000fe930000ffa60000fe870000fe1c0000ff660000ff440000feb00000
feb00000feb00000ff030000ff520000fd1f0000ff530000ff530000ff53
0000feb50000feb50000ffc30000feae0000fedc0000fec70000fec80000
fedc0000fe1e0000ff420000ff510000feb70000feb002aa00de02aa0059
02aa00fa049a007004600000062e001407aa0000062e0014047b004c063f
005704cf0044063900630473004405c700700400005004e300a8033b0088
04ff0000043c0032060d000a049d0042072000a406aa0084056500630473
008b056400a40400000a0556006b0556006b04e0000504c5001905e5005f
046e004403b600140347002804cf00440495005b0400005001c7ffa20639
00600389004d03890050055600a205c000a10473004b047800870ab4006d
04fe00100639001404e70014079900bf05b500880558000104000006072e
00bf0590008806a10078057b007a086d00bf06f0008804d5006603ab001f
065f0039058200480639006004730044066d0009050c001a066d0009050c
001a08980063072c004406aa002004e6001c0987006d06d000500000fe37
0ab4006d04fe001005c7006604000050040700140000fea60000febc0000
ff980000ff980000fc2b0000fc4c05c000a10478008705400004042b0014
0556009e04730087055d00a40464008804d5004e03ab003204a900040380
000005ef002904490028070900a4052f0088091800a006f600880606003e
042b002305c700660400005004e3003003aa002607670031058700260555
0057042b004506e4000a0554000a06e4000a0554000a023900bf07630007
055afffb055700a1046800860540001204ab001805c700a4046b008805c7
00a4046b008805550057042b004506aa00980580008c02aa002e0556fffd
0473004a0556fffd0473004a08000001071d0044055600a20473004b0605
00630473005507630007055afffb04d5004e03ab003204d5004e045c004c
05c000a10478008705c000a1047800870639006304730044063900600473
004405c0004a0415002b0515000a040000210515000a040000210515000a
0400002105550057042b0045071500a805c0008b0540004a0473004607bf
004a0703004607a6006606860053054d00660413005307c3001207470018
084600a4070700880639006d0478005005f90030055300260000ff430000
ff290000ff6a0000ffac0000ff590000ff560000ff730000fed70000fe5c
0000005e0000ff560000ff56000000500000ff0b0000fe550000ff430000
ff5c0000ff750000ff640000ff560000ff0b0000ff8a0000ff560000ff43
0000ff430000ff640000ff75000000500000fddd0000ff750000ffad0000
fefe0000fefe0000fedf0000fedf0000ff580000ff200000fefe0556fffd
0473004a05560096047300860556009604730086055600960473008605c7
00660400005005c7009e0473004605c7009e0473004605c7009e04730046
05c7009e0473004605c7009e04730046055600a20473004b055600a20473
004b055600a20473004b055600a20473004b055600a20473004b04e300a8
023900130639006d0473004205c700a40473008705c700a40473008705c7
00a40473008705c700930473006805c700a4047300870239ffdf01c7ff92
023900200239000605560096040000880556009604000088055600960400
00880473009601c7007e0473009601c7ffb90473009601c7ffa504730096
01c7ffa306aa009806aa008706aa009806aa008706aa009806aa008705c7
009c0473008705c7009c0473008705c7009c0473008705c7009c04730087
063900630473004406390063047300440639006304730044063900630473
00440556009e047300870556009e0473008705c700a102aa008505c700a1
02aa008505c700a102aa005e05c700a102aa00260556005c0400003f0556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
04e300300239002404e300300239002404e300300239ffff04e300300239
000e05c700a10473008305c700a10473008305c700a10473008305c700a1
0473008305c700a104730083055600090400001a055600090400001a078d
001905c70006078d001905c70006055600090400000f055600090400000f
055600060400002104e300290400002804e300290400002804e300290400
0028047300870239000305c70006040000210473004a01c7008904a00048
04a0004804a0004804a0004804a0004804a0004804a0004804a000480556
fffd0556fffd068200130682001306820013068200130682005606820056
039100620391006203910062039100620391006203910062061e0000061e
0000076c0000076c0000076c0000076c00000473008b0473008b0473008b
0473008b0473008b0473008b0473008b0473008b068f0000068f0000081f
0000081f0000081f0000081f0000081ffff3081ffff301c7008101c70081
01c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7ffa2030100000301
0000049100000491000004910000049100000491fff30491fff304730044
0473004404730044047300440473004404730044069d0000069d0000082d
0000082d000007c9000007c9000004600088046000880460008804600088
046000880460008804600088046000880682000007ae00000812000007ae
0006063f0057063f0057063f0057063f0057063f0057063f0057063f0057
063f0057065f0000065f000007ef000007ef0000078b0000078b0000078b
ffff078bffff04a0004804a0004803910062039100620473008b0473008b
01c7ffe601c7006804730044047300440460008804600088063f0057063f
005704a0004804a0004804a0004804a0004804a0004804a0004804a00048
04a000480556fffd0556fffd068200130682001306820013068200130682
0056068200560473008b0473008b0473008b0473008b0473008b0473008b
0473008b0473008b068f0000068f0000081f0000081f0000081f0000081f
0000081ffff3081ffff3063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd0556fffd0556fffd0556
fffd02aa00e502aa00fd02aa00e502aa000602aa00060473008b0473008b
0473008b0473008b0473008b068200000682000006f3000006f3000005c7
00a402aa001302aa001302aa000601c7ffbb01c7ffab01c7ffca01c7ffca
01c7ff9301c7ff930239001a0239fff5036500000365000002aa001302aa
001302aa000604600088046000880460008804600088048d0083048d0083
0460008804600088055600060556000606e6000007180000061e000002aa
ffea02aaffea02aa0059063f0057063f0057063f0057063f0057063f0057
07650000069d000007270000065f000005fb006102aa00de02aa00e50473
000d05c7006605c7006606aa008705c70024095000a1078d00190556001f
04e30030080000290400003004c100660000ff530000ff530000ff530000
ff5301c7001901c7ffa2042b0005055600110574004602cbffa3057a0087
02f0ffc8057f000a057f000a02aa008402aa008402aa00c902aa00c902aa
00a002aa005902aaffaf02aa003a02aa0006023900b902aa00a902aa00a9
02aa00a902aa00a9032e001e032e001e02aa003a0000ff730000ffa50000
fed80000ff230000ff720000ff720000fee70000ffa50000ff530000ff53
0000ff530556009e0473008703f8001905fb0019071d0044044000190400
0050046900870469001903eb008703ab003201c700880361004104000088
033600100580008c04780087047300440400001304de004404de004404de
000d078d005003a800440473004404730044042b00840455001f0455001f
03aa00260460008804c6004405de004404c600440400001a05c700060400
002803ab0032036b003f04db001f02eb00880400001a04550088042b0084
05b4007a04ab001803a00000054f0000035100320351ffd1039800320348
00320348003203f80032036e0032015600690284002d0366003202d00032
0415003203710032036f003204180032030f003203590032039c00320376
0031036f003204fb000002fa003202fa00320304003204cc003203050064
0305003202f9003202f90032028c0032028c0032030400320142006402b6
006404950064030f00640305003202d50032030500320305003203060064
01c20032030f006403420032049500640292000003200000031500640292
0000030600320385003202bf00000142006401eb0064030f006402920000
0315006402920000030900320385003202bf0000077d00460a6600460383
00460a2f00460541ffba01e9003c045a00110000ff0d0000ff350000fece
0000feb70000fec90000ffcf0000ff4f0000ff9e0000feca02b3005f02b3
005f03e9004a03e9004a039affba0327ffba039affba0327ffba05ad0069
053d002d05fd009604dc005004e0003c05f6009b053f00280650002804ac
00720000000000000000000000000473fffc02aa005302d5ffce01a8ffba
01a8ffba01a8ffba01a8ffba0658001509c5004704000000080000000400
00000800000002ab000002000000015500000473000002390000019a0000
00ab00000000000005e5000305c7006606aa00980580008c074400830718
0046071800480556fffd05c70066040000140473000a04e300300400004f
0400002804a5001d000001020000ff420000febf0000ff3a0000ff53048d
000a05c7005105c7006605c70051045500a102eb00880000ff430000ffac
0000ffac02d2009600000000021affba0250001e0000ff3a0000ff5b0000
ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a05b5003a01f4ff96
01f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba02b3003202b3003202b3005f02b3005f03e9
004a03e9004a0692003e0692003e043fffba043fffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba067f0014077600140327ffba041effba067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
02b4002302b400230327ffba0327ffba02b4002302b400230327ffba0327
ffba043500450435004501f4ffba01f4ffba043500450435004501f4ffba
01f4ffba043500450435004501f4ffba01f4ffba040d0047040d004701a8
ffba01a8ffba03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0473ff93047300460239ffbf06aaffd50473ffb70473
ff9102aaffa402aaffa40400ffff0239ffb90400002804730089030b0064
047400480649002401c7001901c700190473001e0460001e048c000a0473
0086047300460239001305b400420400008801c7fffc06aa00870473008b
0473008702aafffb0400003f0318ffa20400001a0400000f040000280473
004a04730048047300460473004b03ab004903ab00320534005501c70088
0400001301c7ffa204730083045c004c0304006402d5003202c9003302fc
0032028c003201d5003201d5000003040032031100640142001901420064
0142006401420019022a0000014200640142000902330064049300640493
0064030fffc9030f0064030e0064030500320300003202b800320142ffca
01c20032030f001d031a00320306006402d400640292000002de003202de
003202de003202f4003202ea00320000febc0000febc0000ff730000fea9
023900b902fa003202f900320305003202a0000002f900320639006d0556
fffd0473000f05c7006602aa004104a0004804a0004804a0004804a00048
04a0004804a0004804a0004804a0004801c7ff9b01c7ffab01c7ff9b01c7
ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb046000880460008804600088
046000880460008804600088046000880460008801c7ffab01c7ffab01c7
ffbb01c7ffbb04600088046000880460008804600088045a005304ce004a
03a000130556001105c700290558000b055600a20473004b0400003301c7
ffa205e600630473004805c7000002aa000f055600060400002104000013
040000500400001301c700830455fffd02eb0001055600090400000f0556
00090400000f04d5005303ab00490540001204ab00180000fec60000fed4
0000fec60000fed40000fe5f0000fe5f0000ff720000ff730000fee7078b
000a03eb004c040000130473000a01c700150473fff40556001105c700a1
047300190239ff8b05c700a404730087055600960400008804e300290400
00280400003b049e00a403670088053000480000ff530000ffbc0000fefe
0000fefe0000fea40000fea401c7008805c900a505c7009c05c900a50000
fecd0000ff480000fec90000fece0000fec50000fed00000fed10000feee
0000fed60000fedc0000fdd90639005804730048078d001905c70006059f
00a40000feb905dc006304c60009084c001906ba0006023900b903800072
0187005a0187005a0400009904000099023900b0023900b0023900b002aa
0019000000460000003b000000310000005600000044000000560000004a
0000004904e30030047300500473005c0312003f045000480446003d0473
00310450003d047d00620427003f0473005604790054047300550319003b
0473003c047300560473003204730055047e0062042f004b04730053047b
005505c5006a05d3006305f800a6094a00a605f8009c0302003b054100a4
063900600472004601c7008903f80087020a00890473004e0250000e0478
00850473005c0473005c0302003b020a008901c700880471000004890098
04c3005c04e70098046f009804080098052f005c04f0009801ea00980373
00290489009803bc009805c7009804ec00980531005c046d00980531005c
04db0098046d004a0410002904dd0091046800080659001e046f0008046c
0008040e001f0691000006aa005c03bc003805310031046f009804e70014
04c3009004710000047100000471000004710000047100000471000004c3
005c046f0098046f0098046f0098046f009801eafff401ea008e01eaffb6
01eaffda04ec00980531005c0531005c0531005c0531005c0531005c04dd
009104dd009104dd009104dd0091046c0008047100000471000004710000
04c3005c04c3005c04c3005c04c3005c04e7009804e70014046f0098046f
0098046f0098046f0098046f0098052f005c052f005c052f005c052f005c
04f0009804f2002e01eaff9601eaffbd01eaffd401ea003e01ea00870543
0098037300290489009803bc009803bc009803bc009803bc009804ec0098
04ec009804ec009804f500980531005c0531005c0531005c04db009804db
009804db0098046d004a046d004a046d004a046d004a046d004a04100029
0410002904100029040e002904dd009104dd009104dd009104dd009104dd
009104dd00910659001e0659001e0659001e0659001e046c0008046c0008
046c0008040e001f040e001f040e001f0471000006910000053100310471
00000489009803ae009804710000046f0098040e001f04f000980531005c
01ea009804890098045a000205c7009804ec0098042f004c0531005c04e6
0098046d00980425006a04100029046c00080546004c046f00080543004c
0531005204710000046f009804f0009801ea008e0531005c046c00080531
005201eaffda046c0008046f009805af002903ae009804c7005c046d004a
01ea009801eaffda0373002906f4000f06b6009805da0029041600980463
002304e6009804710000048600980489009803ae00980469000f046f0098
06540023041f004604e5009804e50098041600980469000f05c7009804f0
00980531005c04e60098046d009804c3005c0410002904630023050d004c
046f000804dc0098047d004c06280098061e0098057c003c05e700980455
009804c6004606af009804db00120323009802aa002202aa006b02aa0019
02aa002102aa001702aa002202aa002e02aa004902aa002a02aa003302aa
002e02aa003302aa002205c5006a05c5006a05c5006a05c5006a05c5006a
05c5006a05c5006a05c5006a05c5006a05c5006a05c5006a05d3006305d3
006305d3006305d3006305d3006305d3006305d3006305d3006305d30063
05d3006305d3006305f800a605f800a605f800a605f800a605f8009c05f8
009c05f8009c05f8009c05f8009c05f8009c05f8009c05f8009c05f8009c
0302003b0302003b0302003b0302003b030200320302003b0302003b0302
003b0302003b0416ffac0302003b0302003b0302003b020a0089020a004e
0269008902a50089020a00070302003b0302003b0302003b0302003b0302
00320302003b0302003b0302003b054100a4047200460472004604720046
04720046047200460472004604720046047200460472004601c7ffa703f8
0087020a0089020a004e0269008902a50089020a00070250000e0250000e
0300000e0250000e0478008504780085047800850478008504a0005702aa
001702aa002202aa004902aa002a04ee001504ed009d04ed009d060b001a
04d5008505e3008502260099022600890226002c0226001e022600630226
00300226001b0226001d0226001d022600290226001e022600260226001d
02260008022600280c9600460e0c00460000ffba0ed200460000ff5b0000
ff910000ffb70000ff9b0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0692003e0692003e043fffba043fffba03e9
004a03e9004a0481003604350036043dffba043dffba01a8ffc301d6ff5f
01a8ffe901d6ff85051b003204b5002401f4ffba01f4ffba051b003204b5
002401f4ffba01f4ffba051b003204b5002401f4ffba01f4ffba03750032
037500320375003203750032067f0045067f0045067f0045067f00450481
003604350036043dffba043dffba0692003e0692003e043fffba043fffba
0692003e0692003e043fffba043fffba04cf002d04cf002d0327ffba0327
ffba04b4ffe00500ffe00496ffe804e4ffe8075c003205da0032070e0032
051300390bb700000000fe2c0000fffc0000006b000000730000006b051b
003204b5002401f4ffba01f4ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba051b003204b5002401f4ffba01f4
ffba051b003204b5002401f4ffba01f4ffba051b003204b5002401f4ffba
01f4ffba0000fff5049e00a403cd000a04e3003003aa002605c000a104ac
0087055600960473005a0a6600440473007e0556001d07ae001206150018
064e009e05be008707a9000906da001f0556009604000086088c000d0713
0018090e00a406ce008805c700a40455008805a300a2046f008702390013
0239001304740048062200bf032f000e04ba005c0474004905590014049b
000a06aa00980556fffd05dc00a50590004b02aaffe50473004403eb004c
0146ffce029200000556005c04e3002902390069063c00aa0b56ffc2084a
ff120b0c00320ed2004401a8ffba01a8ffba01a8ffba01d6000201a80032
01a8004601a8ffba01a8001a0251003a01a8002901a8004601a8ffba01a8
004801a8ffba01a8002901a8ffba01a8004601a8ffba01a8006e01a8ffba
01f4009e01f4001001f4001b01f4001001f4fff9022e008d01f4006b0199
004602bf003202bf00320473000f02ea001302ea00130427fff70427fff7
051b0032051b0032051b0032051b0032051b0032051b0032051b0032051b
0032048000240480002403e5ffba048000240480002403e5ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba04a7
ffba04a7ffba04a7ffba04a7ffba064f0027064f00270224ffba021affba
04a7004604a700460224ffba021affba040d0047040d004701a8ffba01a8
ffba02b4002302b400230327ffba0327ffba051b003204b5002401f4ffba
01f4ffba051b003204b5002401f4ffba01f4ffba03b7004a03b7004a0375
003203750032036b0046036b00460000ff1e0000ff480000ff1e0000fee7
0000ff4f0000fef90000ffb50000ff520000ff470000ffb50000ff520000
ff470000ff000000fea60000ff000000ff230000ff240000ff570000ff57
0000ff920000ff920000ff920000ff920000ff2f0000fed70000ff340000
ff31045a005304ce004a0000ffac033100190411002d04d1009605240028
0000ffac0000ff2a028d00ab028d00a00444003c043d003c0444003c043d
003c0444003c043d003c0445003c0444003c043d003c04a70046028d00ab
0327002202300014017a002e0000ff760658001505ea00a505cc00a505ba
004605be004605cc00a505ac009104c800a505ca00a4067400a405ba0046
054500a5043900a5076500a50622009b0590009b04ed003c05a6008a05be
0046059a009b060900a505bb009105aaffec0599008705cc00a505980087
0657003c05e8009b061d00a505cc00a5059600460547005c056d00a5056b
0069042000a506180050057d00380642006406190046023100b601c7006c
015bff79019affa1021f001f01daffb4041c004206a900820468008704a3
004804a90087046d00870467004803ef0087046800870557008704a30048
0468008701c2008706ad008704570048046d008704680087042f0046046d
00870478008e0468008201c2ffa3046dffc403a600060468008702c60010
06a900820423005f04830087046800820468008206a60082046800870471
00420327008706a600820467fff80470004605f3003c05b40087023900b9
029800220802006c0802006c05d0004608d5008208d5008208d0008208d5
00820b1500820473001c08000000000000000000ff4d05b5003a05b5003a
01f4ffba01f4ffba015e009302b3005f02b3005f08c9003e08c9003e06c5
ffba06c5ffba067f0014077600140327ffba041effba0242003a0193003a
03e9004a03e9004a0000ffce0400003705c7ffc0046bffa30aa30000088e
000005550014048500000540001204ab001806a30000064a004c04460013
0606001306060013044b001305f2003f065b0087045a002a039a00360435
ffba0327ffba04cf002d04cf002d0327ffba0327ffba0000ff530239006d
01ac005a0239005b01ac004e05c700a40473008706a3003005050024046b
005a046b005a0421003c0421003c04b1003c04b1003c04080098046d004a
093efffd074c004a0981fffd0759004a0829fffd071f004a07b3fffd05e0
004a07b3fffd05e0004a07b3fffd05e0004a05c700510400001d05560012
040000060556009604000088055600120400000605350096027b00830473
001201c70006066b000004e3000007060063053600440aeb0063079d0044
055600120473001106a10014059b00140778000a067a000a063900580473
004807d6005805fb004804a600280348001e04a7003c04a7003c05560009
0400ffe4078d001905c700060464003c03f3003205560012047300060556
001204730011041300bf0344008703900050039000500403001404030014
047d0055047d0055029d003c056a004602c2008307b100870571008702aa
0085060000980561002403ce000a0639001a04730049033d00bf02aa0085
04b8005604b80056049f00560473004901c70083066600a504ca0087033d
00bf02aa0085052600660400005005c700a4038e00140623009c04cf0087
05c7fffa0400ffff040000500473008706680014057a001e053b00000239
0013055a005c0433004605b7005c04640046055a005c043300460639001e
04730001055600150400001505c7001a0473001505c7002a02aa00150556
005c040000380674001404d5004e05dc0063057900140556000404e30030
0431003f05e2004c05560096049a008c08060062063f0057062800370396
000f051d003206aa008704e3005e0556005906aa0098023900bf097b0017
04a0ffef0734004403d300690473fff90554000a023900130473004202f2
000a02c6001401f0fff606cf0087048e0087047300870462006904620058
04e30093078d0052078d0054078d0054079d0044079d00440465005a04db
009802aa00850406008503a9001e0505001e03cb00320599003201c7ffa2
047300830473001906aa008706aa008704e700140433001104e8fff604c0
fff604d5000f0400ff1604d5ff160400fee80400002102aa002e03110064
0230001e01fb001e0352001e05c4008806200088078d0068075900830473
0055053100520556009604e3003005b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a0315ffba0315
ffba03e9004a03e9004a051b003204b5002401f4ffba01f4ffba064f0027
064f00270224ffba021affba04a7004604a700460224ffba021affba0435
00450435004501f4ffba01f4ffba0000feb10000ff080000ff3e0000fe1c
0000fe8a0000ff320000ff330000ff100000ff100000fd840000fc860000
fc830000fd650000fe310000fdb70000fef90000fe6703de00e10874000d
000d000000>
<000000000000006c0000006c0000006c0000006c00000130000001f60000
03de000006c20000089c00000ae000000b3c00000bce00000c8600000da8
00000e3200000ec000000f1600000f6400000fe400001248000013820000
160c0000188400001ada00001d4400001fb40000207a000023d4000026b4
00002726000027fe000028a200002932000029da00002af600002d340000
300000003262000033f8000035aa000036c6000037c2000039e600003b5a
00003cc200003e1a000040a600004168000044fe0000472c000048ea0000
4a6c00004cfc00004fea000053c0000054fc00005682000058fa00005c54
000060020000629e00006426000064b00000652c000065b0000066500000
66920000671e00006ae600006d56000070100000728200007504000076aa
0000795400007b6000007d9000007f58000082a00000843a000088120000
8a4000008c9600008ecc000090ea0000922e000096dc0000989600009a9c
00009d320000a36c0000a5e00000a9060000ab2c0000ac4c0000acaa0000
adce0000ae980000aee40000af180000af540000af960000affc0000b042
0000b0760000b0ac0000b0e20000b1320000b1740000b1c60000b1fe0000
b2500000b2860000b2c60000b3080000b3460000b3900000b3d00000b3fe
0000b4360000b4860000b4bc0000b4fc0000b5360000b57a0000b5c40000
b6000000b6300000b6740000b6ac0000b75a0000b7f40000ba560000bc42
0000be480000bea40000bf560000c1ae0000c4360000c6580000c76e0000
c8000000c8800000c9d40000cb740000ce120000cfa80000d0640000d13e
0000d2320000d3b80000d5880000d69e0000d7880000d8080000d8760000
d9bc0000db0a0000dbae0000ddc00000e08c0000e4340000e5500000e60e
0000e6720000e7460000e8ac0000ea720000eb240000ec020000ecdc0000
ed620000ed9e0000edf60000ee440000f0a60000f3400000f3860000f3c8
0000f5140000f6620000f7260000f7de0000f8a60000f9780000f9cc0000
fa020000fa6c0000fc080000fc8e0000fcfc0000feae0001004800010158
0001019c0001024e00010394000106340001066e000106b2000106ee0001
075000010792000107d80001082400010856000108aa000108e800010918
000109560001099c000109de00010a1c00010ab000010b3e00010c5e0001
0caa00010d3e00010d8400010e3800010ede00010f5e00010fd80001105a
00011184000112a4000112d80001130c0001133c00011380000114140001
15c60001182c0001185e00011898000119c000011b7800011bc200011d62
00011e0200011f020001203200012202000123b400012602000127380001
277e000127b2000127f40001282e00012882000128ca0001291400012944
0001297400012b9600012be400012c1c00012c4c00012c8000012ca60001
2ccc00012d1000012efc000130a6000130cc000130f20001313600013166
00013196000131ec000132ee0001341a000134640001349c000134f60001
35340001356800013598000135d400013614000136520001368e000136d0
000137060001374200013782000137a8000137cc0001381c000139ac0001
3a0200013a3600013a8400013ad000013b1200013b4a00013b8000013bc8
00013c8400013e4e00014058000142060001442c000145c2000147720001
487000014a3e00014abc00014ae400014ba200014eb400014ef400014f34
00014f7400014fb2000150100001506e000150dc000150fc000151e60001
52b4000152ea0001534c00015396000153e0000153fc0001541800015438
000154580001547800015498000154be000154e40001550a000155300001
556000015588000155b0000155dc000156080001563c0001566600015692
000156c8000156f20001571e000157540001577e000157a8000157dc0001
580c0001584000015884000158b4000158e80001592a0001595e00015990
000159d200015a0600015a3600015a7800015abc00015b0200015b5e0001
5b7a00015b9600015bb200015bce00015bea00015d580001600400016274
00016290000162aa000162c6000162e2000162fe0001631a000163760001
63b00001641a000164e4000165840001665a000166da00016762000167d2
00016868000168c60001690c0001696a000169cc00016a8e00016b4c0001
6b7800016be600016c2a00016dd000016f0400016f4400016f6000016f8c
00016fc4000170100001705000017084000170b4000170e4000171140001
715800017188000171b8000171f8000172280001725800017288000172c8
000172f800017328000173580001737e000175ca000175fa0001762a0001
77bc000179a2000179d200017a0000017a3000017a5e00017a8e00017abc
00017ae000017b0400017b3400017cd400017cfa00017d2000017ede0001
7f0400017f2800017f4e00017f7400018108000182d40001830c0001834c
00018388000183b8000183de0001840200018432000184620001857c0001
872a0001875a00018794000187d40001880400018834000188760001889c
000188c2000189020001894200018972000189b200018aba00018b3a0001
8c1e00018c4e00018c7e00018cae00018cde00018d2c00018d5e00018d90
00018dc000018df000018e3600018e6800018e9800018ece00018f560001
8f98000191d2000192fc000194d20001975a00019a1600019be600019c5c
00019ce600019cf600019d9e00019fca0001a12c0001a2c60001a3ce0001
a57a0001a7c00001aa280001ab3c0001ab4c0001ab5c0001ac8e0001ac9e
0001acae0001acbe0001acce0001acde0001ae260001ae360001ae460001
aeea0001aefa0001afe60001aff60001b12c0001b13c0001b14c0001b15c
0001b2ec0001b5000001b5420001b5780001b5ae0001b5de0001b60e0001
b6620001b68a0001b84a0001b9b00001bb300001bcba0001be6e0001bee4
0001c08c0001c1c40001c1d40001c1e40001c3a60001c3b60001c5420001
c6de0001c82e0001c9a40001cb560001cd4e0001cd8e0001cdc60001cdfc
0001ce220001ce520001ce780001d03c0001d06c0001d1e00001d1f00001
d2000001d2420001d2520001d42c0001d60a0001d7ce0001d7f60001d826
0001d9a40001d9b40001db1a0001db2a0001dbde0001dd6c0001dd7c0001
e0260001e1ee0001e3ac0001e3dc0001e5820001e6e20001e6f20001e702
0001e7120001e8080001e8180001e8280001e8380001e9640001eb260001
eb360001ec800001ede20001ef560001f1120001f25e0001f4160001f54e
0001f5840001f7f60001f8960001f8a60001fa660001fc3a0001fcd60001
fe860001fe960002014800020308000204a4000204d4000206a20002084e
00020a3000020b8400020b9400020ce000020cf000020d0000020dda0002
0dea00021014000210240002117c000212b2000214800002165e000217d0
0002197000021ade00021b3000021d4800021ef400021f320002211a0002
213e000222ba000222ca000222da0002231200022322000224ee00022688
0002282c000228500002288000022a1000022ae000022bba00022bf60002
2de600022efe00022f8c000230b200023160000232340002327c000232f4
000233b4000233da0002341c000234700002354c00023596000235c80002
35f0000236160002364a0002368e000236d2000237100002384e00023906
00023a2600023a9c00023b6a00023bbc00023c4e00023cfe00023df20002
3e4600023edc00023f9a000240840002413600024256000242a800024352
0002448800024560000246460002474c000248320002491400024a080002
4aa600024bac00024ca600024d1e00024d9600024e0c00024e4200024e9e
00024f6600024f7e00024f9600024fae00024fc400024fe0000250a00002
50d400025104000251380002516800025198000251c800025368000253a0
000253e00002541800025450000254ec000255e600025616000256ba0002
56e80002572800025778000257a8000257f40002598c00025af200025c52
00025c9800025cec00025d2400025e9600025ecc00025ee400025efc0002
5f1400025f2c0002605c00026084000261c000026250000262fa0002637c
00026438000265500002665e000266920002671800026874000268f60002
693c00026a4600026a8e00026b9200026c0e00026c6600026cea00026dd4
00026eea00026fe600027090000271800002725c00027340000274280002
74d800027550000277ae000277d800027802000278ba000278e400027a26
00027b2c00027c1600027c4000027c6a00027c9400027cbe00027ce80002
7d0800027d3200027d5c00027d8600027db000027dda00027e0400027e2e
00027e5800027e8c00027eb600027ee000027f0a00027f2200027f3a0002
7f5000027f6600027f9000027fba00027fe40002800e000280260002803e
000280560002806e000280860002809e000281e4000283b0000284b60002
8636000287d6000289fa00028b5400028d3600028e7a00028fa800029096
000290c0000290ea000291140002913e0002916800029192000291bc0002
91e6000292100002923a000292640002928e000292b8000292e20002930c
00029324000293460002935e00029546000295600002958a000295b40002
95e40002961400029664000296b4000296f400029766000297ba00029818
0002986e000298a4000298e60002992c00029976000299a6000299de0002
9a0e00029ba200029ee800029f1200029f3c00029f6600029f9000029fba
00029fe40002a00e0002a0380002a0620002a08c0002a0b60002a0e00002
a10a0002a1340002a15e0002a1880002a1b20002a1dc0002a2060002a230
0002a25a0002a2840002a2ae0002a2d80002a3020002a32c0002a3560002
a3800002a4820002a4980002a4c20002a4da0002a4ea0002a5160002a542
0002a5580002a56e0002a7140002a72c0002a7420002a7580002a7700002
a7880002a7a00002a7b80002a8480002a8d60002a8ee0002a9060002a91c
0002a9320002a94a0002a9620002a97a0002a9920002a9aa0002a9c20002
a9da0002a9f20002aa0a0002aa220002aa3a0002aa520002aa6a0002aa82
0002ab800002acda0002ad660002ad760002ad8e0002ada60002adbe0002
add60002ae720002ae820002ae9a0002aeb20002af8a0002af9a0002afb2
0002afca0002b1900002b1a00002b2f80002b3080002b3200002b3380002
b3500002b3680002b4d20002b4e20002b5d20002b5e20002b5fa0002b612
0002b62a0002b6420002b7820002b7920002b7a20002b7b20002b7ca0002
b7e20002b7fa0002b8120002b9640002bab20002bb800002bc640002bc7c
0002bc940002bcac0002bcc40002bcdc0002bcf40002bd0c0002bd240002
bd3c0002bd540002bd6c0002be720002c0700002c0800002c0900002c0a0
0002c1ea0002c1fa0002c2b20002c2c20002c3d00002c3e00002c4cc0002
c4dc0002c4f40002c50c0002c5240002c53c0002c54c0002c55c0002c6d0
0002c7fc0002c8f60002c9060002c9160002c9260002c93e0002caf80002
cb0e0002cb240002cb4e0002cb780002cb8e0002cba40002cbbc0002cbd2
0002cda20002cf580002cf820002cfac0002cfbc0002cfcc0002cff60002
d0200002d04a0002d05a0002d06a0002d0940002d0be0002d0ce0002d0de
0002d1080002d1320002d15c0002d1740002d1940002d1ae0002d1d00002
d1e00002d1f80002d2220002d2320002d2420002d26c0002d2960002d2c0
0002d2ea0002d3140002d33e0002d3680002d3920002d3bc0002d3e60002
d4100002d43a0002d4640002d48e0002d4b80002d4e20002d50c0002d536
0002d5600002d58a0002d5b40002d5de0002d6080002d6320002d65c0002
d6860002d6b00002d6da0002d7040002d72e0002d7580002d7820002d7ac
0002d7d60002d8000002d82a0002d8540002d87e0002d8a80002d8d20002
d8fc0002d9260002d9500002d97a0002d9a40002d9ce0002d9f80002da22
0002da4c0002da760002daa00002daca0002daf40002db1e0002dbbe0002
dc020002dc780002dca20002dccc0002dcf60002dd200002dd4a0002dd74
0002dd9e0002ddc80002ddf20002de1c0002de460002de700002de9a0002
dec40002deee0002df180002df420002df6c0002df960002dfc00002dfea
0002e0140002e03e0002e0680002e09c0002e0d00002e1040002e2960002
e4320002e5ce0002e75a0002e7a00002e7e60002e8540002e8b00002e902
0002e9720002ea4a0002eb160002ebee0002ecba0002ed5a0002ee740002
ef280002efaa0002f0040002f0440002f1620002f2ac0002f4440002f4a0
0002f4fe0002f55a0002f5b60002f66a0002f7200002f7cc0002f8780002
f9240002f9dc0002fa940002fb4c0002fb5e0002fb700002fb820002fb94
0002fba60002fc140002fc820002fd3a0002fd4c0002fd5e0002fd700002
fd800002fd920002fda40002fdb60002fdc80002fdda0002fdec0002fe9a
0002ff460002fff4000300a000030138000301720003019c000301c60003
021a0003026c000302e800030332000303ae0003040200030486000304d8
0003054e000305a60003060c00030662000306bc0003073a000307860003
07e40003084800030896000308e40003093c00030984000309ae000309dc
00030a0200030a3600030a6600030a9600030ae800030b5600030bac0003
0c2000030c7400030ce800030d2e00030d9600030ddc00030e3800030e68
00030ea200030ec800030ef800030f1e00030f4400030f7600030fa60003
0ff80003105e000310b40003111a0003116e000311dc0003121e0003127e
000312c00003130c0003134600031382000313bc000313f80003142c0003
145e0003148e000314be000314e80003150e000315380003156600031590
000315dc000316200003165600031692000316c6000316f4000317320003
17620003179c000317c6000317f40003181a000318400003186c000318c8
000318f8000319280003195800031990000319c4000319f200031a220003
1a5200031a8200031ab200031ae600031b3c00031b7000031bd000031c04
00031c5c00031c9000031cec00031d8a00031e5800031f78000320400003
20d000032166000323520003254e000326c600032842000329ec00032b9e
00032c8600032dbc00032eb400032fc6000330e40003321a000333840003
34f20003368800033804000339140003392400033a5000033b8c00033ca2
00033e2600033f0000033f760003402c000340d2000342420003427a0003
42f4000343b600034470000344d8000345de00034714000347e00003493e
000349b800034a3200034aac00034b6600034c1a00034c7600034cd00003
4d1800034d8800034e0400034e4e00034e8800034ece00034f1200034f64
00034fb600035038000350ba000350fc0003513c00035172000351a80003
51d600035204000352380003526c000352ae000352f00003532c00035368
000353a2000353dc000353fc0003541c0003543c0003545c000354960003
54d0000355120003555400035596000355d80003562600035674000356b6
000356f80003573800035778000357b2000357ec00035838000358840003
58c200035902000359480003598e000359ca00035a2000035a5c00035a98
00035ad800035b1800035b5400035b9000035bd000035c1000035c540003
5c9800035cec00035d7a00035dbc00035dfe00035e6600035ece00035f00
00035f3200035f6a00035fa200036038000360ce00036118000361620003
619e000361da0003623000036286000362d00003631a00036372000363ca
0003640a0003644a00036482000364ba000365040003654e0003658c0003
65ca0003660c0003664e000366a2000366f60003673c00036782000367c8
0003680e00036864000368ba0003691000036966000369b2000369fe0003
6a4a00036a9600036b0a00036b7e00036bf200036c6600036ca400036ce2
00036d2000036d5e00036d9c00036dda00036e1e00036e6200036eae0003
6efa00036f5a00036fa600036fe4000370320003714200037192000371e2
0003721a000372520003727200037292000373060003736a000373ac0003
73ee0003744400037492000374de0003752a0003756a000375aa000375f2
0003763a000376a600037700000377380003775000037790000377a80003
78780003797400037a3400037b2200037b7800037bce00037c2000037c74
00037cd800037d3c00037d9200037de800037e5e00037ed400037f160003
7f5800037f9a00037fdc0003801e00038060000380b60003810c0003815e
000381b20003823a000382bc0003835c000383fe0003843c0003847a0003
84b8000384f40003853200038570000385ae000385ea000386ce000387ba
000388d0000389ec00038ab600038b8000038c7a00038d7400038e720003
8f700003908e000391ac000392d2000393f8000394fa000395fc0003968e
000397200003975e0003979c000397bc000397dc000397fa000398180003
99280003993800039980000399c8000399e800039a0800039a2800039a48
00039a8a00039acc00039aec00039b0c00039b2c00039b4c00039bc40003
9bdc00039c6c00039cb000039cf000039d7200039df400039f4c00039f5c
00039faa00039ff80003a0340003a0700003a0b60003a0fc0003a14a0003
a1980003a1e80003a2380003a2940003a2f00003a4660003a5ce0003a606
0003a6400003a65e0003a67c0003a6ce0003a7200003a7720003a7c80003
a8040003a8400003a8960003a8ea0003aa220003aac20003ab100003ab50
0003ab8a0003ad200003afa40003b0500003b1e60003b3440003b4120003
b5b80003b80c0003ba440003bab80003bb2c0003bbc00003bce40003bd08
0003bd7a0003be860003bf960003c0a60003c1b40003c33a0003c36c0003
c40e0003c4360003c4980003c4fa0003c55c0003c5be0003c5de0003c5fe
0003c61e0003c63e0003c65e0003c67e0003c69e0003c6be0003c81a0003
c96e0003c97e0003ca3c0003cb720003cbd00003cce80003ce760003cf1c
0003d0620003d0a00003d0de0003d11c0003d1700003d1980003d1f20003
d2560003d29e0003d3000003d3600003d3d20003d44e0003d4ca0003d54c
0003d5d80003d6640003d6ee0003d76e0003d7a80003d7e40003d9480003
da120003da420003da720003dbaa0003dcfa0003dd0a0003ddf80003decc
0003dfc40003e0ba0003e23c0003e3960003e3a60003e4be0003e56a0003
e6ac0003e8020003e85e0003e9bc0003ea4a0003ebf00003ed620003ee76
0003eeae0003ef120003f0c20003f22c0003f28e0003f3f60003f4fc0003
f5b20003f65e0003f7860003f8740003f9540003fa940003fbc00003fcda
0003fe4a0003ffc40003ffd4000400b4000401aa0004025a000403560004
04020004050c000405f8000406c0000407e4000408e800040a1600040b54
00040cc000040df600040f8a000411320004122a0004133e000414700004
15620004159a000415f00004169e000416ae000417100004176c000417d2
0004181e0004185e00041896000418c2000418f00004192a00041a600004
1a9400041b1800041bce00041bfe00041c8200041cb200041cea00041e82
0004200e0004205800042092000420e8000421340004215a000421800004
21c2000422040004224600042276000422ae000422e40004231a0004235c
0004238c000423bc000424b2000425b6000425ea00042622000426680004
269c000426cc00042704000427380004276c0004279c000427cc00042802
000428380004286800042898000428cc0004290000042930000429600004
299a000429ce00042a0000042a3200042a6600042a9a00042aca00042afa
00042b2800042b5600042c8800042e3200042f660004309a000430ca0004
31040004319e0004330800043464000435280004363c0004366c000436a0
0004379800043948000439a000043a1a00043b5600043b9400043c060004
3c3600043c6600043ca000043d2800043d5800043d8800043f1a00044064
000441700004427e000443aa000445000004465c000447bc000448f60004
4a6800044bc800044bd800044d8e00044eb600044f50000450d8000450e8
000451e40004536a000454c2000455740004564400045750000457fa0004
58480004589800045948000459ee00045a6a00045bba00045cae00045da4
00045eb000045f8800046062000460f60004620800046398000464b60004
65ac0004665600046700000467ca0004687200046948000469c400046a22
00046b8400046cb800046e5400046f1600047016000470f00004722e0004
72da000473a400047494000475620004763e0004776a000478a200047992
00047a3000047b2200047c9200047ddc000480480004811a000481ce0004
829c00048390000484ce000484de00048612000487240004873400048840
00048970000489c400048b3800048c6000048d7400048f260004913a0004
93ce00049588000496b40004989400049a5600049be800049cb400049e50
00049ec600049f740004a0500004a0dc0004a17e0004a2200004a3040004
a43c0004a6980004a7e00004a7f00004a8000004a8620004a8c00004a922
0004a9c00004aa580004ab5c0004ac4a0004ac5a0004ac6a0004ad040004
ad9e0004adda0004ae560004aeca0004af200004af540004afda0004b066
0004b0de0004b13c0004b1d60004b2680004b2e80004b36a0004b3fe0004
b4320004b4940004b5460004b70c0004b7440004b9200004ba340004ba44
0004ba7a0004babe0004bb020004bb460004bb7c0004bbae0004bbf00004
bc8c0004bce20004bd880004be000004be860004bef60004bf580004bfde
0004c03e0004c0a80004c11c0004c18c0004c1ea0004c2900004c3280004
c3940004c4240004c4820004c4f00004c5980004c6440004c6da0004c744
0004c7c60004c82a0004c8d60004c98e0004ca3a0004cac80004cb240004
cb900004cbe60004cc680004cce60004cd6c0004cdf80004ce520004cebe
0004cf2e0004cf9e0004d00e0004d0920004d1220004d1880004d2020004
d27e0004d2f60004d39c0004d4380004d4c80004d5260004d5c40004d640
0004d6d20004d7740004d81e0004d8b60004d9120004d9680004d9d00004
da760004db1e0004dbe80004dc8e0004dcf00004dd480004dda80004de36
0004debc0004df4a0004dfaa0004e00e0004e0780004e0e00004e1480004
e1c60004e24e0004e2e20004e34e0004e3b60004e41a0004e4c20004e57c
0004e62a0004e6b80004e7160004e7820004e7f20004e8980004e9420004
ea040004eaa60004eb0a0004eb9a0004ec0c0004ec9c0004ed1a0004ed96
0004ee020004ee900004eeec0004ef4a0004efd00004f04c0004f0b40004
f1180004f16c0004f1da0004f2420004f2c00004f3360004f3b00004f430
0004f48c0004f4f20004f5560004f5f60004f6980004f74e0004f7fe0004
f85a0004f8d20004f9300004f9ba0004fa520004fae20004fb480004fba6
0004fc340004fca60004fd3a0004fdd20004fe420004feb20004ff2a0004
ff880004ffe800050062000500bc0005011c00050176000501d20005023a
000502c8000502fe00050336000503c2000503ec0005042e000504c20005
05b00005064000050676000506c600050738000507e400050876000508ce
0005092800050980000509da00050a5e00050ae400050b8800050c300005
0c6e00050cde00050d7200050e0a00050ea000050f4a00050f7c00050fcc
00051020000510660005110a000511940005121a0005127a000512be0005
130c000513ac0005143c000514dc0005158200051628000516ec0005171e
00051748000517ce0005187e000518b0000518d8000519a600051a040005
1a9e00051aec00051b5200051bfa00051c6800051cce00051d5a00051dcc
00051e4200051ef600051f5000051fc000051ffc0005204e000520d40005
2134000521d8000522b8000523e000052570000525cc0005262200052948
000529e200052a3e00052a8600052bf400052d4600052d8c00052e9a0005
2f32000530400005314a000531ec000532d40005336600053402000534f4
000535f400053670000536f60005373e0005386e000539aa00053a8e0005
3ade00053b1200053c0000053d2800053ec200053ff200054108000541cc
000542e800054356000543ea0005453c000545f20005475c0005488c0005
49be00054aea00054b9600054c5c00054d2e00054e880005500800055138
000552540005540e000555600005564c00055728000557ea000559640005
5ab400055ac400055ad400055ae400055b9c00055c5200055c8e00055cc4
00055cfc00055d3200055ec6000560da000561c4000562da000564520005
65c00005667a0005673c000568200005691a00056ab800056c0c00056dfa
00056fc00005719c000573340005741c000574f800057640000577c20005
78aa000579c400057a0600057a5000057bae00057d2c00057e9e00057f96
0005817600058336000583ba000583ea00058436000584fe000585ce0005
8762000587ea00058852000588a4000588f600058aa800058cd800058e0e
00058ff0000590cc000591e6000593920005959e000596a00005978c0005
997e00059b8600059cf200059e7600059fd60005a1440005a1d20005a262
0005a37c0005a4880005a6300005a78a0005a97a0005ab440005abd80005
ac740005ad0a0005ad920005ae780005af500005b0ea0005b27c0005b40a
0005b52e0005b53e0005b56e0005b59e0005b7180005b8ba0005b9640005
ba460005bb060005bbb00005bc4a0005bd2c0005bdea0005bec60005c090
0005c1ca0005c2560005c2860005c2b60005c2ea0005c31e0005c32e0005
c33e0005c36e0005c39e0005c3d20005c4060005c43a0005c46e0005c4a2
0005c4d60005c6500005c6600005c6900005c6c00005c6f80005c72c0005
c7600005c7940005c7c80005c7fc0005c8300005c8680005c89e0005c8ce
0005c90e0005c9460005c98e0005c9d40005ca080005ca3c0005ca760005
caae0005cb4e0005cb5e0005ccb00005ce780005d01e0005d1c80005d314
0005d42a0005d5380005d64e0005d7480005d8300005d9520005da4e0005
db260005dc160005dcd20005dd860005de4e0005decc0005df680005dfa4
0005e0080005e1100005e14e0005e1fc0005e2680005e2a40005e2e20005
e3540005e4400005e4c00005e5400005e5800005e62e0005e66e0005e6e0
0005e7780005e7b40005e82e0005e8860005e9400005e97c0005e9ba0005
eab80005eb4a0005eb8c0005ecaa0005edd40005efb60005f1780005f2ae
0005f3dc0005f4dc0005f5040005f52c0005f5620005f5940005f5c00005
f5e80005f6100005f63e0005f69c0005f70a0005f7420005f77a0005f7aa
0005f7d00005f8040005f83a0005f8600005f8860005f8b40005f8e20005
f90e0005f9840005f9ac0005fa0e0005fa340005fa5a0005fa800005faa6
0005fad60005fb060005fb360005fb700005fba00005fbd60005fc060005
fc380005fc5e0005fc840005fcb80005fcee0005fd1e0005fd4e0005fd74
0005fd9a0005fdc00005fdee0005fe220005fea80005feec0005ff260005
ff5a0005ff9e0005ffd8000600120006003800060062000600ae000600f0
00060116000601440006016a00060190000601d000060202000602320006
026200060288000602ae000602de0006030e000603340006035a00060380
000603a6000603cc000603f20006041a000604a2000604cc000605400006
0568000605de00060606000606680006069a000606cc000606fc00060734
0006076600060794000607ce000607f60006085600060898000608c80006
08f400060924000609540006097c000609a4000609cc00060a2e00060a56
00060ab400060af800060b3c00060b6c00060ba200060bc800060bf00006
0c1600060c3e00060c6400060c8c00060cb400060cde00060d0400060d2a
00060d5000060d8200060daa00060e3000060e5a00060ec400060ef40006
0f2400060f4a00060f7000060fc800060ff8000610340006105e0006108e
000610be000610f2000611260006115600061196000611d0000612180006
123e000612640006128a000612b0000612d6000613160006135600061392
000613c2000613f200061422000614520006148a000614c2000615020006
15420006157c000615b6000615f2000616300006167a000616c40006170a
0006175000061792000617d40006180400061834000618680006189c0006
18d6000619100006195c000619a800061a0000061a5800061ab000061b0e
00061b3e00061b6e00061ba400061bda00061c1000061c4c00061c800006
1cb400061d0800061d5c00061db000061e0400061e5800061eac00061f04
00061f5c00061f8a00061fb800061fea0006201c00062062000620a80006
20da0006210c0006215e000621b6000621fa0006223e00062282000622c6
0006231a0006236e0006239e000623ce000624040006243a000624780006
24be000625120006255c000625ae0006260000062660000626c0000626f0
000627220006275c00062796000627e80006283c00062886000628ce0006
29100006297a000629c800062a1400062a4600062a7800062aac00062ae0
00062b1600062b4c00062b8a00062bc000062bf200062c2e00062c840006
2cda00062d3800062d9600062dec00062e4200062e7600062ea600062eea
00062f2000062f5000062f9400062fd20006300a00063042000630780006
30b4000630e40006312000063160000631a6000631f00006323c00063288
000632de0006333400063382000633d00006341e0006346e000634ca0006
35260006357e000635d60006362a0006367e000636c0000637020006374a
00063792000637da000638280006386c000638b0000639160006397c0006
39e200063a4800063aae00063b1400063b7e00063be800063c3000063c78
00063cc000063d0800063d5400063da000063df400063e4000063e840006
3ed200063f3a00063fa20006401200064082000640ea0006415200064192
000641d00006421a000642440006428a000642c200064310000643400006
4370000643ac000643e0000644060006445a00064498000644ec000645d2
000646fa0006473c00064762000647b8000647e80006482a000648720006
48c00006490a0006495a0006498000064a6800064b4c00064c9e00064ccc
00064cfa00064d8e00064e1400064e4200064ecc00064efc00064f2c0006
4f7a00064fc8000650ac00065188000652cc000652fc0006532c000653c2
0006544a0006547a000654aa000654da0006556a0006559a000655ca0006
561c00065664000656ba00065750000657e80006585c000658ae000658d8
0006592e00065962000659ac000659e400065a3400065a7200065abe0006
5ae400065b6000065bb200065cc400065ece000660820006620400066376
00066618000668e800066aa800066bee00066e4800066f8a000671a00006
71f20006724200067298000672ee00067350000673f200067640000677e4
000679f000067b0c00067cc000067e4200067f0200067fe40006804c0006
80ae000681240006818c00068238000682a8000683380006844c00068510
0006855c000685f20006869e00068742000687ec00068836000688780006
88ee00068956000689e600068a9400068afe00068b6200068bc800068c82
00068d1800068d7600068da000068dca00068dda00068dea00068eac0006
8fb0000691ba0006931000069320000693d0000694b40006951400069524
00069580000695de000696fe000697ec000697fc0006980c0006981c0006
982c0006991200069a1200069bea00069da600069eac00069f2600069fa0
0006a0520006a0620006a1700006a1800006a1900006a2520006a3860006
a4720006a4820006a4920006a4a20006a6080006a7740006a8a00006a8b0
0006a8c00006a8d00006a8e00006a9c20006a9d20006ab340006ac3e0006
ad3c0006ae740006af460006afc40006b0420006b1620006b1de0006b22a
0006b2b60006b3ca0006b41e0006b5600006b6200006b6ec0006b7e20006
b8ec0006b99e0006bb040006bb6a0006bc2e0006be300006bfbe0006c13c
0006c26c0006c51e0006c6600006c78e0006c9060006ca7e0006cbfe0006
cd8c0006cf3e0006cfac0006d1100006d2480006d34c0006d4820006d5b4
0006d6840006d7540006d8b00006d98a0006da2a0006db2e0006dc580006
dd560006ded60006e0400006e17e0006e2f60006e4420006e5240006e58c
0006e62e0006e6ce0006e7cc0006e9340006ea6e0006ec020006ed4c0006
ee300006ee980006ef9e0006f03e0006f0fc0006f1aa0006f1ea0006f396
0006f4680006f52e0006f6560006f7f60006f9020006f95a0006faf20006
fb800006fb920006fbc20006fbf20006fc2a0006fc620006fc980006fcd4
0006fd0a0006fd460006feb40006fefe0006ff9800070030000700aa0007
012e00070194000702400007028c000703ac000704620007053800070570
000705ae000706220007071c0007083a0007093c0007097e000709fc0007
0a6a00070a7a00070a8a00070a9a00070aaa00070aba00070aca00070ada
00070aea00070afa00070b0a00070b1a00070b1a00070c9e00070cae0007
0d8800070e4e00070f840007117a0007137c00071578000717ae000719ae
00071a1a00071b2c00071cbe00071e1600071ec800071f0c00071faa0007
20da0007212a000721c0000722fc0007230c000724c2000725f600072646
0007269c000726f40007273600072776000727fc0007283c0007292e0007
29bc000729f200072a6c00072ae400072b3400072c4000072d3600072de0
00072e0a00072e3400072e5e00072e8800072ea800072ec800072ee60007
2f0400072f4e00072f9800072fd800073018000730380007305800073076
00073094000730ee000731480007316600073184000731c80007320c0007
325000073294000732e80007333c00073388000733d40007341200073456
000734a6000734f600073550000735ae000735d8000736020007369c0007
37360007377a000737be000738d4000738e40007392c00073974000739c6
00073a1800073a8200073ad600073b2200073b8000073c0a00073c6e0007
3cb200073cfc00073d6400073dae00073dee00073e3600073e7200073eae
00073eea00073f2400073f6600073fa800073fe800074028000740720007
40bc000741120007416a000741b8000742060007424800074296000742d8
0007432200074364000743a80007440400074460000744ac000744f80007
45420007458c000745ca0007460800074628000746480007466600074684
0007471e000747b80007488c0007496000074980000749a0000749c00007
49e000074b3e00074b4e00074c3800074c4800074c7e00074cb400074cee
00074d2800074d6400074da000074de600074e2c00074f92000751480007
529400075452000755c800075770000758a0000759a600075bc400075d08
00075e9e00076026000760a4000761e8000763f000076484000765180007
666c000767960007691000076a5000076bbc00076caa00076e7400077008
0007708a000771bc000772a60007740e000774f0000776a6000777980007
78fa00077a3600077b2a00077cee00077e760007801a0007817e0007831a
000784d80007865e000786fa0007886e0007896000078a4800078bc80007
8d1a00078e3a00078fd2000791a800079336000793e00007949600079648
000796ec0007977a000797c6000798120007988a00079968000799e20007
9a8400079ad800079c3c00079d6800079e7a00079f7c0007a0440007a1b8
0007a2f80007a51e0007a5c80007a6f20007a7f60007a9960007aa820007
ab7c0007ac7a0007ad600007ae7a0007b0340007b1e20007b3500007b3c8
0007b43c0007b55a0007b5de0007b6e00007b86c0007b9e40007bb1a0007
bc240007bd9a0007bf420007c1340007c3220007c4e80007c55c0007c60c
0007c6c20007c7720007c8300007c92a0007ca2e0007cb280007cc340007
ccbc0007cd4a0007cdd20007ce660007cf420007d0380007d11c0007d212
0007d2a60007d3620007d3f60007d4b40007d5a40007d6ac0007d7aa0007
d8be0007d9e00007daf40007dc340007dd6e0007de900007dfa40007e0e8
0007e23c0007e4500007e6020007e6b60007e7d20007e8a80007e9da0007
eab80007ec4c0007ed060007eda20007ee940007ef7c0007f0680007f0e6
0007f1e00007f31e0007f44a0007f47e0007f4c20007f4d20007f5720007
f6140007f70a0007f7f60007f8d00007f9a80007fb060007fc660007fd04
0007fd9a0007fdd80007fe180007fe560007fe960007fef00007ff480007
ffa200080006000800920008028e000802de0008040a0008049000080510
000805ea000806c2000807c6000809b200080aca00080b3a00080bca0008
0c8c00080d5e00080dca00080e4800080f9c00080fe2000810280008110c
00081148000811a6000811e4000812160008125a0008129c000812cc0008
13a60008146e00081552000815ce0008161c000816a60008177c000817f4
000818ae00081960000819aa00081a7e00081b3000081b8800081b980008
1ba800081bb800081bc800081d3800081d4a00081e2c00081ed200081fdc
000820e80008212c00082170000821a4000821d800082228000822780008
22ca0008231c0008236e000823c4000824d2000825fa0008277a00082918
00082ad800082bca00082cdc00082e2800082e8000082f9c000830460008
3098000831b400083326000833a800083490000835a0000836160008374a
0008385400083864000838760008388600083896000838a6000838b60008
38c6000838d6000838e6000838f600083a3800083b5600083be400083cde
00083d6c00083dc400083e7c00083fe8000840cc000841140008419e0008
420c0008430e0008435a00084422000845280008462e00084686000846f4
0008470400084804000848ea000849ce00084a5800084ad600084b380008
4c1800084c7600084ca800084d1000084dbe00084e0600084ef800084f96
0008506c000851000008528400085344000854a6000854ea000855a00008
565c00085816000859060008598400085a1800085acc00085be800085c70
00085e0000085e9000085f4400086076000860a6000860d6000861060008
61360008616a0008619c000861c2000861f2000862220008625200086286
000862b4000862e2000863100008634200086372000863a2000863d20008
6402000864320008646600086496000864c6000864f60008652a0008655a
0008658a000865ba000865e0000866100008664000086670000866a00008
66d0000866e000086710000867400008677000086796000867c6000867f6
000868260008684c0008687c000868ac0008694600086974000869a20008
69d0000869f400086a2200086a4800086a7800086a9e00086acc00086af2
00086b1800086b3e00086b6e00086b9400086bc400086c9800086cc80008
6cf800086d2c00086d5c00086d8200086db200086de200086e1200086e38
00086e6800086e8e00086eb400086eda00086f0a00086f7800086fa80008
6fd8000870080008703c0008707000087096000870c6000870f600087126
0008715a0008718a000871be000871ee0008721e0008724e0008727e0008
72c6000872f6000873260008733600087346000873840008742a0008743a
0008744a0008745a000875500008756000087570000875fe0008760e0008
761e00087694000876a4000876ee000876fe000877ae000877be000877ce
000878c6000878d60008799800087aa400087ad400087b0400087b340008
7b6200087b9200087bc200087bf200087c2400087c5800087c8c00087d56
00087d8600087e5e00087e6e00087e7e00087eb000087ec000087fa00008
805a000880ee0008811e0008814e000881ae000881be0008825800088268
000882780008832600088336000884ec00088602000886a8000886d80008
88000008888000088890000888a0000888b0000888fa0008890a0008891a
0008892a000889de00088ae600088af600088b6000088bdc00088c380008
8caa00088d3c00088dea00088e7800088f580008903c000891080008915c
0008917a00089196000891b2000891ce000891ec00089208000892260008
924200089262000892800008929e000892bc000892da0008930a0008933a
0008936a0008939a000893ce000894020008943200089462000894880008
94de000894ee0008951e0008954e0008957e000895b2000895e200089612
000896420008966800089698000896a8000896dc0008970c0008973c0008
976200089792000897c2000897f2000898260008985600089886000898b6
000898ea0008991e0008994400089974000899a4000899d400089a080008
9a3800089a6800089a8e00089abe00089ace00089afe00089b3200089b42
00089b7600089ba600089bca00089bf600089c1c00089cd200089d020008
9d3200089d6200089d9600089dc600089df600089e1c00089e4c00089e72
00089ea200089ed200089f0200089f3200089f6600089f9a00089fca0008
9ffa0008a0200008a0840008a0aa0008a0da0008a0fe0008a12a0008a150
0008a1600008a1840008a1a80008a1d40008a2460008a2760008a2a60008
a2da0008a30a0008a4a60008a4c40008a4e00008a4fc0008a51c0008a770
0008a8ae0008a9e40008abba0008acb80008adec0008ae420008aec60008
af840008b05c0008b10a0008b1980008b25e0008b2d80008b36e0008b414
0008b4d80008b59a0008b63a0008b7180008b7da0008b8420008b9a40008
b9d60008ba940008bb700008bc0e0008bcc80008bd800008bdb80008bdf0
0008be320008be740008bed40008bf460008bfb20008c01e0008c06c0008
c0ba0008c10c0008c15e0008c1ac0008c1fa0008c22a0008c25a0008c28a
0008c2ba0008c2e80008c3140008c3400008c36e0008c39a0008c3c60008
c3e40008c4020008c42e0008c45a0008c4780008c4960008c4ca0008c51a
0008c57e0008c5e20008c6100008c63e0008c66a0008c6960008c6c20008
c6f00008c71c0008c74a0008c7760008c7a20008c7e00008c81e0008c850
0008c8820008c8b40008c8e60008c9180008c94a0008c97c0008c9ae0008
c9e40008ca1a0008ca560008ca920008cac00008caee0008cb1a0008cb46
0008cd0e0008d3ce0008db6e0008ded20008e1920008e2a60008e3580008
e3a20008e46a0008e4b20008e4ca0008e6160008e62e0008e6460008e682
0008e6be0008e6fa0008e7360008e7780008e7ba0008e7fc0008e83c0008
e8680008e8940008e8b20008e8d00008e9060008e93c0008e95a0008e978
0008e9ac0008e9e00008e9fe0008ea1c0008ea2e0008ea740008eae80008
eb460008ebdc0008ebec0008ec920008ed6c0008ee640008efd40008f084
0008f30e0008f4000008f4f00008f5c40008f6be0008f7ca0008f9200008
fa160008fb080008fbf40008fce40008fdba0008fe960008fef00008ff4a
0008ffd00009005c0009010e000901a0000903100009035c000903cc0009
04de00090606000906ec000907e4000908a40009095800090a2800090b68
00090bec00090cfe00090d6400090dc800090e1c00090f88000910280009
104c000913e0000917e200091b1c00091cfe00091e6e00091e8600091e9e
00091eb600091ece00091ee600091ef800091f1000091f2200091f880009
1f9800091faa00091fc200091fd400091fec00091ffc0009201200092024
0009203c0009204e00092066000920780009208a0009209c000920ae0009
20c0000920fa0009210c0009211e0009212e000921400009227c000923b4
000923c40009254400092554000926da000926ea000927020009271a0009
27320009274a000927620009277a0009295a0009296a0009298000092b24
00092b3400092c4c00092c6400092c7c00092c9400092cac00092ccc0009
2cec00092d0c00092d2c00092d4400092d5c00092d7400092d8c00092dac
00092dcc00092dea00092e0800092e2800092e4800092e6600092e7c0009
2faa00092fba000930a4000930b4000930cc000930e4000930fc00093114
000931340009314c0009316a00093188000931a8000931c0000931de0009
31fc0009330a0009331a000933320009334a00093498000934a800093532
000936140009362600093732000938d6000938e800093910000939560009
39ea000939fc00093a0e00093a2000093a3a00093a5400093a6e00093a80
00093b7000093b8a00093ba400093bee00093c3800093c4a00093c5c0009
3c7200093c9200093caa00093cc400093e7400093fda00093fea00094002
0009401a000940320009404a0009405a00094074000940da0009417a0009
424800094310000943280009434000094358000943700009446c00094484
0009449c000945a000094608000946640009469800094704000947520009
476a0009485e000948de00094972000949ee00094a6a00094b1600094b64
00094bd800094c9600094d2800094d9c00094dac00094e3400094f060009
4f7200094ff00009510000095172000952240009529200095358000953cc
00095492000954f6000955ac0009563a0009571000095788000957ec0009
586400095874000958de000959be000959fe00095ab400095b6600095bfa
00095cce00095d1200095d5e00095d8a00095de600095e1c00095e8c0009
5ece00095f6800095fee00096092000961120009619a0009623c0009628e
00096308000963d200096460000964ce0009650a000965bc0009666a0009
66d600096740000968120009688a00096950000969ca00096a1c00096a8e
00096b2200096b8c00096c2c00096cca00096d7e00096e1600096e820009
6efa00096fa200097010000970200009705a00097102000971c000097266
0009734c000973c2000973d200097422000975f2000977cc000978840009
794a00097a3600097b0600097be600097cfc00097db600097fc200098028
0009804e0009806e0009808e000980ac000980ca00098118000981300009
8148000981600009817800098190000981a800098290000983b000098464
00098550000985fe00098684000986a4000986c400098718000987280009
8792000987fc000988b40009896400098a0a00098aae00098b1400098b78
00098cac00098d2800098dc000098e8000098f2a00098fce000991420009
92100009922800099240000992580009927000099288000992a0000992b6
000992cc00099364000993da0009944e00099492000994d4000995480009
95d00009968a00099774000998280009983a000998a6000998b800099948
0009995a0009996a0009997a00099a2000099be400099cb400099e000009
9e9a00099fcc0009a0420009a1520009a1f00009a3220009a3c40009a500
0009a5b20009a6540009a6be0009a7280009a7a40009a81e0009a8b60009
a94a0009a98c0009a9c60009aa0c0009aa480009aaf60009aba40009ac8e
0009ad6c0009ae6c0009af5a0009affa0009b0ac0009b1620009b2200009
b2f80009b3d20009b4cc0009b5820009b6b00009b79a0009b82c0009b8b2
0009b95e0009b9700009b9e20009ba4c0009bb020009bb820009bc7c0009
bd6c0009be100009bebe0009bf620009c0160009c0520009c08e0009c13c
0009c1580009c2060009c2b40009c37c0009c3980009c42a0009c4de0009
c5240009c5da0009c6660009c6de0009c78a0009c8540009c91e0009c9b6
0009ca620009cace0009cb380009cbf80009ccb80009ccca0009ccf80009
cd1a0009cdba0009ce4c0009cea40009cef80009cf780009cff80009d038
0009d1100009d1600009d1d80009d2960009d3400009d4080009d49e0009
d59a0009d67a0009d6ee0009d7760009d8560009d92c0009d9f40009dab2
0009db600009dc080009dd040009de200009deba0009df500009dff20009
e09e0009e1880009e2140009e3240009e4140009e4820009e4920009e55c
0009e60e0009e6620009e6980009e74e0009e7dc0009e8aa0009e8ba0009
e97a0009e98a0009e9ae0009ea180009eafe0009eb9a0009ebdc0009ec5e
0009ecc40009ece80009ed980009ee6c0009efc20009f0720009f12a0009
f1ee0009f1fe0009f30e0009f3a80009f3f00009f47c0009f56c0009f630
0009f7240009f7d40009f8b60009f9940009fa940009fbd80009fce20009
fdca0009fefe0009ff58000a001a000a006e000a00f2000a01a4000a0282
000a02e4000a0390000a03a0000a0412000a04a6000a0550000a05f8000a
069e000a06ae000a078a000a0828000a08e6000a0944000a0a02000a0a88
000a0b06000a0b72000a0bf4000a0c8e000a0d4a000a0de4000a0e56000a
0f10000a100e000a10ec000a1178000a1188000a125c000a12a2000a12c2
000a12e2000a1300000a131e000a133e000a135e000a137c000a139a000a
13b2000a13ca000a149a000a14aa000a14c2000a14da000a14fa000a1512
000a1530000a154e000a155e000a156e000a1584000a159a000a15aa000a
15ba000a15d2000a15ea000a15fa000a160a000a1622000a163a000a16d4
000a176c000a17e4000a1a0e000a1af6000a1bcc000a1cbe000a1cd8000a
1cf2000a1f58000a2214000a2440000a262e000a2776000a299a000a2a14
000a2a94000a2b4a000a2e2a000a305c00010000119702b5003c00ca0007
00020010004000860000051705ec000500020000003a02be000000030000
0000021a00000000000300000001000a021a0000000300000002000e0224
0000000300000003004402320000000300000004000a021a000000030000
0005001802760000000300000006000e028e00000003000000070064029c
00000003000000080030000e0000000300000009008a0300000000030000
000d0e04038a0001000000000000010d118e00010000000000010005129b
0001000000000002000712a00001000000000003002212a7000100000000
00040005129b0001000000000005000c12c90001000000000006000712d5
0001000000000007003112dc000100000000000800181195000100000000
00090045130d000100000000000d070213520003000104030002000c1a54
000300010405000200101a600003000104060002000c1a70000300010407
000200101a7c000300010408000200101a8c0003000104090000021e1a9c
0003000104090001000a021a0003000104090002000e0224000300010409
0003004402320003000104090004000a021a000300010409000500180276
0003000104090006000e028e000300010409000700621cba000300010409
00080030000e0003000104090009008a0300000300010409000d0e141d1c
00030001040a0002000c1a5400030001040b000200102b3000030001040c
0002000c1a5400030001040e0002000c2b400003000104100002000e2b4c
000300010413000200122b5a0003000104140002000c1a54000300010415
000200102b6c0003000104160002000c1a540003000104190002000e2b7c
00030001041b000200102b8a00030001041d0002000c1a5400030001041f
0002000c1a540003000104240002000e2b9a00030001042a0002000e2ba8
00030001042d0002000e2bb600030001080a0002000c1a54000300010816
0002000c1a54000300010c0a0002000c1a54000300010c0c0002000c1a54
00a90020003200300031003700200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e0020000d000d0048006500620072
006500770020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200063006f007000790072
0069006700680074002000a9002000320030003000330020002600200032
003000300037002c002000520061006c00700068002000480061006e0063
006f0063006b002000260020004a006f0068006e00200048007500640073
006f006e002e002000540068006900730020006c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c00200048006500620072006500770020006900730020
006f00700065006e00200073006f007500720063006500200073006f0066
0074007700610072006500200075006e0064006500720020007400680065
0020004d004900540020004c006900630065006e00730065003b00200073
0065006500200065006d0062006500640064006500640020006c00690063
0065006e007300650020006400650073006300720069007000740069006f
006e00200066006f0072002000640065007400610069006c0073002e0041
007200690061006c0052006500670075006c00610072004d006f006e006f
0074007900700065003a0041007200690061006c00200052006500670075
006c0061007200200028004d006900630072006f0073006f006600740029
00560065007200730069006f006e00200037002e00300030004100720069
0061006c004d00540041007200690061006c002000200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e004d006f006e006f00740079
0070006500200054007900700065002000440072006100770069006e0067
0020004f006600660069006300650020002d00200052006f00620069006e
0020004e006900630068006f006c00610073002c00200050006100740072
00690063006900610020005300610075006e006400650072007300200031
003900380032004d006900630072006f0073006f00660074002000730075
00700070006c00690065006400200066006f006e0074002e00200059006f
00750020006d006100790020007500730065002000740068006900730020
0066006f006e007400200074006f0020006300720065006100740065002c
00200064006900730070006c00610079002c00200061006e006400200070
00720069006e007400200063006f006e00740065006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
006800650020006c006900630065006e007300650020007400650072006d
00730020006f00720020007400650072006d00730020006f006600200075
00730065002c0020006f006600200074006800650020004d006900630072
006f0073006f00660074002000700072006f0064007500630074002c0020
0073006500720076006900630065002c0020006f007200200063006f006e
00740065006e007400200069006e00200077006800690063006800200074
00680069007300200066006f006e0074002000770061007300200069006e
0063006c0075006400650064002e00200059006f00750020006d00610079
0020006f006e006c0079002000280069002900200065006d006200650064
0020007400680069007300200066006f006e007400200069006e00200063
006f006e00740065006e00740020006100730020007000650072006d0069
0074007400650064002000620079002000740068006500200065006d0062
0065006400640069006e0067002000720065007300740072006900630074
0069006f006e007300200069006e0063006c007500640065006400200069
006e0020007400680069007300200066006f006e0074003b00200061006e
006400200028006900690029002000740065006d0070006f007200610072
0069006c007900200064006f0077006e006c006f00610064002000740068
0069007300200066006f006e007400200074006f00200061002000700072
0069006e0074006500720020006f00720020006f00740068006500720020
006f00750074007000750074002000640065007600690063006500200074
006f002000680065006c00700020007000720069006e007400200063006f
006e00740065006e0074002e00200041006e00790020006f007400680065
00720020007500730065002000690073002000700072006f006800690062
0069007400650064002e000d000d00540068006500200066006f006c006c
006f00770069006e00670020006c006900630065006e00730065002c0020
006200610073006500640020006f006e00200074006800650020004d0049
00540020006c006900630065006e00730065002000280068007400740070
003a002f002f0065006e002e00770069006b006900700065006400690061
002e006f00720067002f00770069006b0069002f004d00490054005f004c
006900630065006e007300650029002c0020006100700070006c00690065
007300200074006f00200074006800650020004f00700065006e00540079
007000650020004c00610079006f007500740020006c006f006700690063
00200066006f00720020004200690062006c006900630061006c00200048
006500620072006500770020201c004c00610079006f007500740020004c
006f006700690063201d0020006100730020006a006f0069006e0074006c
007900200064006500760065006c006f0070006500640020006200790020
00520061006c00700068002000480061006e0063006f0063006b00200061
006e00640020004a006f0068006e00200048007500640073006f006e002e
0020000d000d005000650072006d0069007300730069006f006e00200069
007300200068006500720065006200790020006700720061006e00740065
0064002c002000660072006500650020006f006600200063006800610072
00670065002c00200074006f00200061006e007900200070006500720073
006f006e0020006f0062007400610069006e0069006e0067002000610020
0063006f007000790020006f006600200074006800650020004f00700065
006e00540079007000650020004c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c002000480065006200720065007700200061006e0064002000610073
0073006f00630069006100740065006400200064006f00630075006d0065
006e0074006100740069006f006e002000660069006c0065007300200028
0074006800650020201c004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065201d0029002c0020
0074006f0020006400650061006c00200069006e00200074006800650020
004c00610079006f007500740020004c006f00670069006300200053006f
00660074007700610072006500200077006900740068006f007500740020
007200650073007400720069006300740069006f006e002c00200069006e
0063006c007500640069006e006700200077006900740068006f00750074
0020006c0069006d00690074006100740069006f006e0020007400680065
002000720069006700680074007300200074006f0020007500730065002c
00200063006f00700079002c0020006d006f0064006900660079002c0020
006d0065007200670065002c0020007000750062006c006900730068002c
00200064006900730074007200690062007500740065002c002000730075
0062006c006900630065006e00730065002c00200061006e0064002f006f
0072002000730065006c006c00200063006f00700069006500730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002c00200061
006e006400200074006f0020007000650072006d00690074002000700065
00720073006f006e007300200074006f002000770068006f006d00200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065002000690073002000660075
0072006e0069007300680065006400200074006f00200064006f00200073
006f002c0020007300750062006a00650063007400200074006f00200074
0068006500200066006f006c006c006f00770069006e006700200063006f
006e0064006900740069006f006e0073003a000d000d0054006800650020
00610062006f0076006500200063006f0070007900720069006700680074
0020006e006f007400690063006500200061006e00640020007400680069
00730020007000650072006d0069007300730069006f006e0020006e006f
00740069006300650020007300680061006c006c00200062006500200069
006e0063006c007500640065006400200069006e00200061006c006c0020
0063006f00700069006500730020006f0072002000730075006200730074
0061006e007400690061006c00200070006f007200740069006f006e0073
0020006f006600200074006800650020004c00610079006f007500740020
004c006f00670069006300200053006f006600740077006100720065002e
000d000d00540048004500200053004f0046005400570041005200450020
00490053002000500052004f005600490044004500440020002700410053
0020004900530027002c00200057004900540048004f0055005400200057
0041005200520041004e005400590020004f004600200041004e00590020
004b0049004e0044002c002000450058005000520045005300530020004f
005200200049004d0050004c004900450044002c00200049004e0043004c
005500440049004e004700200042005500540020004e004f00540020004c
0049004d004900540045004400200054004f002000540048004500200057
0041005200520041004e00540049004500530020004f00460020004d0045
0052004300480041004e0054004100420049004c004900540059002c0020
004600490054004e00450053005300200046004f00520020004100200050
004100520054004900430055004c0041005200200050005500520050004f
0053004500200041004e00440020004e004f004e0049004e004600520049
004e00470045004d0045004e0054002e00200049004e0020004e004f0020
004500560045004e00540020005300480041004c004c0020005400480045
00200041005500540048004f005200530020004f005200200043004f0050
00590052004900470048005400200048004f004c00440045005200530020
004200450020004c004900410042004c004500200046004f005200200041
004e005900200043004c00410049004d002c002000440041004d00410047
004500530020004f00520020004f00540048004500520020004c00490041
00420049004c004900540059002c00200057004800450054004800450052
00200049004e00200041004e00200041004300540049004f004e0020004f
004600200043004f004e00540052004100430054002c00200054004f0052
00540020004f00520020004f00540048004500520057004900530045002c
002000410052004900530049004e0047002000460052004f004d002c0020
004f005500540020004f00460020004f005200200049004e00200043004f
004e004e0045004300540049004f004e0020005700490054004800200054
0048004500200053004f0046005400570041005200450020004f00520020
00540048004500200055005300450020004f00520020004f005400480045
00520020004400450041004c0049004e0047005300200049004e00200054
0048004500200053004f004600540057004100520045002ea92032303137
20546865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c
205269676874732052657365727665642e200d0d486562726577204f7065
6e54797065204c61796f7574206c6f67696320636f7079726967687420a9
2032303033202620323030372c2052616c70682048616e636f636b202620
4a6f686e20487564736f6e2e2054686973206c61796f7574206c6f676963
20666f72204269626c6963616c20486562726577206973206f70656e2073
6f7572636520736f66747761726520756e64657220746865204d4954204c
6963656e73653b2073656520656d626564646564206c6963656e73652064
65736372697074696f6e20666f722064657461696c732e417269616c5265
67756c61724d6f6e6f747970653a417269616c20526567756c617220284d
6963726f736f66742956657273696f6e20372e3030417269616c4d544172
69616c20697320612074726164656d61726b206f6620546865204d6f6e6f
7479706520436f72706f726174696f6e2e4d6f6e6f747970652054797065
2044726177696e67204f6666696365202d20526f62696e204e6963686f6c
61732c205061747269636961205361756e6465727320313938324d696372
6f736f667420737570706c69656420666f6e742e20596f75206d61792075
7365207468697320666f6e7420746f206372656174652c20646973706c61
792c20616e64207072696e7420636f6e74656e74206173207065726d6974
74656420627920746865206c6963656e7365207465726d73206f72207465
726d73206f66207573652c206f6620746865204d6963726f736f66742070
726f647563742c20736572766963652c206f7220636f6e74656e7420696e
207768696368207468697320666f6e742077617320696e636c756465642e
20596f75206d6179206f6e6c792028692920656d62656420746869732066
6f6e7420696e20636f6e74656e74206173207065726d6974746564206279
2074686520656d62656464696e67207265737472696374696f6e7320696e
636c7564656420696e207468697320666f6e743b20616e64202869692920
74656d706f726172696c7920646f776e6c6f6164207468697320666f6e74
20746f2061207072696e746572206f72206f74686572206f757470757420
64657669636520746f2068656c70207072696e7420636f6e74656e742e20
416e79206f74686572207573652069732070726f686962697465642e0d0d
54686520666f6c6c6f77696e67206c6963656e73652c206261736564206f
6e20746865204d4954206c6963656e73652028687474703a2f2f656e2e77
696b6970656469612e6f72672f77696b692f4d49545f4c6963656e736529
2c206170706c69657320746f20746865204f70656e54797065204c61796f
7574206c6f67696320666f72204269626c6963616c2048656272657720d2
4c61796f7574204c6f676963d3206173206a6f696e746c7920646576656c
6f7065642062792052616c70682048616e636f636b20616e64204a6f686e
20487564736f6e2e200d0d5065726d697373696f6e206973206865726562
79206772616e7465642c2066726565206f66206368617267652c20746f20
616e7920706572736f6e206f627461696e696e67206120636f7079206f66
20746865204f70656e54797065204c61796f7574206c6f67696320666f72
204269626c6963616c2048656272657720616e64206173736f6369617465
6420646f63756d656e746174696f6e2066696c6573202874686520d24c61
796f7574204c6f67696320536f667477617265d3292c20746f206465616c
20696e20746865204c61796f7574204c6f67696320536f66747761726520
776974686f7574207265737472696374696f6e2c20696e636c7564696e67
20776974686f7574206c696d69746174696f6e2074686520726967687473
20746f207573652c20636f70792c206d6f646966792c206d657267652c20
7075626c6973682c20646973747269627574652c207375626c6963656e73
652c20616e642f6f722073656c6c20636f70696573206f6620746865204c
61796f7574204c6f67696320536f6674776172652c20616e6420746f2070
65726d697420706572736f6e7320746f2077686f6d20746865204c61796f
7574204c6f67696320536f667477617265206973206675726e6973686564
20746f20646f20736f2c207375626a65637420746f2074686520666f6c6c
6f77696e6720636f6e646974696f6e733a0d0d5468652061626f76652063
6f70797269676874206e6f7469636520616e642074686973207065726d69
7373696f6e206e6f74696365207368616c6c20626520696e636c75646564
20696e20616c6c20636f70696573206f72207375627374616e7469616c20
706f7274696f6e73206f6620746865204c61796f7574204c6f6769632053
6f6674776172652e0d0d54484520534f4654574152452049532050524f56
4944454420274153204953272c20574954484f55542057415252414e5459
204f4620414e59204b494e442c2045585052455353204f5220494d504c49
45442c20494e434c5544494e4720425554204e4f54204c494d4954454420
544f205448452057415252414e54494553204f46204d45524348414e5441
42494c4954592c204649544e45535320464f52204120504152544943554c
415220505552504f534520414e44204e4f4e494e4652494e47454d454e54
2e20494e204e4f204556454e54205348414c4c2054484520415554484f52
53204f5220434f5059524947485420484f4c44455253204245204c494142
4c4520464f5220414e5920434c41494d2c2044414d41474553204f52204f
54484552204c494142494c4954592c205748455448455220494e20414e20
414354494f4e204f4620434f4e54524143542c20544f5254204f52204f54
484552574953452c2041524953494e472046524f4d2c204f5554204f4620
4f5220494e20434f4e4e454354494f4e20574954482054484520534f4654
57415245204f522054484520555345204f52204f54484552204445414c49
4e475320494e2054484520534f4654574152452e004e006f0072006d0061
006c006f00620079010d0065006a006e00e9006e006f0072006d0061006c
005300740061006e0064006100720064039a03b103bd03bf03bd03b903ba
03ac00a90020003200300031003700200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064002e0020000d000a000d000a0048
006500620072006500770020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200063006f
0070007900720069006700680074002000a9002000320030003000330020
002600200032003000300037002c002000520061006c0070006800200048
0061006e0063006f0063006b002000260020004a006f0068006e00200048
007500640073006f006e002e002000540068006900730020006c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
006900730020006f00700065006e00200073006f00750072006300650020
0073006f00660074007700610072006500200075006e0064006500720020
0074006800650020004d004900540020004c006900630065006e00730065
003b002000730065006500200065006d0062006500640064006500640020
006c006900630065006e0073006500200064006500730063007200690070
00740069006f006e00200066006f0072002000640065007400610069006c
0073002e0041007200690061006c00200069007300200061002000740072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e004d006900630072006f0073006f00660074
00200073007500700070006c00690065006400200066006f006e0074002e
00200059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e007400200074006f00200063007200650061
00740065002c00200064006900730070006c00610079002c00200061006e
00640020007000720069006e007400200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
007900200074006800650020006c006900630065006e0073006500200074
00650072006d00730020006f00720020007400650072006d00730020006f
00660020007500730065002c0020006f006600200074006800650020004d
006900630072006f0073006f00660074002000700072006f006400750063
0074002c00200073006500720076006900630065002c0020006f00720020
0063006f006e00740065006e007400200069006e00200077006800690063
00680020007400680069007300200066006f006e00740020007700610073
00200069006e0063006c0075006400650064002e00200059006f00750020
006d006100790020006f006e006c0079002000280069002900200065006d
0062006500640020007400680069007300200066006f006e007400200069
006e00200063006f006e00740065006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
0065006d00620065006400640069006e0067002000720065007300740072
0069006300740069006f006e007300200069006e0063006c007500640065
006400200069006e0020007400680069007300200066006f006e0074003b
00200061006e006400200028006900690029002000740065006d0070006f
0072006100720069006c007900200064006f0077006e006c006f00610064
0020007400680069007300200066006f006e007400200074006f00200061
0020007000720069006e0074006500720020006f00720020006f00740068
006500720020006f00750074007000750074002000640065007600690063
006500200074006f002000680065006c00700020007000720069006e0074
00200063006f006e00740065006e0074002e00200041006e00790020006f
00740068006500720020007500730065002000690073002000700072006f
0068006900620069007400650064002e000d000a000d000a005400680065
00200066006f006c006c006f00770069006e00670020006c006900630065
006e00730065002c0020006200610073006500640020006f006e00200074
006800650020004d004900540020006c006900630065006e007300650020
00280068007400740070003a002f002f0065006e002e00770069006b0069
00700065006400690061002e006f00720067002f00770069006b0069002f
004d00490054005f004c006900630065006e007300650029002c00200061
00700070006c00690065007300200074006f00200074006800650020004f
00700065006e00540079007000650020004c00610079006f007500740020
006c006f00670069006300200066006f00720020004200690062006c0069
00630061006c00200048006500620072006500770020201c004c00610079
006f007500740020004c006f006700690063201d0020006100730020006a
006f0069006e0074006c007900200064006500760065006c006f00700065
0064002000620079002000520061006c00700068002000480061006e0063
006f0063006b00200061006e00640020004a006f0068006e002000480075
00640073006f006e002e0020000d000a000d000a005000650072006d0069
007300730069006f006e0020006900730020006800650072006500620079
0020006700720061006e007400650064002c002000660072006500650020
006f00660020006300680061007200670065002c00200074006f00200061
006e007900200070006500720073006f006e0020006f0062007400610069
006e0069006e00670020006100200063006f007000790020006f00660020
0074006800650020004f00700065006e00540079007000650020004c0061
0079006f007500740020006c006f00670069006300200066006f00720020
004200690062006c006900630061006c0020004800650062007200650077
00200061006e00640020006100730073006f006300690061007400650064
00200064006f00630075006d0065006e0074006100740069006f006e0020
00660069006c00650073002000280074006800650020201c004c00610079
006f007500740020004c006f00670069006300200053006f006600740077
006100720065201d0029002c00200074006f0020006400650061006c0020
0069006e00200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f00660074007700610072006500200077
006900740068006f00750074002000720065007300740072006900630074
0069006f006e002c00200069006e0063006c007500640069006e00670020
0077006900740068006f007500740020006c0069006d0069007400610074
0069006f006e002000740068006500200072006900670068007400730020
0074006f0020007500730065002c00200063006f00700079002c0020006d
006f0064006900660079002c0020006d0065007200670065002c00200070
00750062006c006900730068002c00200064006900730074007200690062
007500740065002c0020007300750062006c006900630065006e00730065
002c00200061006e0064002f006f0072002000730065006c006c00200063
006f00700069006500730020006f006600200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
0077006100720065002c00200061006e006400200074006f002000700065
0072006d0069007400200070006500720073006f006e007300200074006f
002000770068006f006d00200074006800650020004c00610079006f0075
00740020004c006f00670069006300200053006f00660074007700610072
00650020006900730020006600750072006e006900730068006500640020
0074006f00200064006f00200073006f002c0020007300750062006a0065
0063007400200074006f002000740068006500200066006f006c006c006f
00770069006e006700200063006f006e0064006900740069006f006e0073
003a000d000a000d000a005400680065002000610062006f007600650020
0063006f00700079007200690067006800740020006e006f007400690063
006500200061006e0064002000740068006900730020007000650072006d
0069007300730069006f006e0020006e006f007400690063006500200073
00680061006c006c00200062006500200069006e0063006c007500640065
006400200069006e00200061006c006c00200063006f0070006900650073
0020006f00720020007300750062007300740061006e007400690061006c
00200070006f007200740069006f006e00730020006f0066002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f006600740077006100720065002e000d000a000d000a00540048
004500200053004f00460054005700410052004500200049005300200050
0052004f0056004900440045004400200027004100530020004900530027
002c00200057004900540048004f00550054002000570041005200520041
004e005400590020004f004600200041004e00590020004b0049004e0044
002c002000450058005000520045005300530020004f005200200049004d
0050004c004900450044002c00200049004e0043004c005500440049004e
004700200042005500540020004e004f00540020004c0049004d00490054
0045004400200054004f0020005400480045002000570041005200520041
004e00540049004500530020004f00460020004d00450052004300480041
004e0054004100420049004c004900540059002c0020004600490054004e
00450053005300200046004f005200200041002000500041005200540049
00430055004c0041005200200050005500520050004f0053004500200041
004e00440020004e004f004e0049004e004600520049004e00470045004d
0045004e0054002e00200049004e0020004e004f0020004500560045004e
00540020005300480041004c004c00200054004800450020004100550054
0048004f005200530020004f005200200043004f00500059005200490047
0048005400200048004f004c00440045005200530020004200450020004c
004900410042004c004500200046004f005200200041004e005900200043
004c00410049004d002c002000440041004d00410047004500530020004f
00520020004f00540048004500520020004c0049004100420049004c0049
00540059002c0020005700480045005400480045005200200049004e0020
0041004e00200041004300540049004f004e0020004f004600200043004f
004e00540052004100430054002c00200054004f005200540020004f0052
0020004f00540048004500520057004900530045002c0020004100520049
00530049004e0047002000460052004f004d002c0020004f005500540020
004f00460020004f005200200049004e00200043004f004e004e00450043
00540049004f004e00200057004900540048002000540048004500200053
004f0046005400570041005200450020004f005200200054004800450020
0055005300450020004f00520020004f0054004800450052002000440045
0041004c0049004e0047005300200049004e002000540048004500200053
004f004600540057004100520045002e004e006f0072006d00610061006c
0069004e006f0072006d00e1006c004e006f0072006d0061006c00650053
00740061006e00640061006100720064004e006f0072006d0061006c006e
0079041e0431044b0447043d044b0439004e006f0072006d00e1006c006e
0065004e0061007600610064006e006f0074006801b001a10300006e0067
0041007200720075006e00740061000000>
<b15485410b032c032c032c0222001d001f032b032a003c001f032ab2061d
1fb80328b326181fd0bc032900e0032900020329b22b1d1fb90327031db2
3b1f40b80323b31215320f412d03200001002f0320000100200320006f03
2000af032000bf03200004005f031e00010010031e007f031e0080031e00
af031e00bf031e00d0031e00060000031e0010031e0020031e006f031e00
9f031e00e0031e0006031d031cb2201f1041270319007f03190002000f03
1700ef031700ff03170003001f0317002f0317004f0317005f0317008f03
17009f03170006000f0317005f0317006f0317007f031700bf031700f003
17000600400317b2923340b80317b28b3340b80317b36a6c3240b80317b2
613340b80317b35c5d3240b80317b357593240b80317b34d513240b80317
b344493240b80317b23a3340b80317b331343240b80317b32e423240b803
17b3272c3240b80317b312253280b80317b30a0d32c04116031600d00316
000200700316000102c4000f0101001f00a0031500b0031500020306000f
0101001f00400312b32426329fbf03040001030203010064001fffc00301
b20d1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e1132
9f414a02e200af02e200bf02e2000302e202e202e102e1007f02e0000100
1002e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e002
df02df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf02
dd00ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f02
dc000202dc02dc001002db000102db02db000f02da000102da02daffc002
d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b217
1b32b9ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb0322
003e00330322b225311fb80318b23c691fb802e3b3202b1fa0413002d400
b002d40002000002d4001002d4002002d4005002d4006002d4007002d400
06006002d6007002d6008002d6009002d600a002d600b002d60006000002
d6001002d6002002ca002002cc002002d6003002d6004002d6005002d600
0802d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c80017
001f02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02c6
b21e1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b324
121fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf00
8f02bf000602bf0222b2641f12410b02bb00ca0800001f02b200e9080000
1f02a600a20800406a1f4026434932402043493240263a3d3240203a3d32
9f209f26024026969932402096993240268e923240208e92324026848c32
4020848c3240267a813240207a813240266c763240206c76324026646a32
4020646a3240265a5f3240205a5f3240264f543240204f5432b8029eb724
271f374f6b0120410f027700300277004002770050027700040277027702
7700f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc01805201
80a201806501807e01808101803c01805e01802b01801c01801e01804001
80bb0138000100800140b40180400180bb013800010080013940180180ca
0180ad018073018026018025018024018020013740b80221b2493340b802
21b2453340b80221b341423240b80221b33d3e320f410f0221003f022100
7f0221000300bf022100cf022100ff0221000300400221b320223240b802
21b3191e3240b80222b32a3f3240b80221b32e3a326f414a02c3007f02c3
008f02c300df02c30004002f02c3006002c300cf02c30003000f02c3003f
02c3005f02c300c002c300ef02c300ff02c3000600df02220001008f0222
0001000f0222002f0222003f0222005f0222007f022200ef0222000600bf
022100ef02210002006f0221007f022100af02210003000f0221002f0221
003f0221004f0221000402c302c30222022202210221401d101c102b1048
038f1c010f1e014f1eff1e023700161600000012110811b8010db6f70df8
f70d00094109028e028f001d001f0290028f001d001f028fb2f91d1fb801
98b226bb1f41150197001e0401001f013900260125001f01380073040100
1f0135001c0801001f0134001c02ab001f0132b21c561fb8010fb2262c1f
ba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b2
1fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b802
01b61fb91c381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c
471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c
891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b6
1f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b41f
35555537b80168402c07960758074f07360732072c0721071f071d071b07
1408120810080e080c080a080808060804080208000814b8ffe0402b0000
010014061000000100060400000100041000000100100200000100020000
0001000002010802004a00b013034b024b5342014bb0c063004b6220b0f6
5323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52b0372b
4bb007505b58b101018e59b0382bb00288b801005458b801ffb101018e85
1bb0124358b900010111858d1bb900010128858d5959001816763f183f12
3e113946443e113946443e113946443e113946443e11394660443e113946
60442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1d42b0
964b5358b235aaaa1d4259b0324b5358b235ffff1d42594bb09353205c58
b901f201f04544b901f101f045445958b9033e01f2455258b901f2033e44
59594bb8015653205c58b9002001f14544b9002601f145445958b9081e00
20455258b90020081e4459594bb8019a53205c58b9002501f24544b90024
01f245445958b909090025455258b9002509094459594bb8040153205c58
b173244544b1242445445958b917200073455258b9007317204459594bb8
040153205c58b1ca254544b1252545445958b9168000ca455258b900ca16
804459594bb03e53205c58b11c1c4544b11e1c45445958b9011a001c4552
58b9001c011a4459594bb05653205c58b11c1c4544b12f1c45445958b901
89001c455258b9001c01894459594bb8030153205c58b11c1c4544b11c1c
45445958b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b65422b2b01b33b59635c456523456023456560234560b08b766818b080
622020b163594565234520b003266062636820b003266165b059236544b0
63234420b13b5c4565234520b003266062636820b003266165b05c236544
b03b2344b1005c455458b15c406544b23b403b4523614459b34750343745
6523456023456560234560b089766818b080622020b134504565234520b0
03266062636820b003266165b050236544b034234420b147374565234520
b003266062636820b003266165b037236544b0472344b10037455458b137
406544b24740474523614459004b5342014b5058b108004259435c58b108
004259b3020b0a124358601b2159421610703eb0124358b93b21187e1bba
040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba040004
00000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b
2b59b0102342b0112342002b747573750018456944456944456944737373
7374757374752b2b2b2b74752b2b2b2b2b73737373737373737373737373
7373737373737373737373732b2b2b45b0406144737400004bb02a534bb0
3f515a58b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ff
c0604459004bb02e534bb03a515a58b1030345b040604459004bb02e534b
b03c515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b0
1e4b5402b0124b545ab012435c5a58ba009f02220001007359002b747301
2b01732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b2b004569
447345694473456944737475456944734569444569444569447374456944
456944732b2b2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b
2b737475732b7374757374752b2b2b742b002b2b2b00184569442b5c5841
0e0336032f0041001f0330032f002d001f032d032f0032001f0332032f40
12261f0302371f0908371f0b0a441f0706441f2b2b2b2b2b2b2b2b592b00
00>
[13305 15385 16365 15945 16077 15977 16357 15881 16157 16373 16341 16217 14641
16233 16381 16273 15189 15921 16205 16097 16341 16353 16249 16025 15737 16089
15913 16381 16345 16041 15773 16225 14825 15613 15765 16181 15889 16353 15297
16297 16297 14473 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 12288 37 <00030096000004e905ba0011001d002a01deb0852b58b90004fff440290b
0b065504044623562366237309840906691a75057009730b8305830b0627
16090318272a1e161d094110ffe8000c000c014000560009ffe8000b000b
014000560009ffe8000d000d0140401856090913121e2a2a2929001c1d1e
0201021f1e1e110008184110fffe000c000c014000560018fff2000b000b
014000560018fff6000c000d0140400a561826060c1010025506b8ffe640
250f0f025506120d0d025506060c0c025506080b0b0655060c0c0c065506
140d0d06550654254110fffe000c000c014000560025fff2000b000b0140
00560025fff6000c000d014040105625260c1c101002550c0a0d0d02550c
b8fff4400c0b0b06550c1a2c1d1e020c0cb80140b4561e0e0b0bb80140b4
561e0a0c0db80140400e561e200120000100201010025500b8fff6b40f0f
025500b8fff6b40d0d025500b8fffab40c0c025500b8fffab40c0c065500
b8fff0400a0d0d0655005d2b3b5c182b10f62b2b2b2b2b2b5d3cfd2b2b2b
3c4e10f62b2b2b4ded2b2b2bf42b2b2b2b2b2b2bed2b2b2b003f3cfd3c3f
3cfd3c12392f3c10fd3c392f2b2b2b1139111239011217393130015d005d
2b1bb209122ab80333b56c121201001eb80333b46c0008011db80333b26c
010200183f2b3f2b11392f2b393031593311213216161514060716161514
0e0223012132373636353426262321112132373e02353426262321960226
a8cb736667858f5780c18cfe93013d81384a4b46829efedb016d5e26435a
3a54958cfead05ba59b9655ea63327bc8067b1603103521116664d496f29
fba0070c386b46527931>ArialMT AddT42Char 
3 12898 38 <00010066ffe7057605d3001d012fb0852b58b563026a1d0201b8ffe8b40b
0b065500b8ffe8405f0b0b06552000320d63007000741d8000841d90009a
05ab03a50db903b40dc70dd000e41df31d110e121d111d1d032a0628112a
1c201f470d56145715561968056b1d7b128b129a03990e9a1ca801a402a8
11d50e130014001a1014101a0402b8ffdeb2283901b8ffc040202839100f
0001041b131e0c031b1e040910260f4a0026200101011a1f17020c0cb801
40b456170e0b0bb80140b456170a0c0db80140400a561726200801080c0c
0db80140400d56080c0b0b065508191e635c182b4e10f42b2b5d4ded2b2b
2b4e10f65d4dedf4ed003fed3fed1117393130012b2b5d5d71005d2b2b01
721b400a010000040f10100c041bb80332b46c04090c13b80332b26c0c03
00183f2b3f2b12392f3311392f3330315901170604232224023534122433
320417072626232206021514121633323604b4c23dfec3e5edfed79baf01
43c2dc012c3bbf33c293a9e35c6de686a3e2020231effbc1016ed2e50155
b1e0cb2da092a2feef91bbfee98abc00>ArialMT AddT42Char 
4 0 39 <0002009e0000055a05ba000f001d014eb0852b584012201f0143081c1d1e
02010211101e0f0008174110fffe000c000c014000560017fff2000b000b
014000560017fff6000c000d0140401f5617262009011f400d0d02550920
10100255090a0f0f025509180d0d025509b8fff4400c0c0c0655091a1f1d
100e0b0bb80140b456100a0d0db80140b456100c0c0cb80140400e561020
0120000100201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8
fffab40c0c025500b8fff7b40c0c065500b8fff8400a0d0d0655005d1e3b
5c182b10f62b2b2b2b2b2b5d3cfd2b2b2b3c10f62b2b2b2b2b5ded2b2b2b
003f3cfd3c3f3cfd3c313043794036031b0708060805080408040619181a
1802060b0a0c0a0d0a030615161416131603061b03172101120e17210118
081c2101160a1121002b2b012b2b2a2a2a2a81015d1bb10010b80333b46c
0008011db80333b26c010200183f2b3f2b30315933112132171617161215
14020e022325213236373636353426272623219e01f9ab5a7e5974734e7a
91cd85feb1013991a531454d976c4eadfecc05ba151d4c62fecfc4a7fefe
a96132ad363145e9a6e6f72a1e00>ArialMT AddT42Char 
4 13094 68 <0002004affe8041c043e002800370322b0852b58402c090d092a190d1a2a
290d2a2a390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a16
9b1aa90d1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619
bb28c419cf28d215dd28084416011eb8fff440110c0c065512120c0c0655
050c0c0c065535b8ffe0404f0c0c06551f171f182b2c2a343904392c4904
482c5608592b6608692b760c870cc90cf90df92b1137340e0104102f2434
17322114185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e03
0ebbfffa000b000b0140b7560e0c0f0f02550eb8ffeab4101002550eb8ff
f44014101006550e0c0d0d06550e060f0f06550e260d0db80140b4560e18
0c0cb80140b5560e0e1c0317b802aab3182c0b0bb80140400e56182c0a0a
42551895141c1c0700b8fff440110c0c06550045270a321c030b29611061
004110fff6000b000b014000560000fff8000c000c014000560000fffc00
0d000d0140400b5600060d0d025500252124b8ffecb41010025524b8ffec
400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b0655
24b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b8025b40
0e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b40e0e
025526bbfff4000d000d0140b356263139b8ffc0400d1e23343039c03902
a039013917b8fff4b71010065517080c0cb80140400956172518222f080d
0db80140b4562f0c0c0cb80140b4562f0e0b0bb801404011562f24bf06cf
06021f063f060206140b0bb80140b45606140d0db80140b45606080c0cb8
0140402e56060e0f0f0255060c0d0d025506180c0c0255060c0b0b025506
0c0b0b0655060e0d0d065506100c0c065506313810f62b2b2b2b2b2b2b2b
2b2b5d71ed2b2b2bf4ed2b2b105d712bf62b2b2b5dedf42b2b2b2b2b2b2b
2b3cfd2b2b2b2be5e5003fed3fe42b3fedfd2b2be41112392f2b2b2b2b2b
2b2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d
2b2b00711bb700032b2b0c0c0e29b8032db76c0e0e1c270a0332b8032db7
6c030b1817171c14b8032fb26c1c0700183f2b322f333f2b3f11392f2b39
113311123930315925060623222635343636373637363736353427262322
0607273e02333216161716151514161723260306070e0215141633323637
3635033c64b96aafbc477348356bda67013345887f791db0186ed08988aa
5010091722bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d
1a24250a6e2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d
2f48605b4f3d7700>ArialMT AddT42Char 
4 14686 70 <00010050ffe803ed043e001a0261b0852b58bc0017fff0000c000c0140b4
560a080c0cb80140b45609080c0cb80140b4560f080c0cb80140b4561008
0c0cb80140b45611080c0cb901400056b1020243545840340e7f0f010f0b
01400050007000030004121c0b07181c040b010e1507080e0e0255070c0d
0d0255070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10
c45d3210c45d3231301b4047090c011f1c4313431753135317601360179b
029b039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509
b60ab50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa40263000
40005000600070009000a000e000f00009000f0f0b000004121c0b07181c
040b1c0f010f410afff4000c000c01400056000ffff2000b000b0140400f
560f240e080d0d06550e221b000100410afff4000c000c014000560000ff
ee000b000b0140400f5600240b2b1f010100010101400e2bb80140b45601
400d0db80140b45601400c0cb80140b45601360b0bb8014040205601400b
0b065501401010065501480c0c0655011a0d0d065501491c15080d0db801
40b456150c0c0cb80140b456150e0b0bb801404021561524cf07011f073f
0702070e0b0b0655070a1010065507120c0c0655070c0d0db80140b45607
0c0c0cb80140b65607311b34c4182b10f62b2b2b2b2b5d71ed2b2b2b10f6
2b2b2b2b2b2b2b2b5d724b53234b515a58b90001ffc03859ed2b2b72f42b
ed2b2b72003fed3fed12392f11392f105de4105de43130005d71015d7159
012b2b2b2b2b2b1b400a010000120e0f0f120418b8032fb46c040b0b12b8
032fb26c0b0700183f2b3f2b11392f3311392f3330315901170606232200
1134123633321617072626232206151416333236033cb11defaedafef772
e989addc1faf197f5a88aaa4846a8e018517b7cf011d010aac010281afa1
1b6b6cc3d3d6c282>ArialMT AddT42Char 
5 0 71 <00020046ffe803df05ba0011001d0213b0852b58407c0a02040d250d340d
440d053514351c5702540a5214531c6702640565096314601cc01fd405d5
13dd19e513e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f
901f072e02240d2e163a02350d4b02450d4614491c570a560d670de506e7
16fa01f40e100115030e0b100f001b1c0b0711000a151c030b18410afff8
000d000d014000560018fff8000c000c0140b45618330100bbfff2000b00
0b0140b4560025110f4110fff8000d000d01400056000ffff4000c000c01
400056000ffff2000b000b01404024560f251010d0110110114011601180
11041f400b0b02551f400d0d025511121010025511b8fff440110f0f0255
11060e0e025511180d0d025511b8fff2400b0b0b0655110e1010065511b8
ffeeb40c0c065511b8fff8b40d0d065511bbfff8000c000c0140b6561174
12080d0db80140b456120c0c0cb80140b456120e0b0bb80140b656122407
100c0cb80140b45607100d0db80140403b56bf07cf07df07ff07041f073f
074f0703071e0b0b025507180c0c0255071e0d0d0255070c0b0b0655070c
0d0d0655071a0c0c065507191e3450182b4e10f42b2b2b2b2b2b5d712b2b
4ded2b2b2bfd2b2b2b2b2b2b2b2b2b2b2b5d713c10ed2b2b2b10fd2b3ce4
2b2b003fed3f3c3fed3f3c11391112393130005d01715d00711bb10315b8
032f400a6c030b010e0e000a0b1bb8032fb46c0b070f0000183f3f2b3f33
12393f2b3031592135062322262635341236333216171133110114163332
36353426232206033865c47fd5756ad48360962fb3fd20ac7576a5a87b78
a1869e8cfba39f01038a5141020efa460212cccac1c6daccc400>ArialMT AddT42Char 
5 626 72 <0002004bffe8041e043e0015001d0216b0852b5840171f001c150255035d
055d09550b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d
0d06551d1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c
51125c19521c61126d1a611c78067815f602f618100016010f0d17175016
6016701603161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b410
10025501b8ffc0400e101006551001010195131c040b174110fff0000c00
0c014000560017fff2000b000b014000560017fff8000d000d0140b35617
400db8ffdcb40d0d02550db8ffeeb40d0d06550db8ffeab40c0c06550db8
ffc04009272a34b00d010d1a1fb8ffc0b32526341fb8ffc0b71e2334301f
011f16bbfffc000d000d0140b656163310080c0cb80140b456100e0b0bb8
0140b45610080d0db8014040135610240740242a341f073f074f0703070c
0c0cb80140b456070c0d0db80140402b5607200b0b025507180c0c025507
1c0d0d0255070e0b0b0655071c0c0c065507160d0d065507191e3437182b
4e10f42b2b2b2b2b2b2b2b5d2b4dfd2b2b2be42b4e10712b2bf6712b2b2b
2b4ded2b2b2b003fedfd5d2b2be43fed12392f5d3cfd713c011112393912
393130015d005d2b2b2b0171721b401d0000500070008000900005300070
0080009000c000d000060000041016b8032f400d6c100010301002130310
0a0413b8032fb46c040b0a1bb8032fb26c0a0700183f2b3f2b12395f5e5d
2f2b11332f5d713031590117060623220011100033320011140721161633
32360121262726232206035eba2ceeb9e9feef0114dcd5010e01fce80ab2
85638cfdda02510c3856897ca9015617a3b4011f0103010c0128fedefef9
1020afba680195864368a600>ArialMT AddT42Char 
5 1268 73 <000100130000028005d30017015eb0852b58401e1409010f192f19301940
1970199b0c9c0da90d081a0d280db019c0190419b8ffc0401f1a1f341d08
0d030c0f1c0a0115022b1413040306000a9f140114ff130e0b0bb80140b7
56134004170e0b0bb80140b45617080d0db80140b456170c0c0cb8014040
0b5617250400030292010100b8ffc0b331383400b8ffc0402b1c1f349000
0119400f0f025519400d0e025500141010025500280f0f025500220e0e02
55002c0d0d025500b8fff2400b0c0c025500140b0b065500b8ffeab41010
065500b8ffe6b40f0f065500b8fffab70c0c065500a31819bc01ba002100
f6010a00182b2bf62b2b2b2b2b2b2b2b2b2b2b5d2b2b3c10f43c103ced2b
2b2b10ed2bed5d003f3f3c3c3cfd3c3fed39113931304379401410110609
0706080602061009121b0011060f1b012b012b2a8181012b715d00721bb5
000a16130302b8032db46c03060a0fb80332b26c0a0100183f2b3f2b3332
3f303159331123353335343736363332170726232206151533152311b29f
9f131a83764c5c1b38325244cfcf039a8c716b344657129d0a4660628cfc
6600>ArialMT AddT42Char 
5 2372 75 <00010087000003e805ba001401c9b0852b58b90016ffc0b315173403b8ff
e0400e0d0d0655250435034503ba0d0403b8ffe040151719341708110c11
14030501000f1c0507140b0a0c4110fff8000d000d01400056000cfff200
0b000b01400056000cfff4000c000c01404027560c250940333634ff0901
c0090116400b0b025516401010025509281010025509140e0e025509b8ff
ec40110d0d025509040c0c0255091a0b0b025509b8fff6400b0b0b065509
141010065509b8fff8400b0d0d0655090a0f0f065509b8fff6b60c0c0655
094e16b8ffc04017343634b016f016027016a016b016ff1604160214080d
0db80140b456140c0c0cb80140b456140e0b0bb80140b45614250100b8ff
c04010333634f0000100002000d000e0000400b8fffab41010025500b8ff
fa40170e0e025500040c0c025500080b0b025500040b0b065500b8fffa40
160f0f065500020c0c065500020d0d0655004e154750182b10f62b2b2b2b
2b2b2b2b5d712b3cfd2b2b2b3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b
5d712bed2b2b2b003f3c3fed3f1139113901123931304379400e060e0725
0e060c1b010d080f1b01002b012b2b81002b5d2b012b1bb60b0a000a0305
0fb80330b46c0507010000183f3f2b393f3f303159331133113633321616
15112311342623220606151187b47ec076ae4bb4756b508d3c05bafdf292
5da49cfd5f02a1877b538e7dfdbb>ArialMT AddT42Char 
5 2896 76 <000200880000013c05ba00030007020ab0852b58b3020a0b0bb80140b456
030a0b0bb80140b456060a0b0bb80140b456070a0b0b4119014000560001
fffc000b000b014000560000fffc000b000b014000560005fffc000b000b
014000560004fffc000b000b0140b456020b0c0cb80140b456030b0c0cb8
0140b456060b0c0cb80140b456070b0c0c4119014000560001fffd000c00
0c014000560000fffd000c000c014000560005fffd000c000c0140005600
04fffd000c000c0140b45602040d0db80140b45603040d0db80140b45606
040d0db80140b45607040d0d4119014000560001fffc000d000d01400056
0000fffc000d000d014000560005fffc000d000d014000560004fffc000d
000d014040375609360b0b02554f099009a009b009c009df09f009070009
1f09700980099f09b009c009df09e009ff090a1f09010001070402030906
03bbffc0000d000d0140402a56037e0100060506040a0607250500049f04
a004b004c004e00406c004f0040200042004d004e0040404b8fff8b41010
025504b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b0655
04b8ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e
084750182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed2b0111
123939111239393130015d72712b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b1bb7040a05060040010000183f1acd3f3f3031591335
33150311331188b4b4b404ebcfcffb150426fbda>ArialMT AddT42Char 
5 4752 79 <000100830000013705ba00030181b0852b58b3020a0b0bb80140b456030a
0b0b410d014000560001fffc000b000b014000560000fffc000b000b0140
b456020b0c0cb80140b456030b0c0c410d014000560001fffd000c000c01
4000560000fffd000c000c0140b45602040d0db80140b45603040d0d410d
014000560001fffc000d000d014000560000fffc000d000d0140b7560536
0b0b025505b8ffc0b337383405b8ffc0b334353405b8ffc0b330313405b8
ffc0b322253405b8ffc040251517340f051f059f05df05044f05df05f005
031f0570058005ff05040100000a0203250100b8ffc0b337383400b8ffc0
40153335349f0001c000f0000200002000d000e0000400b8fff8b4101002
5500b8fffa401d0e0e025500040c0c0255000a0b0b025500140b0b065500
081010065500b8fffeb40d0d065500b8ffffb40c0c065500b8fffc400a0c
0c0655004e044750182b10f62b2b2b2b2b2b2b2b2b5d71722b2b3cfd3c00
3f3f3130015d71722b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b1bb3000a
010000183f3f3031593311331183b405bafa4600>ArialMT AddT42Char 
5 6146 81 <00010087000003e6043e001601e6b0852b5840130503061302a810b810e3
03e713f003f6130604b8fff040220b0d347910019810d018e018ff180420
08140e1416121c05070106160d0a0d0e0c0e4110fff8000d000d01400056
000efff2000b000b01400056000efff4000c000c0140401c560e24184010
10025518400b0b02550b28101002550b140e0e02550bb8ffec40110d0d02
550b040c0c02550b220b0b02550bb8fff4400b0b0b06550b14101006550b
b8fff9400b0d0d06550b0a0f0f06550bb8fff640120c0c06550b40333634
ff0b01ff0b010b4e18b8ffc0401a343634b018f018027018a018b018c018
04180302331516080d0db80140b456160e0b0bb80140b456160c0c0cb801
40b45616250100b8fff6b41111025500b8fffab41010025500b8fffa4017
0e0e025500040c0c0255000a0b0b025500040b0b065500b8fffa40110f0f
065500020c0c065500040d0d065500b8ffc04012333634f0000100002000
d000e00004004e1710f65d712b2b2b2b2b2b2b2b2b2b3cfd2b2b2b3cf43c
105d712bf65d712b2b2b2b2b2b2b2b2b2b2b2b2bed2b2b2b3c103c003f3c
3f3fed11390112393130437940160611090a080a070a0306102611060e1b
010f0a121b01002b012b2b2a81015d71002b5d711b40090d0a160a010603
0512b80330b26c050700183f2b323f3f3f30315933113315363332161617
1615112311342626232206151187a275dd60a150100ab42a6b4873a70426
97af45704d327dfd7302866e6d4192ccfdbc>ArialMT AddT42Char 
5 6704 82 <00020044ffe80427043e000d001901ffb0852b58b615180d0d065513b8ff
e8b40d0d06550fb8ffe840650d0d065519180d0d065512070a190c470648
0856065908670669080834103a123a16351845104b124b1645185c055c09
52105d125d1652186d056d0964106d126d1664187701150906050d5b0354
05540a5b0c6c036505650a6c0c0a171c0407111c0b0b144110fff2000b00
0b014000560014fff4000c000c014000560014fff8000d000d0140401056
14241b400d0d02551b400b0b025507b8ffea40110f0f025507180d0d0255
07100b0b025507b8fff0b40b0b065507b8fff0b40d0d065507b8fff0b40f
0f065507b8fff0b40c0c065507b8ffc0400e242534300701000710072007
0307bbfff4000d000d0140b6560731df1b011bb8ffc0400b1e2334301b01
1b0e080d0db80140b4560e0c0c0cb80140b4560e0e0b0bb801404041560e
24000c0e0f025500120d0d0255000c0c0c0255001c0b0b0255000e0b0b06
55000e0d0d0655000c1010065500160c0c065500402425341f003f000200
0c0d0db80140b456000c0c0cb80140b456000c0b0bb80140b65600311a34
37182b10f62b2b2b5d2b2b2b2b2b2b2b2b2bed2b2b2b10712b5df62b5d5d
2b2b2b2b2b2b2b2b2b2bed2b2b2b003fed3fed313001715d0071435c5840
09530553096205620904015d59002b2b2b2b1bb10b11b8032fb46c0b0b04
17b8032fb26c040700183f2b3f2b30315913103736333200151406062322
0013141633323635342623220644a489c5db01167beb8bdffeedb9b28786
b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca>ArialMT AddT42Char 
5 8410 85 <00010085000002c6043e00110107b0852b58403b2f130110040123043404
4304530466047404060911080908090d1311090d000308010b1c06070106
000a09289008010822201301130222110e0b0bb80140b45611080d0db801
40b456110c0c0cb80140b45611250100b8ffc04010333634f00001000020
00d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c02
5500060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c
065500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfd
2b2b2be4105df472e4003f3f3fed11393911393901111239390010c9870e
7dc43130005d72015d1bb7000a01060903060bb80336b26c060700183f2b
32323f3f30315933113315363633321707262322060706151185a23e693f
5b5e3e42423b5e141e0426a171483aa727473f6072fdd400>ArialMT AddT42Char 
5 8734 86 <0001003fffe803b1043e0030041eb0852b58b3170e0b0bb80140b456180e
0b0bb80140b456190e0b0b4137014000560028fff4000c000c0140005600
27fff4000c000c014000560026fff4000c000c014000560025fff4000c00
0c014000560024fff4000c000c014000560023fff4000c000c0140005600
22fff4000c000c014000560021fff4000c000c014000560020fff4000c00
0c0140407c56042214223a094a094424562265227c098e098424a613ab2c
c2030d09171a1817304b2cd617051b025502021032010a185c085c095c0a
5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426b4270f27262427242936
245a0a590b64266428742374248024930a9c0c9228972c9530a40aa90ca3
27a428b326c5261628b8fff4b40d0d065522b8fff4b40d0d065523b8fff4
b40d0d065524b8fff4b40d0d065528b8fff4b40c0c065522b8fff4b40c0c
065523b8fff4b40c0c065524b8fff4b40c0c06551db8ffde40121e395a08
27250c0a041a202615040b2e1d1ab802aa4022192c0b0b02551f193f194f
195f19af19cf19060f191f196f19df19041f198f190219bd025500150000
02aa0001ffc040140b0b025510014001021001d00102000110010201b8ff
c0b314163401b8ffc040100e113401012e5c1d6c1d021d1c150704b8fff4
b40b0b025504b8ffe6b41010065504b8ffe640130f0f0655041c2e0b1f1a
011a24194013183432b8ffc040320f0f025519180f0f025519180d0d0255
19160c0c025519201010065519200f0f065519100c0c065519160d0d0655
19160c0c4109014000560019025b0007fff2000b000b0140b35607242ab8
ffc0b51c39d02a012ab8ffe6b40c0c02552ab8ffe8b40f0f02552ab8ffe8
b40c0c06552ab8ffeab40d0d06552abbfff4000c000c0140b3562a1a32b8
ffc04021272a346032c032023f3280320232100101012400180d0d025500
100d0d06550020b8fff4b40d0d025520b8fff4b41010065520b8fff4b70f
0f0655200e0b0bb8014040165620240f100b0b02550f160c0c02550f200d
0d02550fb8fffa40140f0f02550f0e0c0c06550f0c0d0d06550f060c0cb8
01404011560f22df00013f004f00020019313437182b4e10f45d714df42b
2b2b2b2b2b2bed2b2b2b2b102b2bed724e105d712bf62b2b2b2b2b712b4d
ed2bf42b2b2b2b2b2b2b2b2b2bed72003fed2b2b2b3fed7112392f2b2b5d
71722be410fd5d71722be41112391112390111121739313043794040272d
1e2305142c261110121013100306220d201b000928071b01052d071b011e
14201b00210e231b0022230d0c08290a1b012827090a062b041b001f101d
1b01002b2b103c103c2b103c103c2b012b2b2b2b2a2b818181002b2b2b2b
2b2b2b2b2b5d71015d72715d002b2b2b2b2b2b2b2b2b012b2b2b1b400a00
01011d0b26261d2e04b8032fb76c2e0b191a1a151db8032fb26c15070018
3f2b322f333f2b1139113311392f33303159133716163332363534272627
2e023534363736363332161617072626232206151417161716171e021514
06062322263fb20f897b7c78352593c6994f41382a91537dbd5a11b00c73
697c6a16162f1b84bf975669c67dcfd9013d1c6b7265443d231825324981
4e4779281f2b487b6718525c5237231c1d130a2433417c5c5a9f57ac>ArialMT AddT42Char 
5 9932 87 <00010024fff2022a05990017016eb0852b584120000cfffe000c000c0140
0056000bfffe000c000c014000560008fffe000c000c014000560007fffe
000c000c014000560006fffe000c000c01400056000affc0b323263409b8
ffc0402423263480190100010c0d0a0103001610092b0f0a06161c030b0f
10220022010d12080d0db80140b456120e0b0bb80140b456120a0c0cb801
4040225612250c01ff070845094560077007800790070400072007a007b0
07c007d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e
0e025507b8fff8b40d0d025507b8fff8b40c0c025507b8fffab410100655
07b8fff0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00
180136b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd2b2b2b3c
10e4f43c003fed3f3cfd3c1139123911333310c93130015d2b2b2b2b2b2b
2b1bb10316b80332b46c030b0100b8033240096c010a0d0d110e0a09b803
2db26c0a0600183f2b3332322f3f2b3f2b30315925170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>ArialMT AddT42Char 
5 10374 88 <00010083ffe803e00426001801b7b0852b58b9001affc040091517340220
1316340fb8fff040191214342b1301240813160c0113160b06000a111c03
0b0033164110fff8000d000d014000560016fff2000b000b014000560016
fff4000c000c0140401c5616251817403336341a40101002551728101002
5517120e0e025517b8ffec400b0d0d025517040c0c025517b8fff4400b0b
0b065517141010065517b8fff8400b0d0d0655170c0f0f065517b8fff640
0d0c0c0655ff1701c01701174e1ab8ffc04016343634b01af01a02701aa0
1ab01aff1a041a0c080d0db80140b4560c0e0b0bb80140b4560c0c0c0cb8
0140b3560c2509b8ffc04010333634f0090100092009d009e0090409b8ff
f8b41010025509b8fff840110e0e025509040c0c0255090a0b0b065509b8
fff640160f0f065509020c0c065509020d0d0655094e194750182b10f62b
2b2b2b2b2b2b5d712bed2b2b2b105d712bf65d712b2b2b2b2b2b2b2b2b2b
2b3cfd2b2b2be4003fed3f3f3c39390111123931304379401a04100e0d0f
0d0206070806080508030610040c1b000d08111b00002b012b2a2a81005d
012b2b2b1bb4000a010311b80330b66c030b16060a0600183f3f3f2b323f
30315921350623222626272635113311141716163332363635113311033f
7cd55ea34f100bb40b116e51518e3bb49cb4486d4f35730292fdb38d3147
51538f880239fbda>ArialMT AddT42Char 
5 11554 90 <00010006000005b70426001205ecbc0000fff2000b000b0140b4560e0e0b
0bbe01400056000cfff4000c000d0140b456020c0c0db80140b45610040d
0db80140b45605040d0db80140b45606020d0d410d014000560003fffc00
0d000d014000560000ffea000d000d0140b45610060c0cb80140b4560606
0c0c410d014000560009fffa000c000c01400056000efffa000c000c0140
b4560f060c0c410d014000560012fffa000c000c014000560008fffa000c
000c0140b45607060c0cbe01400056000cfff2000b000b0140b456020e0b
0bb80140b45610060b0bb80140b45606040b0b410d014000560009fffc00
0b000b01400056000efff4000b000b0140b4560f0c0b0b410d0140005600
12fff4000b000b014000560008fff4000b000b0140b456070c0b0b410d01
400056000afff4000d000d014000560004fff4000d000d0140b45611220b
0b410d01400056000affe8000b000b014000560004ffe8000b000b0140b4
5611200d0db80140b45611220c0c410e01400056000affde000c000c0140
00560004ffde000c000c01400056b10202435458b90012fff440110d0d02
5507060d0d025500060d0d02550ab8ffd4b40c0d025504b8ffe8400b0c0d
025511200c0d02550ab8ffc0b40e10025504b8ffc0402f0e10025511400e
100255040a110301000c06070601060f0a000a0d0c060c0c02550c110102
040a04110a0c0c025511b8fff8b40d0d0255112f2b2bcdcd10d6cd10d42b
cd003f3f3f3f3f111217393130002b2b2b2b2b2b012b2b2b1b40160f1401
2a04290a024a115b118e110311200d0d06550ab8ffe0b40d0d065504b8ff
e0b40d0d065511b8fff040091f2134101c1d273409b8fff040b71f243404
060c0913061b09191205040004060b090b0e08121000130314071c081b0b
1d0e240025072a082b0e340035073a083b0e4403470640074d084b0b430f
47114a125b0f52126b076408671279067a077408b906ba0fb612f506fb09
280b112800280d270e280f27122f1438003712770886089803970ca701a8
02a80ba60cb500b606ba0ec804d606d909e804e80fe712f406fa091c0b06
0d0d06550c060d0d065510060d0d06550e060d0d06550f060d0d065512b1
0602435458401b0a0e0f0412001108070825070f250e122500000e07030d
010c250db8ffd640370b0b06550d0225012a0b0b0655010d011413060a0b
11260a2b115404520a5c116c117c118a110a110a040300010f0a000a0c06
07060106003f3f3f3f3f111217395d01111239392f2bf42f2bf411121739
10e410e410e41112391112391112391b40140305050206070705090a0a08
0b0c0c0a1011110fb8ff4bb305001220b8ff4940660a0f0e20c311070820
071112122b0507140505070e0a0c0c250d0e140d0d0e08110f0f2b0a0814
0a0a080005020225010014010100000201071204080f110c0e0d0a110a04
03120d0c0c0808070702020106120f0f0e0e000a14f6100d01600d700d80
0d030db801a7400a204f0a016f0a7f0a020ab8025540094f11016f117f11
0211b80255400b1005016005700580050305b801a7b501f613f666182b4e
10f4194df45d5d18fd5d71fd5d711a19fd5d5d18e6003f3c103c103c3f3c
103c103c103c103c1217390111123939123939113939123939874d2e2b87
7dc4872e182b877dc4872e182b877dc4872e182b877dc42b2b2b870e10c4
070e103c070e103c870e10c4870e10c44bb01f53b00243b040505a58b40d
200c2002bcffe00001ffe0000effd0b400300f2012b8ffe0013838383838
383838594bb03453b00243b040505a58b90008ffd0b10730013838594bb0
21534bb033515ab00243b040505a58b90008ffe0b10720013838594bb012
534bb01e515ab00243b040505a58b9000effd0b60f200d200c2008b8ffd0
b2073012b8ffe0b2003802baffe00001ffe0013838383838383838383859
4bb012534bb017515ab00243b040505a58b90011ffe0b30a200420003838
385959313001435c58b9000effd4b61239002c123900b8ffd4b113392b2b
2b592b2b2b2b2b5d71722b2b2b002b2b2b715d015d59002b2b2b2b2b2b2b
2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
21013313173637133313173713330123032703014bfebbbaa93f0433a9b9
9f353db6affeb4bba929d70426fd9be411ca026efd98cbcd0266fbda027c
b5fccf00>ArialMT AddT42Char 
7 4202 192 <000200170000037305d300150019014bb0852b58402a16080b0d030a0818
1817001314140101022b03121111040403060d1c080119161600150a1716
40191918b8fff4400b0f100255180e0d0d025518b8ffe8400b0c0c025518
0c1010065518b8ffea402c0b0c06559f18bf18ff1803181a1b900ab00a02
0a28121213bb14101111141415400005040401010092020203b8ffe4b40e
10025503b8ffecb40d0d025503b8fff2b40c0c025503b8fffab40b0b0255
03b8ffecb40d0d065503b8fff2400a0b0c065503191a7c50182b4e10f42b
2b2b2b2b2b3c4d10f43c103c103c10fd3c103c103c10f43c10e45d4e10f6
712b2b2b2b2b3c4d10fd3c003f3c3c103c3fed3f3c103c103c10fd3c103c
103c3f3c11123911123931304379400e0e0f06070e07101b000f060d1b01
2b012b81811bb7160a000a14110302b8032db66c03061700080db80332b2
6c080100183f2b3f3f2b33323f3f30315933112335333534363332170726
23220615153315231121113311b7a0a0889363541c352c5d44cece0154b4
039b8b679ea81798094a78458bfc6505bafa4600>ArialMT AddT42Char 
3 0 0 <00020100000005000500000300070042b40201e40607b802994013000504
e403000a0704e4010019080605e40203bc023100090199012e00182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/B 37 def
/C 38 def
/D 39 def
/a 68 def
/c 70 def
/d 71 def
/e 72 def
/f 73 def
/h 75 def
/i 76 def
/l 79 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/w 90 def
/fl 192 def
end
ArialMT /Encoding get
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 127 /fl put
pop
end
%ADOEndSubsetFont
/USJGRI+ArialMT /ArialMT findfont ct_VMDictPut
/USJGRI+ArialMT*1 
[66{/.notdef}rp /B /C /D 28{/.notdef}rp /a /.notdef /c 
/d /e /f /.notdef /h /i 2{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s /t /u 
/.notdef /w 7{/.notdef}rp /fl 128{/.notdef}rp]
USJGRI+ArialMT nf
USJGRI+ArialMT*1 [11.357 0 0 -11.357 0 0 ]msf
182.556 13.8681 mo
(Bloodintheannulus)
[7.55972 2.52109 6.3598 6.35977 9.35968 2.52109 9.47977 3.11987 6.35977 9.47989 6.3598 6.35976 
6.23999 6.3598 2.52112 6.35974 0 ]xsh
110.556 13.8681 mo
(Catheter)
[8.15958 6.3598 3.11984 6.3598 6.35977 3.11996 6.3598 0 ]xsh
119.556 126.308 mo
(Directionof\177ow)
[8.15958 2.52109 3.83978 6.3598 5.6398 3.11996 2.52109 6.35986 9.47968 6.3598 6.23975 5.6398 
6.2399 0 ]xsh
/USJGRH+CMMI12*1 uf
/USJGRH+CMMI12 uf
/FAAAAA+CMMI12 uf
/USJGRI+ArialMT*1 uf
/USJGRI+ArialMT uf
/ArialMT uf
%ADOBeginSubsetFont: FAAAAA+CMMI12 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /FAAAAA+CMMI12 def
/FontInfo 6 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 108 /l put
dup 112 /p put
dup 122 /z put
def
/FontBBox {-31 -250 827 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 683 704 431 441 452 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.0437899 def
/StdHW [22] def
/StdVW [65] def
/StemSnapH [22 29] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/l <1C60D8A8C9B08A956D794C064F51429FBAB5F4DA8F63179E8998B2D6570C
3C58B2D5F435FACB6907B62CF42B5BAFC7F3566F9EF14A40BF613A3D45EFCA47
2AA99FB799A6E9DEAD300C9718B6E801ECD0FF62EA3D37B958AAD37739F4B1E2
9C9021B4835B7756B60BD3CDB268E2E9BC9AD1AB67812D4A237F4DCA834D3E8D
4D5E2BEE944E05C2C1111AD864D6CA6E8B> |-
/p <1C60D8A8C9B08A95A3D58A586A3FBE8DD573DC1B5201277ECEB772F037AE
79EC6960313F5C2D7C5729982F1E5CF35929D31B7F8AB831CC69A21925CA8357
2F240C36380F9036E0AD2CD1407925AE8431ABC2E72D550FD901B9BA0A4DEAFB
65769FF7CD9F5D2CFB4CA30B173943F434C90553BA131A160E052959FD00DD88
B44EED8E1CAC3DD183694B6F371C4CDA4D9FA5327CD8C6D69F4B38BE7F8846A1
032948C6FD6272419B1AF2F0083F3BABFF6F394A9D351FD4943BA751FDC62544
EB329D1504169D056D1FB4A34BE1878CA33F8748F751E9F553B834C2DD5E593C
EB17E1> |-
/z <1C60D8A8C9B08A95AD9EFC7F8BEFD6D96D836D8101132D991756D73D9ADF
95E4A763F2D3766AFFF20016D96D714D9FBD33893BEAFE99F057FA69A63AA357
256C05A7B71BEE66D53D886B68F40FC07D36AA10293CD903EB9C9CDBBCCFBE52
C45BD4E1A8C24A3552734B2BAE318C2CD3F6DD35B251EEE08850FE74618F5F08
0CD5032DCB0E8DDBDD851E0111BE1DA3660260B31DB26B083509E3AF0F5A0478
58F34F603DDA174F4AFB4A60525C889F7BA04AF3AE905CA74AFAA191E9B1C7E2
1AEEC1C969FAF8305D227F1C2831687507DC20B9090C389B192BA166E1880692
0623210DF503F34172745129725E21> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/USJGRJ+CMMI12 /FAAAAA+CMMI12 findfont ct_VMDictPut
/USJGRJ+CMMI12*1 
[108{/.notdef}rp /l 3{/.notdef}rp /p 9{/.notdef}rp /z 133{/.notdef}rp]
USJGRJ+CMMI12 nf
USJGRJ+CMMI12*1 [11.955 0 0 -11.955 0 0 ]msf
317.556 130.868 mo
(z)sh
%ADOBeginSubsetFont: HAAAAA+CMR12 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HAAAAA+CMR12 def
/FontInfo 6 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 48 /zero put
dup 61 /equal put
def
/FontBBox {0 -251 769 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 683 704 431 446 665 675] def
/OtherBlues [-205 -194] def
/BlueScale 0.0437899 def
/StdHW [29] def
/StdVW [65] def
/StemSnapH [20 29] def
/StemSnapV [65 81] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/Delta <1C60D8A8C9B08A9470D47893C524C421EB08A5D093626305582A2154
103D2F7974501A099D9FF48ED55C5FDD1AF17C05C53F6AA25C8036E1A2885B4C
8DD1FC574A3BC1B01A36FC196BDD075E370151938B9F7977C7B370F122D5471A> |-
/zero <1C60D8A8C9B08A95A31F4C83891A453EB85DDBB3245A404E48367489C
722240B7473C47E4C5A715CDD139A442AE2EBE25BFB48A4C05B068904AB8DF39
89FFA8FD420F4D99EB7BCC69642B6AB01495DCC383C28383CECF763062B202CD
DF29F52DE1452320A34C15A0F2060AAE4977952BE04B71FFBC639DC68D062510
B13C35231D7EAA4F3BD58C46C08E5FF11DA65258A7DC5762A251A503F7BD72D> |-
/equal <1C60D8A8C9B08A94675A26C47CC2E2E8C23D06C121920450527330C6
98F4DCA148997D4A0DB0A11B771213CD37841EDD5ACD77CE3D7EA6EEDBB0E6FA
26819096C5D247623FA1EC3D3F0BE04BB0EF9B9A0EF85CBB3B> |-
/.notdef <1C60D8A8C9B08A9563F93DCB7939BC> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/USJGRK+CMR12 /HAAAAA+CMR12 findfont ct_VMDictPut
/USJGRK+CMR12*1 
[/.notdef /Delta 46{/.notdef}rp /zero 12{/.notdef}rp /equal 194{/.notdef}rp]
USJGRK+CMR12 nf
USJGRK+CMR12*1 [11.955 0 0 -11.955 0 0 ]msf
326.796 130.868 mo
(=)sh
USJGRJ+CMMI12*1 [11.955 0 0 -11.955 0 0 ]msf
339.276 130.868 mo
(l)sh
317.556 144.308 mo
(p)sh
USJGRK+CMR12*1 [11.955 0 0 -11.955 0 0 ]msf
326.796 144.308 mo
(=)sh
USJGRJ+CMMI12*1 [11.955 0 0 -11.955 0 0 ]msf
339.156 144.308 mo
(p)sh
%ADOBeginSubsetFont: IAAAAA+CMR8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IAAAAA+CMR8 def
/FontInfo 6 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
def
/FontBBox {0 -250 833 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 683 704 431 446 665 675] def
/OtherBlues [-205 -194] def
/BlueScale 0.0437899 def
/StdHW [33] def
/StdVW [76] def
/StemSnapH [28 33] def
/StemSnapV [76 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/one <1C60D8A8C9B08A95D352586DE3151F73D080760F4072C70D020EFA88EA
0F309929E0C1BCC8EC8F7FDBEE4B0E2C4C76152DA2BAA2DA44AB41A567913983
670E36D005ED029A73DB21DCC5285836A93718DC3EDE9579CC5E30D6DE86A9> |-
/.notdef <1C60D8A8C9B08A9596FF84B2D0F614> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/USJGRL+CMR8 /IAAAAA+CMR8 findfont ct_VMDictPut
/USJGRL+CMR8*1 
[49{/.notdef}rp /one 206{/.notdef}rp]
USJGRL+CMR8 nf
USJGRL+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
345.036 146.108 mo
(1)sh
%ADOBeginSubsetFont: JAAAAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /JAAAAA+CMSY10 def
/FontInfo 6 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /minus put
def
/FontBBox {0 -960 943 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705] def
/OtherBlues [-124 -119] def
/BlueScale 0.0437899 def
/StdHW [40] def
/StdVW [85] def
/StemSnapH [40 55] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/minus <1C60D8A8C9B08A946182837629008DF7702985522C1BEB432204C2EF
9CAB07AB654895DD8804EF7ED97DE3E2616CBB2FB21BE3D9> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/USJGRM+CMSY10 /JAAAAA+CMSY10 findfont ct_VMDictPut
/USJGRM+CMSY10*1 
[32{/.notdef}rp /minus 223{/.notdef}rp]
USJGRM+CMSY10 nf
USJGRM+CMSY10*1 [11.955 0 0 -11.955 0 0 ]msf
352.476 144.308 mo
( )sh
USJGRK+CMR12*1 [11.955 0 0 -11.955 0 0 ]msf
364.356 144.308 mo
(\001)sh
USJGRJ+CMMI12*1 [11.955 0 0 -11.955 0 0 ]msf
374.076 144.308 mo
(p)sh
USJGRL+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
379.956 146.108 mo
(1)sh
USJGRJ+CMMI12*1 [11.955 0 0 -11.955 0 0 ]msf
33.9965 144.308 mo
(p)sh
USJGRK+CMR12*1 [11.955 0 0 -11.955 0 0 ]msf
43.2365 144.308 mo
(=)sh
USJGRJ+CMMI12*1 [11.955 0 0 -11.955 0 0 ]msf
55.7165 144.308 mo
(p)sh
USJGRL+CMR8*1 [7.97 0 0 -7.97 0 0 ]msf
61.5965 146.108 mo
(1)sh
USJGRJ+CMMI12*1 [11.955 0 0 -11.955 0 0 ]msf
33.9965 130.868 mo
(z)sh
USJGRK+CMR12*1 [11.955 0 0 -11.955 0 0 ]msf
43.3565 130.868 mo
(=0)
[12.3652 0 ]xsh
USJGRJ+CMMI12*1 [11.955 0 0 -11.955 0 0 ]msf
181.888 166.868 mo
(l)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
[/Pattern [/151977336.0 /151977768.0 ]]
] del_res
/USJGRK+CMR12*1 uf
/USJGRK+CMR12 uf
/HAAAAA+CMR12 uf
/USJGRM+CMSY10*1 uf
/USJGRM+CMSY10 uf
/JAAAAA+CMSY10 uf
/USJGRL+CMR8*1 uf
/USJGRL+CMR8 uf
/IAAAAA+CMR8 uf
/USJGRJ+CMMI12*1 uf
/USJGRJ+CMMI12 uf
/FAAAAA+CMMI12 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
