%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: A91hyefkh_s9bj4v_fkg.tmp.pdf
%%Creator: Adobe Acrobat 20.5.0
%%For: lbing
%%CreationDate: 06/02/2024, 21:36:55
%%BoundingBox: 0 0 399 291
%%HiResBoundingBox: 0 0 398.9749 290.5356
%%CropBox: 0 0 398.9749 290.5356
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 833 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c018 91.98c2f96, 2021/06/15-20:39:32        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2024-02-06T21:32:29Z"
   xmp:CreateDate="2024-02-06T21:32:29Z"
   xmp:MetadataDate="2024-02-06T21:32:29Z"
   xmp:CreatorTool="Adobe Acrobat Pro 2020 20.5.30539"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:be111298-c1a7-4e5f-954d-f47a3619cc22"
   xmpMM:InstanceID="uuid:d472fb94-079c-44a6-9ec8-707486c0e413"
   pdf:Producer="Adobe Acrobat Pro 2020 20.5.30539"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -290.536 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 290.536 li
398.975 290.536 li
398.975 0 li
cp
clp
310.087 223.12 mo
331.136 223.12 li
331.136 6.22443 li
310.087 6.22443 li
cp
false sop
gsave
/1 
[/DeviceCMYK] /CSA add_res
grestore
/234444352.0 
<<
/ID /234444352.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 8 mo
8 8 li
8 0 li
0 0 li
cp
clp
-.10448 8.0493 mo
8.03572 8.0493 li
8.03572 -.0908995 li
-.10448 -.0908995 li
cp
false sop
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 108.212 290.536 ]ct
[8.1402 0 0 8.1402 -108.316 282.486 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~`;fl<!!!!!!!!#<!!!!!!!!!!!!'t<!!'t<!!!!!!!!!!!!!#<!!!!!`;fl<!6"p<!!!!!!!!!!!6"p<
~>
<~Q2gmb!!!!!!!!"b!!!!!!!!!!!!&;b!!&;b!!!!!!!!!!!!!"b!!!!!Q2gmb!1!Tb!!!!!!!!!!!1!Tb
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/234444352.0 /Pattern get_res
[.502691 0 0 .502691 191.895 333.939 ]make_pattern set_pattern
f
2 vmreclaim
309.64 223.12 mo
310.571 223.12 li
310.571 6.22443 li
309.64 6.22443 li
cp
false sop
0 0 0 0 cmyk
f
310.087 223.566 mo
331.136 223.566 li
331.136 222.672 li
310.087 222.672 li
cp
f
330.689 223.12 mo
331.62 223.12 li
331.62 6.22443 li
330.689 6.22443 li
cp
f
310.087 6.70844 mo
331.136 6.70844 li
331.136 5.77643 li
310.087 5.77643 li
cp
f
309.64 7.15546 mo
310.571 7.15546 li
310.571 6.22443 li
309.64 6.22443 li
cp
.791 .599 0 0 cmyk
f
309.64 10.8434 mo
310.571 10.8434 li
310.571 9.91241 li
309.64 9.91241 li
cp
f
309.64 14.5324 mo
310.571 14.5324 li
310.571 13.6004 li
309.64 13.6004 li
cp
f
309.64 18.2204 mo
310.571 18.2204 li
310.571 17.2884 li
309.64 17.2884 li
cp
f
309.64 21.9084 mo
310.571 21.9084 li
310.571 20.9764 li
309.64 20.9764 li
cp
f
309.64 25.5964 mo
310.571 25.5964 li
310.571 24.6655 li
309.64 24.6655 li
cp
f
309.64 29.2844 mo
310.571 29.2844 li
310.571 28.3535 li
309.64 28.3535 li
cp
f
309.64 32.9734 mo
310.571 32.9734 li
310.571 32.0414 li
309.64 32.0414 li
cp
f
309.64 36.6614 mo
310.571 36.6614 li
310.571 35.7294 li
309.64 35.7294 li
cp
f
309.64 40.3494 mo
310.571 40.3494 li
310.571 39.4184 li
309.64 39.4184 li
cp
f
309.64 44.1124 mo
310.571 44.1124 li
310.571 43.1804 li
309.64 43.1804 li
cp
f
309.64 47.8004 mo
310.571 47.8004 li
310.571 46.8694 li
309.64 46.8694 li
cp
f
309.64 51.4885 mo
310.571 51.4885 li
310.571 50.5574 li
309.64 50.5574 li
cp
f
309.64 55.1765 mo
310.571 55.1765 li
310.571 54.2454 li
309.64 54.2454 li
cp
f
309.64 58.8654 mo
310.571 58.8654 li
310.571 57.9334 li
309.64 57.9334 li
cp
f
309.64 62.5154 mo
310.571 62.5154 li
310.571 61.6214 li
309.64 61.6214 li
cp
f
309.64 66.2034 mo
310.571 66.2034 li
310.571 65.3094 li
309.64 65.3094 li
cp
f
309.64 69.8914 mo
310.571 69.8914 li
310.571 68.9974 li
309.64 68.9974 li
cp
f
309.64 73.5804 mo
310.571 73.5804 li
310.571 72.6864 li
309.64 72.6864 li
cp
f
309.64 77.2684 mo
310.571 77.2684 li
310.571 76.3364 li
309.64 76.3364 li
cp
f
309.64 80.9564 mo
310.571 80.9564 li
310.571 80.0255 li
309.64 80.0255 li
cp
f
309.64 84.6444 mo
310.571 84.6444 li
310.571 83.7134 li
309.64 83.7134 li
cp
f
309.64 88.4074 mo
310.571 88.4074 li
310.571 87.4014 li
309.64 87.4014 li
cp
f
309.64 92.0954 mo
310.571 92.0954 li
310.571 91.1644 li
309.64 91.1644 li
cp
f
309.64 95.7844 mo
310.571 95.7844 li
310.571 94.8524 li
309.64 94.8524 li
cp
f
309.64 99.4724 mo
310.571 99.4724 li
310.571 98.5405 li
309.64 98.5405 li
cp
f
309.64 103.16 mo
310.571 103.16 li
310.571 102.229 li
309.64 102.229 li
cp
f
309.64 106.848 mo
310.571 106.848 li
310.571 105.917 li
309.64 105.917 li
cp
f
309.64 110.536 mo
310.571 110.536 li
310.571 109.605 li
309.64 109.605 li
cp
f
309.64 114.225 mo
310.571 114.225 li
310.571 113.293 li
309.64 113.293 li
cp
f
309.64 117.913 mo
310.571 117.913 li
310.571 116.981 li
309.64 116.981 li
cp
f
309.64 121.601 mo
310.571 121.601 li
310.571 120.67 li
309.64 120.67 li
cp
f
309.64 125.289 mo
310.571 125.289 li
310.571 124.358 li
309.64 124.358 li
cp
f
309.64 128.977 mo
310.571 128.977 li
310.571 128.046 li
309.64 128.046 li
cp
f
309.64 132.666 mo
310.571 132.666 li
310.571 131.734 li
309.64 131.734 li
cp
f
309.64 136.428 mo
310.571 136.428 li
310.571 135.497 li
309.64 135.497 li
cp
f
309.64 140.117 mo
310.571 140.117 li
310.571 139.185 li
309.64 139.185 li
cp
f
309.64 143.805 mo
310.571 143.805 li
310.571 142.873 li
309.64 142.873 li
cp
f
309.64 147.493 mo
310.571 147.493 li
310.571 146.562 li
309.64 146.562 li
cp
f
309.64 151.144 mo
310.571 151.144 li
310.571 150.25 li
309.64 150.25 li
cp
f
309.64 154.833 mo
310.571 154.833 li
310.571 153.938 li
309.64 153.938 li
cp
f
309.64 158.521 mo
310.571 158.521 li
310.571 157.627 li
309.64 157.627 li
cp
f
309.64 162.209 mo
310.571 162.209 li
310.571 161.315 li
309.64 161.315 li
cp
f
309.64 165.897 mo
310.571 165.897 li
310.571 164.966 li
309.64 164.966 li
cp
f
309.64 169.585 mo
310.571 169.585 li
310.571 168.654 li
309.64 168.654 li
cp
f
309.64 173.274 mo
310.571 173.274 li
310.571 172.342 li
309.64 172.342 li
cp
f
309.64 176.962 mo
310.571 176.962 li
310.571 176.03 li
309.64 176.03 li
cp
f
309.64 180.724 mo
310.571 180.724 li
310.571 179.718 li
309.64 179.718 li
cp
f
309.64 184.412 mo
310.571 184.412 li
310.571 183.48 li
309.64 183.48 li
cp
f
309.64 188.1 mo
310.571 188.1 li
310.571 187.169 li
309.64 187.169 li
cp
f
309.64 191.788 mo
310.571 191.788 li
310.571 190.857 li
309.64 190.857 li
cp
f
309.64 195.477 mo
310.571 195.477 li
310.571 194.545 li
309.64 194.545 li
cp
f
309.64 199.165 mo
310.571 199.165 li
310.571 198.233 li
309.64 198.233 li
cp
f
309.64 202.853 mo
310.571 202.853 li
310.571 201.922 li
309.64 201.922 li
cp
f
309.64 206.541 mo
310.571 206.541 li
310.571 205.61 li
309.64 205.61 li
cp
f
309.64 210.229 mo
310.571 210.229 li
310.571 209.298 li
309.64 209.298 li
cp
f
309.64 213.918 mo
310.571 213.918 li
310.571 212.986 li
309.64 212.986 li
cp
f
309.64 217.606 mo
310.571 217.606 li
310.571 216.674 li
309.64 216.674 li
cp
f
309.64 221.294 mo
310.571 221.294 li
310.571 220.363 li
309.64 220.363 li
cp
f
311.092 223.566 mo
312.098 223.566 li
312.098 222.672 li
311.092 222.672 li
cp
f
315.078 223.566 mo
316.084 223.566 li
316.084 222.672 li
315.078 222.672 li
cp
f
319.065 223.566 mo
320.071 223.566 li
320.071 222.672 li
319.065 222.672 li
cp
f
323.088 223.566 mo
324.057 223.566 li
324.057 222.672 li
323.088 222.672 li
cp
f
327.074 223.566 mo
328.08 223.566 li
328.08 222.672 li
327.074 222.672 li
cp
f
330.689 223.12 mo
331.62 223.12 li
331.62 222.189 li
330.689 222.189 li
cp
f
330.689 219.432 mo
331.62 219.432 li
331.62 218.501 li
330.689 218.501 li
cp
f
330.689 215.744 mo
331.62 215.744 li
331.62 214.812 li
330.689 214.812 li
cp
f
330.689 212.055 mo
331.62 212.055 li
331.62 211.124 li
330.689 211.124 li
cp
f
330.689 208.367 mo
331.62 208.367 li
331.62 207.473 li
330.689 207.473 li
cp
f
330.689 204.679 mo
331.62 204.679 li
331.62 203.785 li
330.689 203.785 li
cp
f
330.689 200.991 mo
331.62 200.991 li
331.62 200.097 li
330.689 200.097 li
cp
f
330.689 197.303 mo
331.62 197.303 li
331.62 196.409 li
330.689 196.409 li
cp
f
330.689 193.651 mo
331.62 193.651 li
331.62 192.72 li
330.689 192.72 li
cp
f
330.689 189.963 mo
331.62 189.963 li
331.62 189.032 li
330.689 189.032 li
cp
f
330.689 186.275 mo
331.62 186.275 li
331.62 185.344 li
330.689 185.344 li
cp
f
330.689 182.587 mo
331.62 182.587 li
331.62 181.655 li
330.689 181.655 li
cp
f
330.689 178.824 mo
331.62 178.824 li
331.62 177.892 li
330.689 177.892 li
cp
f
330.689 175.136 mo
331.62 175.136 li
331.62 174.204 li
330.689 174.204 li
cp
f
330.689 171.447 mo
331.62 171.447 li
331.62 170.516 li
330.689 170.516 li
cp
f
330.689 167.759 mo
331.62 167.759 li
331.62 166.828 li
330.689 166.828 li
cp
f
330.689 164.071 mo
331.62 164.071 li
331.62 163.14 li
330.689 163.14 li
cp
f
330.689 160.383 mo
331.62 160.383 li
331.62 159.451 li
330.689 159.451 li
cp
f
330.689 156.695 mo
331.62 156.695 li
331.62 155.763 li
330.689 155.763 li
cp
f
330.689 153.006 mo
331.62 153.006 li
331.62 152.075 li
330.689 152.075 li
cp
f
330.689 149.318 mo
331.62 149.318 li
331.62 148.387 li
330.689 148.387 li
cp
f
330.689 145.63 mo
331.62 145.63 li
331.62 144.699 li
330.689 144.699 li
cp
f
330.689 141.942 mo
331.62 141.942 li
331.62 141.01 li
330.689 141.01 li
cp
f
330.689 138.254 mo
331.62 138.254 li
331.62 137.322 li
330.689 137.322 li
cp
f
330.689 134.565 mo
331.62 134.565 li
331.62 133.56 li
330.689 133.56 li
cp
f
330.689 130.803 mo
331.62 130.803 li
331.62 129.872 li
330.689 129.872 li
cp
f
330.689 127.115 mo
331.62 127.115 li
331.62 126.184 li
330.689 126.184 li
cp
f
330.689 123.427 mo
331.62 123.427 li
331.62 122.496 li
330.689 122.496 li
cp
f
330.689 119.738 mo
331.62 119.738 li
331.62 118.844 li
330.689 118.844 li
cp
f
330.689 116.051 mo
331.62 116.051 li
331.62 115.157 li
330.689 115.157 li
cp
f
330.689 112.362 mo
331.62 112.362 li
331.62 111.467 li
330.689 111.467 li
cp
f
330.689 108.673 mo
331.62 108.673 li
331.62 107.779 li
330.689 107.779 li
cp
f
330.689 104.985 mo
331.62 104.985 li
331.62 104.091 li
330.689 104.091 li
cp
f
330.689 101.335 mo
331.62 101.335 li
331.62 100.403 li
330.689 100.403 li
cp
f
330.689 97.6474 mo
331.62 97.6474 li
331.62 96.7154 li
330.689 96.7154 li
cp
f
330.689 93.9584 mo
331.62 93.9584 li
331.62 93.0274 li
330.689 93.0274 li
cp
f
330.689 90.2704 mo
331.62 90.2704 li
331.62 89.3394 li
330.689 89.3394 li
cp
f
330.689 86.5074 mo
331.62 86.5074 li
331.62 85.5764 li
330.689 85.5764 li
cp
f
330.689 82.8194 mo
331.62 82.8194 li
331.62 81.8884 li
330.689 81.8884 li
cp
f
330.689 79.1314 mo
331.62 79.1314 li
331.62 78.1994 li
330.689 78.1994 li
cp
f
330.689 75.4434 mo
331.62 75.4434 li
331.62 74.5114 li
330.689 74.5114 li
cp
f
330.689 71.7545 mo
331.62 71.7545 li
331.62 70.8234 li
330.689 70.8234 li
cp
f
330.689 68.0665 mo
331.62 68.0665 li
331.62 67.1354 li
330.689 67.1354 li
cp
f
330.689 64.3784 mo
331.62 64.3784 li
331.62 63.4474 li
330.689 63.4474 li
cp
f
330.689 60.6904 mo
331.62 60.6904 li
331.62 59.7584 li
330.689 59.7584 li
cp
f
330.689 57.0024 mo
331.62 57.0024 li
331.62 56.0704 li
330.689 56.0704 li
cp
f
330.689 53.3134 mo
331.62 53.3134 li
331.62 52.3824 li
330.689 52.3824 li
cp
f
330.689 49.6254 mo
331.62 49.6254 li
331.62 48.6944 li
330.689 48.6944 li
cp
f
330.689 45.9374 mo
331.62 45.9374 li
331.62 45.0064 li
330.689 45.0064 li
cp
f
330.689 42.2495 mo
331.62 42.2495 li
331.62 41.2434 li
330.689 41.2434 li
cp
f
330.689 38.4864 mo
331.62 38.4864 li
331.62 37.5544 li
330.689 37.5544 li
cp
f
330.689 34.7984 mo
331.62 34.7984 li
331.62 33.8664 li
330.689 33.8664 li
cp
f
330.689 31.1104 mo
331.62 31.1104 li
331.62 30.1784 li
330.689 30.1784 li
cp
f
330.689 27.4214 mo
331.62 27.4214 li
331.62 26.5274 li
330.689 26.5274 li
cp
f
330.689 23.7335 mo
331.62 23.7335 li
331.62 22.8394 li
330.689 22.8394 li
cp
f
330.689 20.0454 mo
331.62 20.0454 li
331.62 19.1514 li
330.689 19.1514 li
cp
f
330.689 16.3574 mo
331.62 16.3574 li
331.62 15.4634 li
330.689 15.4634 li
cp
f
330.689 12.7064 mo
331.62 12.7064 li
331.62 11.7755 li
330.689 11.7755 li
cp
f
330.689 9.01843 mo
331.62 9.01843 li
331.62 8.08746 li
330.689 8.08746 li
cp
f
329.049 6.70844 mo
330.167 6.70844 li
330.167 5.77643 li
329.049 5.77643 li
cp
f
325.063 6.70844 mo
326.069 6.70844 li
326.069 5.77643 li
325.063 5.77643 li
cp
f
321.077 6.70844 mo
322.083 6.70844 li
322.083 5.77643 li
321.077 5.77643 li
cp
f
317.091 6.70844 mo
318.097 6.70844 li
318.097 5.77643 li
317.091 5.77643 li
cp
f
313.105 6.70844 mo
314.073 6.70844 li
314.073 5.77643 li
313.105 5.77643 li
cp
f
95.0891 223.12 mo
116.064 223.12 li
116.064 6.22443 li
95.0891 6.22443 li
cp
gsave
grestore
/234444568.0 
<<
/ID /234444568.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 8 mo
8 8 li
8 0 li
0 0 li
cp
clp
-.084669 8.0493 mo
8.05553 8.0493 li
8.05553 -.0908995 li
-.084669 -.0908995 li
cp
false sop
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 108.212 290.536 ]ct
[8.1402 0 0 8.1402 -108.297 282.486 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~`;fl<!!!!!!!!#<!!!!!!!!!!!!'t<!!'t<!!!!!!!!!!!!!#<!!!!!`;fl<!6"p<!!!!!!!!!!!6"p<
~>
<~Q2gmb!!!!!!!!"b!!!!!!!!!!!!&;b!!&;b!!!!!!!!!!!!!"b!!!!!Q2gmb!1!Tb!!!!!!!!!!!1!Tb
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/234444568.0 /Pattern get_res
[.502691 0 0 .502691 186.005 333.939 ]make_pattern set_pattern
f
2 vmreclaim
94.6051 223.12 mo
95.5371 223.12 li
95.5371 6.22443 li
94.6051 6.22443 li
cp
false sop
0 0 0 0 cmyk
f
95.0891 223.566 mo
116.064 223.566 li
116.064 222.672 li
95.0891 222.672 li
cp
f
115.58 223.12 mo
116.511 223.12 li
116.511 6.22443 li
115.58 6.22443 li
cp
f
95.0891 6.70844 mo
116.064 6.70844 li
116.064 5.77643 li
95.0891 5.77643 li
cp
f
94.6051 7.15546 mo
95.5371 7.15546 li
95.5371 6.22443 li
94.6051 6.22443 li
cp
.791 .599 0 0 cmyk
f
94.6051 10.8434 mo
95.5371 10.8434 li
95.5371 9.91241 li
94.6051 9.91241 li
cp
f
94.6051 14.5324 mo
95.5371 14.5324 li
95.5371 13.6004 li
94.6051 13.6004 li
cp
f
94.6051 18.2204 mo
95.5371 18.2204 li
95.5371 17.2884 li
94.6051 17.2884 li
cp
f
94.6051 21.9084 mo
95.5371 21.9084 li
95.5371 20.9764 li
94.6051 20.9764 li
cp
f
94.6051 25.5964 mo
95.5371 25.5964 li
95.5371 24.6655 li
94.6051 24.6655 li
cp
f
94.6051 29.2844 mo
95.5371 29.2844 li
95.5371 28.3535 li
94.6051 28.3535 li
cp
f
94.6051 32.9734 mo
95.5371 32.9734 li
95.5371 32.0414 li
94.6051 32.0414 li
cp
f
94.6051 36.6614 mo
95.5371 36.6614 li
95.5371 35.7294 li
94.6051 35.7294 li
cp
f
94.6051 40.3494 mo
95.5371 40.3494 li
95.5371 39.4184 li
94.6051 39.4184 li
cp
f
94.6051 44.1124 mo
95.5371 44.1124 li
95.5371 43.1804 li
94.6051 43.1804 li
cp
f
94.6051 47.8004 mo
95.5371 47.8004 li
95.5371 46.8694 li
94.6051 46.8694 li
cp
f
94.6051 51.4885 mo
95.5371 51.4885 li
95.5371 50.5574 li
94.6051 50.5574 li
cp
f
94.6051 55.1765 mo
95.5371 55.1765 li
95.5371 54.2454 li
94.6051 54.2454 li
cp
f
94.6051 58.8654 mo
95.5371 58.8654 li
95.5371 57.9334 li
94.6051 57.9334 li
cp
f
94.6051 62.5154 mo
95.5371 62.5154 li
95.5371 61.6214 li
94.6051 61.6214 li
cp
f
94.6051 66.2034 mo
95.5371 66.2034 li
95.5371 65.3094 li
94.6051 65.3094 li
cp
f
94.6051 69.8914 mo
95.5371 69.8914 li
95.5371 68.9974 li
94.6051 68.9974 li
cp
f
94.6051 73.5804 mo
95.5371 73.5804 li
95.5371 72.6864 li
94.6051 72.6864 li
cp
f
94.6051 77.2684 mo
95.5371 77.2684 li
95.5371 76.3364 li
94.6051 76.3364 li
cp
f
94.6051 80.9564 mo
95.5371 80.9564 li
95.5371 80.0255 li
94.6051 80.0255 li
cp
f
94.6051 84.6444 mo
95.5371 84.6444 li
95.5371 83.7134 li
94.6051 83.7134 li
cp
f
94.6051 88.4074 mo
95.5371 88.4074 li
95.5371 87.4014 li
94.6051 87.4014 li
cp
f
94.6051 92.0954 mo
95.5371 92.0954 li
95.5371 91.1644 li
94.6051 91.1644 li
cp
f
94.6051 95.7844 mo
95.5371 95.7844 li
95.5371 94.8524 li
94.6051 94.8524 li
cp
f
94.6051 99.4724 mo
95.5371 99.4724 li
95.5371 98.5405 li
94.6051 98.5405 li
cp
f
94.6051 103.16 mo
95.5371 103.16 li
95.5371 102.229 li
94.6051 102.229 li
cp
f
94.6051 106.848 mo
95.5371 106.848 li
95.5371 105.917 li
94.6051 105.917 li
cp
f
94.6051 110.536 mo
95.5371 110.536 li
95.5371 109.605 li
94.6051 109.605 li
cp
f
94.6051 114.225 mo
95.5371 114.225 li
95.5371 113.293 li
94.6051 113.293 li
cp
f
94.6051 117.913 mo
95.5371 117.913 li
95.5371 116.981 li
94.6051 116.981 li
cp
f
94.6051 121.601 mo
95.5371 121.601 li
95.5371 120.67 li
94.6051 120.67 li
cp
f
94.6051 125.289 mo
95.5371 125.289 li
95.5371 124.358 li
94.6051 124.358 li
cp
f
94.6051 128.977 mo
95.5371 128.977 li
95.5371 128.046 li
94.6051 128.046 li
cp
f
94.6051 132.666 mo
95.5371 132.666 li
95.5371 131.734 li
94.6051 131.734 li
cp
f
94.6051 136.428 mo
95.5371 136.428 li
95.5371 135.497 li
94.6051 135.497 li
cp
f
94.6051 140.117 mo
95.5371 140.117 li
95.5371 139.185 li
94.6051 139.185 li
cp
f
94.6051 143.805 mo
95.5371 143.805 li
95.5371 142.873 li
94.6051 142.873 li
cp
f
94.6051 147.493 mo
95.5371 147.493 li
95.5371 146.562 li
94.6051 146.562 li
cp
f
94.6051 151.144 mo
95.5371 151.144 li
95.5371 150.25 li
94.6051 150.25 li
cp
f
94.6051 154.833 mo
95.5371 154.833 li
95.5371 153.938 li
94.6051 153.938 li
cp
f
94.6051 158.521 mo
95.5371 158.521 li
95.5371 157.627 li
94.6051 157.627 li
cp
f
94.6051 162.209 mo
95.5371 162.209 li
95.5371 161.315 li
94.6051 161.315 li
cp
f
94.6051 165.897 mo
95.5371 165.897 li
95.5371 164.966 li
94.6051 164.966 li
cp
f
94.6051 169.585 mo
95.5371 169.585 li
95.5371 168.654 li
94.6051 168.654 li
cp
f
94.6051 173.274 mo
95.5371 173.274 li
95.5371 172.342 li
94.6051 172.342 li
cp
f
94.6051 176.962 mo
95.5371 176.962 li
95.5371 176.03 li
94.6051 176.03 li
cp
f
94.6051 180.724 mo
95.5371 180.724 li
95.5371 179.718 li
94.6051 179.718 li
cp
f
94.6051 184.412 mo
95.5371 184.412 li
95.5371 183.48 li
94.6051 183.48 li
cp
f
94.6051 188.1 mo
95.5371 188.1 li
95.5371 187.169 li
94.6051 187.169 li
cp
f
94.6051 191.788 mo
95.5371 191.788 li
95.5371 190.857 li
94.6051 190.857 li
cp
f
94.6051 195.477 mo
95.5371 195.477 li
95.5371 194.545 li
94.6051 194.545 li
cp
f
94.6051 199.165 mo
95.5371 199.165 li
95.5371 198.233 li
94.6051 198.233 li
cp
f
94.6051 202.853 mo
95.5371 202.853 li
95.5371 201.922 li
94.6051 201.922 li
cp
f
94.6051 206.541 mo
95.5371 206.541 li
95.5371 205.61 li
94.6051 205.61 li
cp
f
94.6051 210.229 mo
95.5371 210.229 li
95.5371 209.298 li
94.6051 209.298 li
cp
f
94.6051 213.918 mo
95.5371 213.918 li
95.5371 212.986 li
94.6051 212.986 li
cp
f
94.6051 217.606 mo
95.5371 217.606 li
95.5371 216.674 li
94.6051 216.674 li
cp
f
94.6051 221.294 mo
95.5371 221.294 li
95.5371 220.363 li
94.6051 220.363 li
cp
f
96.0961 223.566 mo
97.0641 223.566 li
97.0641 222.672 li
96.0961 222.672 li
cp
f
100.082 223.566 mo
101.087 223.566 li
101.087 222.672 li
100.082 222.672 li
cp
f
104.068 223.566 mo
105.074 223.566 li
105.074 222.672 li
104.068 222.672 li
cp
f
157.641 72.2764 mo
160.659 74.1024 li
160.175 74.9224 li
157.157 73.0594 li
0 0 0 0 cmyk
f
160.62 74.1024 mo
164.644 75.9274 li
164.271 76.7844 li
160.248 74.9224 li
f
164.57 75.9274 mo
167.588 76.8214 li
167.327 77.7155 li
164.309 76.7844 li
f
167.7 76.8954 mo
170.643 78.7205 li
170.158 79.5034 li
167.215 77.6774 li
f
107.979 224.014 mo
108.985 224.014 li
108.985 223.082 li
107.979 223.082 li
cp
.791 .599 0 0 cmyk
f
111.966 224.014 mo
112.972 224.014 li
112.972 223.082 li
111.966 223.082 li
cp
f
115.505 223.53 mo
116.436 223.53 li
116.436 222.635 li
115.505 222.635 li
cp
f
115.505 219.841 mo
116.436 219.841 li
116.436 218.947 li
115.505 218.947 li
cp
f
115.505 216.153 mo
116.436 216.153 li
116.436 215.259 li
115.505 215.259 li
cp
f
115.505 212.465 mo
116.436 212.465 li
116.436 211.571 li
115.505 211.571 li
cp
f
115.505 208.814 mo
116.436 208.814 li
116.436 207.882 li
115.505 207.882 li
cp
f
115.505 205.125 mo
116.436 205.125 li
116.436 204.194 li
115.505 204.194 li
cp
f
115.505 201.437 mo
116.436 201.437 li
116.436 200.506 li
115.505 200.506 li
cp
f
115.505 197.749 mo
116.436 197.749 li
116.436 196.818 li
115.505 196.818 li
cp
f
115.505 194.061 mo
116.436 194.061 li
116.436 193.129 li
115.505 193.129 li
cp
f
115.505 190.373 mo
116.436 190.373 li
116.436 189.441 li
115.505 189.441 li
cp
f
115.505 186.684 mo
116.436 186.684 li
116.436 185.753 li
115.505 185.753 li
cp
f
115.505 182.996 mo
116.436 182.996 li
116.436 182.065 li
115.505 182.065 li
cp
f
115.505 179.234 mo
116.436 179.234 li
116.436 178.303 li
115.505 178.303 li
cp
f
115.505 175.546 mo
116.436 175.546 li
116.436 174.615 li
115.505 174.615 li
cp
f
115.505 171.858 mo
116.436 171.858 li
116.436 170.926 li
115.505 170.926 li
cp
f
115.505 168.17 mo
116.436 168.17 li
116.436 167.238 li
115.505 167.238 li
cp
f
115.505 164.481 mo
116.436 164.481 li
116.436 163.55 li
115.505 163.55 li
cp
f
115.505 160.793 mo
116.436 160.793 li
116.436 159.862 li
115.505 159.862 li
cp
f
115.505 157.105 mo
116.436 157.105 li
116.436 156.174 li
115.505 156.174 li
cp
f
115.505 153.417 mo
116.436 153.417 li
116.436 152.486 li
115.505 152.486 li
cp
f
115.505 149.729 mo
116.436 149.729 li
116.436 148.835 li
115.505 148.835 li
cp
f
115.505 146.04 mo
116.436 146.04 li
116.436 145.146 li
115.505 145.146 li
cp
f
115.505 142.352 mo
116.436 142.352 li
116.436 141.458 li
115.505 141.458 li
cp
f
115.505 138.664 mo
116.436 138.664 li
116.436 137.77 li
115.505 137.77 li
cp
f
115.505 134.976 mo
116.436 134.976 li
116.436 134.007 li
115.505 134.007 li
cp
f
115.505 131.213 mo
116.436 131.213 li
116.436 130.319 li
115.505 130.319 li
cp
f
115.505 127.525 mo
116.436 127.525 li
116.436 126.631 li
115.505 126.631 li
cp
f
115.505 123.837 mo
116.436 123.837 li
116.436 122.942 li
115.505 122.942 li
cp
f
115.505 120.148 mo
116.436 120.148 li
116.436 119.254 li
115.505 119.254 li
cp
f
115.505 116.497 mo
116.436 116.497 li
116.436 115.566 li
115.505 115.566 li
cp
f
115.505 112.809 mo
116.436 112.809 li
116.436 111.877 li
115.505 111.877 li
cp
f
115.505 109.121 mo
116.436 109.121 li
116.436 108.189 li
115.505 108.189 li
cp
f
115.505 105.432 mo
116.436 105.432 li
116.436 104.501 li
115.505 104.501 li
cp
f
115.505 101.744 mo
116.436 101.744 li
116.436 100.813 li
115.505 100.813 li
cp
f
115.505 98.0565 mo
116.436 98.0565 li
116.436 97.1254 li
115.505 97.1254 li
cp
f
115.505 94.3684 mo
116.436 94.3684 li
116.436 93.4364 li
115.505 93.4364 li
cp
f
115.505 90.6804 mo
116.436 90.6804 li
116.436 89.7484 li
115.505 89.7484 li
cp
f
115.505 86.9174 mo
116.436 86.9174 li
116.436 85.9854 li
115.505 85.9854 li
cp
f
115.505 83.2294 mo
116.436 83.2294 li
116.436 82.2974 li
115.505 82.2974 li
cp
f
115.505 79.5405 mo
116.436 79.5405 li
116.436 78.6094 li
115.505 78.6094 li
cp
f
115.505 75.8524 mo
116.436 75.8524 li
116.436 74.9214 li
115.505 74.9214 li
cp
f
115.505 72.1644 mo
116.436 72.1644 li
116.436 71.2335 li
115.505 71.2335 li
cp
f
115.505 68.4764 mo
116.436 68.4764 li
116.436 67.5444 li
115.505 67.5444 li
cp
f
115.505 64.7884 mo
116.436 64.7884 li
116.436 63.8564 li
115.505 63.8564 li
cp
f
115.505 61.0994 mo
116.436 61.0994 li
116.436 60.1684 li
115.505 60.1684 li
cp
f
115.505 57.4114 mo
116.436 57.4114 li
116.436 56.5174 li
115.505 56.5174 li
cp
f
115.505 53.7234 mo
116.436 53.7234 li
116.436 52.8294 li
115.505 52.8294 li
cp
f
115.505 50.0355 mo
116.436 50.0355 li
116.436 49.1414 li
115.505 49.1414 li
cp
f
115.505 46.3474 mo
116.436 46.3474 li
116.436 45.4525 li
115.505 45.4525 li
cp
f
115.505 42.6964 mo
116.436 42.6964 li
116.436 41.6904 li
115.505 41.6904 li
cp
f
115.505 38.8964 mo
116.436 38.8964 li
116.436 38.0024 li
115.505 38.0024 li
cp
f
115.505 35.2084 mo
116.436 35.2084 li
116.436 34.3144 li
115.505 34.3144 li
cp
f
115.505 31.5204 mo
116.436 31.5204 li
116.436 30.6264 li
115.505 30.6264 li
cp
f
115.505 27.8694 mo
116.436 27.8694 li
116.436 26.9374 li
115.505 26.9374 li
cp
f
115.505 24.1804 mo
116.436 24.1804 li
116.436 23.2495 li
115.505 23.2495 li
cp
f
115.505 20.4924 mo
116.436 20.4924 li
116.436 19.5615 li
115.505 19.5615 li
cp
f
115.505 16.8044 mo
116.436 16.8044 li
116.436 15.8734 li
115.505 15.8734 li
cp
f
115.505 13.1164 mo
116.436 13.1164 li
116.436 12.1844 li
115.505 12.1844 li
cp
f
115.505 9.42841 mo
116.436 9.42841 li
116.436 8.4964 li
115.505 8.4964 li
cp
f
113.978 7.11841 mo
114.983 7.11841 li
114.983 6.18744 li
113.978 6.18744 li
cp
f
109.992 7.11841 mo
110.96 7.11841 li
110.96 6.18744 li
109.992 6.18744 li
cp
f
105.968 7.11841 mo
106.973 7.11841 li
106.973 6.18744 li
105.968 6.18744 li
cp
f
101.982 7.11841 mo
102.987 7.11841 li
102.987 6.18744 li
101.982 6.18744 li
cp
f
97.9951 7.11841 mo
99.0011 7.11841 li
99.0011 6.18744 li
97.9951 6.18744 li
cp
f
95.3871 222.822 mo
96.3931 220.997 li
95.6101 220.55 li
94.6051 222.413 li
0 0 0 0 cmyk
f
96.4301 220.921 mo
97.4371 218.165 li
96.5801 217.867 li
95.5741 220.623 li
f
97.4001 218.239 mo
98.4061 216.376 li
97.5861 215.93 li
96.5801 217.792 li
f
98.4431 216.339 mo
99.4111 213.545 li
98.5541 213.247 li
97.5491 216.004 li
f
99.4111 213.62 mo
100.38 211.794 li
99.5971 211.347 li
98.5911 213.172 li
f
100.416 211.72 mo
101.423 208.963 li
100.566 208.627 li
99.5601 211.422 li
f
101.386 209 mo
102.392 207.175 li
101.572 206.727 li
100.566 208.59 li
f
101.534 206.952 mo
102.466 206.952 li
102.466 204.195 li
101.534 204.195 li
cp
f
102.391 204.418 mo
103.397 202.555 li
102.577 202.109 li
101.571 203.971 li
f
102.54 202.332 mo
103.435 202.332 li
103.435 195.887 li
102.54 195.887 li
cp
f
103.397 196.11 mo
104.403 194.285 li
103.584 193.838 li
102.577 195.663 li
f
103.509 194.061 mo
104.44 194.061 li
104.44 184.821 li
103.509 184.821 li
cp
f
104.403 185.045 mo
105.372 183.22 li
104.59 182.773 li
103.584 184.636 li
f
104.515 182.996 mo
105.446 182.996 li
105.446 178.302 li
104.515 178.302 li
cp
f
105.409 178.451 mo
106.415 175.694 li
105.558 175.397 li
104.552 178.153 li
f
105.52 175.546 mo
106.452 175.546 li
106.452 173.683 li
105.52 173.683 li
cp
f
106.378 173.906 mo
107.384 172.081 li
106.564 171.634 li
105.558 173.459 li
f
106.527 171.858 mo
107.458 171.858 li
107.458 167.238 li
106.527 167.238 li
cp
f
107.383 167.461 mo
108.39 165.636 li
107.57 165.189 li
106.563 167.014 li
f
107.533 165.413 mo
108.427 165.413 li
108.427 159.862 li
107.533 159.862 li
cp
f
108.278 160.197 mo
109.284 159.303 li
108.651 158.631 li
107.682 159.526 li
f
108.501 158.967 mo
109.433 158.967 li
109.433 152.485 li
108.501 152.485 li
cp
f
109.395 152.709 mo
110.363 150.883 li
109.581 150.436 li
108.575 152.299 li
f
109.507 150.659 mo
110.439 150.659 li
110.439 145.146 li
109.507 145.146 li
cp
f
110.364 145.332 mo
111.37 143.507 li
110.55 143.06 li
109.582 144.923 li
f
110.513 143.283 mo
111.444 143.283 li
111.444 134.975 li
110.513 134.975 li
cp
f
111.369 135.199 mo
112.376 133.262 li
111.556 132.852 li
110.55 134.79 li
f
111.519 133.076 mo
112.45 133.076 li
112.45 111.878 li
111.519 111.878 li
cp
f
112.413 112.027 mo
113.419 109.27 li
112.524 108.934 li
111.556 111.729 li
f
112.525 109.121 mo
113.419 109.121 li
113.419 65.7194 li
112.525 65.7194 li
cp
f
113.269 66.0554 mo
114.276 65.1234 li
113.642 64.4534 li
112.674 65.3844 li
f
113.493 64.7884 mo
114.425 64.7884 li
114.425 62.0314 li
113.493 62.0314 li
cp
f
113.978 62.4785 mo
114.983 62.4785 li
114.983 61.5844 li
113.978 61.5844 li
cp
f
114.499 62.0314 mo
115.43 62.0314 li
115.43 58.3434 li
114.499 58.3434 li
cp
f
114.984 58.7905 mo
115.952 58.7905 li
115.952 57.8964 li
114.984 57.8964 li
cp
f
115.505 58.3434 mo
116.436 58.3434 li
116.436 56.5174 li
115.505 56.5174 li
cp
f
116.287 56.8524 mo
117.293 55.9214 li
116.66 55.2504 li
115.653 56.1454 li
f
117.293 55.9224 mo
118.262 54.9904 li
117.666 54.3204 li
116.66 55.2514 li
f
118.262 54.9905 mo
119.268 54.0594 li
118.634 53.3885 li
117.666 54.3205 li
f
119.268 54.0594 mo
120.274 53.1655 li
119.64 52.4935 li
118.634 53.3884 li
f
119.975 53.2774 mo
120.944 53.2774 li
120.944 52.3454 li
119.975 52.3454 li
cp
f
120.497 53.7234 mo
121.429 53.7234 li
121.429 52.8294 li
120.497 52.8294 li
cp
f
120.945 54.2084 mo
122.062 54.2084 li
122.062 53.2774 li
120.945 53.2774 li
cp
f
122.36 53.3884 mo
123.366 54.3204 li
122.733 54.9904 li
121.727 54.0594 li
f
123.254 54.2454 mo
125.229 55.1765 li
124.856 55.9964 li
122.844 55.0654 li
f
125.34 55.2514 mo
126.346 56.1454 li
125.713 56.8534 li
124.744 55.9224 li
f
126.346 56.1454 mo
127.353 57.0765 li
126.719 57.7474 li
125.713 56.8524 li
f
127.24 57.0024 mo
129.215 57.9335 li
128.842 58.7524 li
126.831 57.8585 li
f
129.215 57.9335 mo
131.226 58.8655 li
130.854 59.6855 li
128.842 58.7535 li
f
131.04 59.7214 mo
132.046 59.7214 li
132.046 58.7905 li
131.04 58.7905 li
cp
f
132.232 58.8654 mo
134.207 59.7584 li
133.834 60.6164 li
131.823 59.6854 li
f
134.355 59.8334 mo
135.324 60.7645 li
134.728 61.4354 li
133.722 60.5404 li
f
135.325 60.7644 mo
136.331 61.6964 li
135.697 62.3664 li
134.729 61.4354 li
f
136.218 61.6214 mo
138.23 62.5154 li
137.82 63.3724 li
135.846 62.4414 li
f
138.342 62.6284 mo
139.349 63.5214 li
138.715 64.2304 li
137.709 63.2984 li
f
139.013 64.3414 mo
140.019 64.3414 li
140.019 63.4105 li
139.013 63.4105 li
cp
f
139.572 64.7884 mo
140.466 64.7884 li
140.466 63.8564 li
139.572 63.8564 li
cp
f
140.018 65.2734 mo
141.024 65.2734 li
141.024 64.3414 li
140.018 64.3414 li
cp
f
141.322 64.4534 mo
142.329 65.3845 li
141.695 66.0554 li
140.689 65.1234 li
f
142.217 65.3104 mo
144.192 66.2034 li
143.819 67.0614 li
141.807 66.1294 li
f
144.191 66.2034 mo
146.202 67.1354 li
145.83 67.9915 li
143.818 67.0604 li
f
146.203 67.1354 mo
148.215 68.0665 li
147.805 68.8864 li
145.83 67.9915 li
f
148.14 68.0294 mo
151.121 68.9614 li
150.86 69.8554 li
147.879 68.9234 li
f
151.232 68.9985 mo
154.25 70.8615 li
153.766 71.6435 li
150.748 69.7805 li
f
154.25 70.8615 mo
157.231 72.6865 li
156.746 73.4694 li
153.766 71.6434 li
f
95.4621 223.12 mo
96.4681 221.295 li
97.4371 218.5 li
98.4431 216.675 li
99.4481 213.918 li
100.454 212.055 li
101.46 209.299 li
102.466 207.474 li
102.466 204.679 li
103.434 202.854 li
103.434 196.409 li
104.44 194.546 li
104.44 185.344 li
105.447 183.481 li
105.447 178.825 li
106.452 176.03 li
106.452 174.205 li
107.458 172.342 li
107.458 167.76 li
108.464 165.897 li
108.464 160.384 li
109.433 159.452 li
109.433 153.007 li
110.438 151.144 li
110.438 145.631 li
111.444 143.805 li
111.444 135.497 li
112.45 133.56 li
112.45 112.362 li
113.456 109.606 li
113.456 66.2044 li
114.462 65.3104 li
114.462 62.5164 li
115.43 62.5164 li
115.43 58.8654 li
116.436 58.8654 li
116.436 57.0024 li
117.442 56.0714 li
118.448 55.1765 li
119.454 54.2454 li
120.423 53.3134 li
121.429 53.3134 li
121.429 54.2454 li
122.546 54.2454 li
123.515 55.1765 li
125.526 56.0714 li
127.538 57.9334 li
129.513 58.8654 li
131.524 59.7595 li
132.53 59.7595 li
134.542 60.6904 li
135.511 61.6214 li
136.516 62.5164 li
138.528 63.4474 li
139.534 64.3784 li
140.54 64.3784 li
140.54 65.3104 li
141.509 65.3104 li
142.515 66.2044 li
144.526 67.1364 li
146.501 68.0664 li
148.512 68.9984 li
151.53 69.8924 li
154.51 71.7545 li
157.528 73.5814 li
160.509 75.4434 li
164.495 77.2694 li
167.512 78.2004 li
170.492 80.0255 li
173.51 81.8884 li
176.602 83.7144 li
179.583 84.6454 li
183.606 86.5074 li
185.581 87.4024 li
186.587 88.3334 li
187.592 89.3394 li
188.598 89.3394 li
190.573 90.2704 li
191.578 91.1654 li
194.596 92.0954 li
196.571 93.0274 li
198.582 93.9584 li
201.6 95.7844 li
204.581 96.7154 li
206.592 97.6474 li
209.573 99.4724 li
211.584 100.403 li
213.559 101.335 li
216.577 102.229 li
217.582 103.16 li
219.557 104.091 li
220.563 104.091 li
221.569 104.986 li
222.574 105.918 li
223.581 105.918 li
225.555 106.848 li
227.678 107.78 li
229.653 109.606 li
231.664 110.537 li
234.645 112.362 li
236.657 113.294 li
239.637 115.156 li
242.654 116.982 li
244.667 117.913 li
247.647 119.739 li
249.659 120.67 li
251.633 122.496 li
255.657 124.359 li
256.663 124.359 li
257.631 125.289 li
258.637 126.184 li
260.649 126.184 li
261.654 127.115 li
264.635 128.047 li
266.646 129.872 li
269.627 130.803 li
272.645 131.735 li
275.625 133.56 li
278.717 135.497 li
281.735 136.428 li
284.715 138.255 li
287.733 139.185 li
290.713 140.117 li
292.725 141.943 li
295.705 142.873 li
296.711 143.805 li
298.722 143.805 li
299.729 144.699 li
300.697 145.631 li
302.709 147.493 li
303.715 148.388 li
305.726 150.25 li
306.695 151.144 li
308.707 153.007 li
309.713 153.007 li
310.719 153.938 li
310.719 154.833 li
311.725 154.833 li
311.725 155.764 li
312.693 155.764 li
313.699 156.696 li
313.699 158.521 li
314.705 159.452 li
314.705 161.314 li
315.711 162.209 li
315.711 164.966 li
316.717 165.897 li
316.717 168.654 li
317.722 169.585 li
317.722 186.275 li
317.722 184.413 li
317.722 188.101 li
318.692 189.032 li
318.692 190.858 li
319.697 192.721 li
320.703 194.546 li
320.703 197.303 li
321.708 199.166 li
321.708 201.922 li
322.715 202.854 li
322.715 208.367 li
323.721 208.367 li
323.721 211.124 li
324.689 211.124 li
324.689 212.987 li
325.695 212.987 li
325.695 216.675 li
326.701 216.675 li
326.701 218.5 li
327.707 218.5 li
327.707 219.432 li
329.718 221.295 li
330.799 222.189 li
330.799 223.12 li
331.805 223.12 li
95.4621 223.12 li
gsave
grestore
/234444784.0 
<<
/ID /234444784.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 8 mo
8 8 li
8 0 li
0 0 li
cp
clp
-.10454 8.1273 mo
8.03566 8.1273 li
8.03566 -.0128994 li
-.10454 -.0128994 li
cp
false sop
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 108.212 290.536 ]ct
[8.1402 0 0 8.1402 -108.317 282.408 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!&lhq!&lhq2ZPc:2ZPc:2`C^q2`C^q2ZPc:2ZPc:!&lhq!&lhq2ZPc:2ZPc:2`C^q2`C^q2ZPc:2ZPc:
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
<~!"onW!"onW&c`OE&c`OE&eY0W&eY0W&c`OE&c`OE!"onW!"onW&c`OE&c`OE&eY0W&eY0W&c`OE&c`OE
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/234444784.0 /Pattern get_res
[.502691 0 0 .502691 186.375 332.76 ]make_pattern set_pattern
ef
2 vmreclaim
170.643 78.7214 mo
173.66 80.5844 li
173.176 81.3665 li
170.158 79.5034 li
false sop
0 0 0 0 cmyk
f
173.66 80.5834 mo
176.753 82.4094 li
176.269 83.1924 li
173.176 81.3665 li
f
176.641 82.3724 mo
179.659 83.3035 li
179.398 84.1605 li
176.38 83.2285 li
f
179.733 83.3035 mo
181.744 84.2355 li
181.335 85.0555 li
179.323 84.1605 li
f
181.744 84.2354 mo
183.644 85.1664 li
183.271 85.9864 li
181.335 85.0554 li
f
183.645 85.1664 mo
185.656 86.0604 li
185.284 86.9185 li
183.272 85.9865 li
f
185.768 86.1354 mo
186.774 87.0665 li
186.178 87.7374 li
185.172 86.8424 li
f
186.811 87.1035 mo
187.817 88.1094 li
187.147 88.7424 li
186.141 87.7374 li
f
187.482 88.8914 mo
188.487 88.8914 li
188.487 87.9604 li
187.482 87.9604 li
cp
f
188.674 87.9984 mo
190.686 88.9294 li
190.313 89.7494 li
188.302 88.8544 li
f
190.797 89.0045 mo
191.803 89.9355 li
191.207 90.6064 li
190.201 89.6744 li
f
191.654 89.8234 mo
194.56 90.7545 li
194.299 91.6115 li
191.356 90.7174 li
f
194.635 90.7545 mo
196.646 91.6865 li
196.237 92.5065 li
194.262 91.6115 li
f
196.646 91.6865 mo
198.658 92.6175 li
198.248 93.4374 li
196.237 92.5065 li
f
198.696 92.6174 mo
201.713 94.4804 li
201.229 95.2625 li
198.211 93.3994 li
f
201.601 94.4434 mo
204.619 95.3364 li
204.358 96.2314 li
201.34 95.2994 li
f
204.693 95.3745 mo
206.63 96.3065 li
206.221 97.1254 li
204.284 96.1945 li
f
206.668 96.3065 mo
209.686 98.1685 li
209.201 98.9515 li
206.184 97.0884 li
f
209.611 98.1314 mo
211.622 99.0624 li
211.25 99.8824 li
209.238 98.9884 li
f
211.622 99.0624 mo
213.634 99.9944 li
213.261 100.814 li
211.25 99.8824 li
f
213.597 99.9564 mo
216.615 100.887 li
216.317 101.744 li
213.299 100.85 li
f
216.764 100.962 mo
217.77 101.894 li
217.174 102.564 li
216.168 101.67 li
f
217.658 101.819 mo
219.595 102.75 li
219.185 103.57 li
217.285 102.639 li
f
219.409 103.607 mo
220.415 103.607 li
220.415 102.713 li
219.409 102.713 li
cp
f
220.713 102.825 mo
221.719 103.757 li
221.086 104.427 li
220.08 103.496 li
f
221.719 103.756 mo
222.725 104.649 li
222.091 105.358 li
221.085 104.426 li
f
222.427 105.47 mo
223.433 105.47 li
223.433 104.539 li
222.427 104.539 li
cp
f
223.618 104.576 mo
225.63 105.507 li
225.22 106.327 li
223.246 105.432 li
f
225.631 105.507 mo
227.717 106.439 li
227.344 107.259 li
225.258 106.364 li
f
227.829 106.513 mo
229.84 108.339 li
229.207 109.047 li
227.233 107.184 li
f
229.729 108.264 mo
231.665 109.195 li
231.256 110.015 li
229.319 109.121 li
f
231.703 109.232 mo
234.721 111.057 li
234.237 111.84 li
231.219 110.014 li
f
234.683 111.021 mo
236.695 111.952 li
236.285 112.809 li
234.274 111.877 li
f
236.732 111.99 mo
239.75 113.815 li
239.266 114.598 li
236.248 112.772 li
f
239.75 113.815 mo
242.768 115.678 li
242.284 116.46 li
239.266 114.597 li
f
242.73 115.64 mo
244.63 116.572 li
244.257 117.392 li
242.32 116.46 li
f
244.705 116.572 mo
247.685 118.435 li
247.238 119.217 li
244.22 117.392 li
f
247.648 118.397 mo
249.659 119.328 li
249.286 120.148 li
247.275 119.254 li
f
249.772 119.403 mo
251.783 121.266 li
251.187 121.937 li
249.176 120.074 li
f
251.671 121.154 mo
253.683 122.085 li
253.31 122.942 li
251.299 122.01 li
f
253.683 122.085 mo
255.62 123.017 li
255.21 123.837 li
253.31 122.942 li
f
255.434 123.911 mo
256.44 123.911 li
256.44 122.98 li
255.434 122.98 li
cp
f
256.738 123.091 mo
257.745 124.023 li
257.111 124.693 li
256.105 123.762 li
f
257.744 124.023 mo
258.75 124.954 li
258.116 125.625 li
257.11 124.693 li
f
258.452 125.736 mo
260.464 125.736 li
260.464 124.805 li
258.452 124.805 li
cp
f
260.761 124.954 mo
261.768 125.848 li
261.134 126.556 li
260.128 125.625 li
f
261.581 125.773 mo
264.599 126.667 li
264.338 127.562 li
261.32 126.63 li
f
264.785 126.78 mo
266.797 128.605 li
266.164 129.313 li
264.152 127.45 li
f
266.611 128.53 mo
269.554 129.462 li
269.256 130.318 li
266.35 129.387 li
f
269.554 129.425 mo
272.571 130.356 li
272.31 131.25 li
269.293 130.318 li
f
272.683 130.431 mo
275.701 132.256 li
275.216 133.039 li
272.199 131.213 li
f
275.701 132.256 mo
278.793 134.193 li
278.309 134.976 li
275.216 133.038 li
f
278.681 134.119 mo
281.624 135.051 li
281.326 135.944 li
278.42 135.013 li
f
281.698 135.087 mo
284.716 136.95 li
284.232 137.733 li
281.251 135.907 li
f
284.642 136.913 mo
287.623 137.806 li
287.362 138.701 li
284.344 137.769 li
f
287.622 137.807 mo
290.64 138.739 li
290.379 139.632 li
287.361 138.701 li
f
290.826 138.85 mo
292.764 140.676 li
292.13 141.346 li
290.192 139.521 li
f
292.576 140.601 mo
295.594 141.495 li
295.333 142.389 li
292.315 141.458 li
f
295.78 141.607 mo
296.787 142.539 li
296.153 143.209 li
295.147 142.277 li
f
296.451 143.321 mo
298.463 143.321 li
298.463 142.389 li
296.451 142.389 li
cp
f
298.798 142.539 mo
299.804 143.432 li
299.171 144.141 li
298.165 143.209 li
f
299.804 143.432 mo
300.811 144.364 li
300.177 145.034 li
299.171 144.14 li
f
300.811 144.364 mo
301.817 145.295 li
301.183 145.966 li
300.177 145.034 li
f
301.816 145.295 mo
302.822 146.227 li
302.188 146.897 li
301.182 145.966 li
f
302.822 146.227 mo
303.828 147.12 li
303.195 147.829 li
302.188 146.897 li
f
303.827 147.157 mo
304.759 148.089 li
304.088 148.722 li
303.194 147.791 li
f
304.722 148.052 mo
305.728 148.983 li
305.131 149.654 li
304.126 148.722 li
f
305.728 148.983 mo
306.734 149.915 li
306.138 150.585 li
305.132 149.654 li
f
306.733 149.915 mo
307.74 150.809 li
307.143 151.517 li
306.138 150.585 li
f
307.74 150.809 mo
308.746 151.74 li
308.149 152.411 li
307.144 151.516 li
f
308.447 152.56 mo
309.453 152.56 li
309.453 151.629 li
308.447 151.629 li
cp
f
309.751 151.74 mo
310.757 152.672 li
310.161 153.342 li
309.155 152.411 li
f
310.012 153.938 mo
310.906 153.938 li
310.906 153.006 li
310.012 153.006 li
cp
f
310.459 154.385 mo
311.465 154.385 li
311.465 153.454 li
310.459 153.454 li
cp
f
311.017 154.833 mo
311.912 154.833 li
311.912 153.938 li
311.017 153.938 li
cp
f
311.465 155.317 mo
312.471 155.317 li
312.471 154.385 li
311.465 154.385 li
cp
f
312.769 154.497 mo
313.775 155.428 li
313.178 156.099 li
312.173 155.204 li
f
313.03 157.626 mo
313.924 157.626 li
313.924 155.763 li
313.03 155.763 li
cp
f
313.775 157.254 mo
314.781 158.185 li
314.185 158.855 li
313.179 157.961 li
f
314.035 160.383 mo
314.929 160.383 li
314.929 158.52 li
314.035 158.52 li
cp
f
314.78 160.048 mo
315.787 160.942 li
315.19 161.65 li
314.185 160.719 li
f
315.041 164.071 mo
315.935 164.071 li
315.935 161.314 li
315.041 161.314 li
cp
f
315.823 163.736 mo
316.717 164.668 li
316.084 165.301 li
315.153 164.407 li
f
315.935 167.759 mo
316.866 167.759 li
316.866 164.965 li
315.935 164.965 li
cp
f
316.718 167.424 mo
317.724 168.318 li
317.091 169.026 li
316.084 168.095 li
f
316.941 185.343 mo
317.873 185.343 li
317.873 168.654 li
316.941 168.654 li
cp
f
316.941 185.343 mo
317.873 185.343 li
317.873 183.481 li
316.941 183.481 li
cp
f
316.941 187.17 mo
317.873 187.17 li
317.873 183.481 li
316.941 183.481 li
cp
f
317.723 186.834 mo
318.73 187.765 li
318.096 188.436 li
317.09 187.504 li
f
317.947 189.963 mo
318.879 189.963 li
318.879 188.1 li
317.947 188.1 li
cp
f
318.804 189.74 mo
319.81 191.565 li
319.027 192.012 li
318.022 190.149 li
f
319.81 191.565 mo
320.816 193.428 li
320.033 193.838 li
319.027 192.012 li
f
319.959 196.408 mo
320.89 196.408 li
320.89 193.651 li
319.959 193.651 li
cp
f
320.816 196.185 mo
321.822 198.01 li
321.039 198.457 li
320.034 196.632 li
f
320.965 200.991 mo
321.897 200.991 li
321.897 198.234 li
320.965 198.234 li
cp
f
321.747 200.655 mo
322.753 201.587 li
322.12 202.257 li
321.114 201.363 li
f
321.97 207.473 mo
322.902 207.473 li
322.902 201.922 li
321.97 201.922 li
cp
f
322.455 207.92 mo
323.46 207.92 li
323.46 206.988 li
322.455 206.988 li
cp
f
322.977 210.229 mo
323.908 210.229 li
323.908 207.472 li
322.977 207.472 li
cp
f
323.461 210.677 mo
324.429 210.677 li
324.429 209.745 li
323.461 209.745 li
cp
f
323.983 212.055 mo
324.914 212.055 li
324.914 210.23 li
323.983 210.23 li
cp
f
324.429 212.54 mo
325.435 212.54 li
325.435 211.608 li
324.429 211.608 li
cp
f
324.988 215.744 mo
325.92 215.744 li
325.92 212.055 li
324.988 212.055 li
cp
f
325.435 216.228 mo
326.441 216.228 li
326.441 215.296 li
325.435 215.296 li
cp
f
325.994 217.606 mo
326.926 217.606 li
326.926 215.743 li
325.994 215.743 li
cp
f
326.442 218.053 mo
327.447 218.053 li
327.447 217.122 li
326.442 217.122 li
cp
f
327 218.5 mo
327.931 218.5 li
327.931 217.606 li
327 217.606 li
cp
f
327.783 218.202 mo
328.714 219.096 li
328.044 219.767 li
327.149 218.836 li
f
328.714 219.096 mo
329.72 220.028 li
329.087 220.698 li
328.08 219.767 li
f
329.683 219.991 mo
330.763 220.922 li
330.167 221.63 li
329.087 220.698 li
f
330.017 222.189 mo
330.949 222.189 li
330.949 221.294 li
330.017 221.294 li
cp
f
330.465 222.673 mo
331.47 222.673 li
331.47 221.741 li
330.465 221.741 li
cp
f
330.465 222.673 mo
331.47 222.673 li
331.47 221.741 li
330.465 221.741 li
cp
f
32.5021 224.052 mo
38.4621 224.052 li
38.4621 222.189 li
32.5021 222.189 li
cp
0 0 0 1 cmyk
f
32.5021 169.585 mo
38.4621 169.585 li
38.4621 167.76 li
32.5021 167.76 li
cp
f
32.5021 116.051 mo
38.4621 116.051 li
38.4621 114.225 li
32.5021 114.225 li
cp
f
32.5021 61.6214 mo
38.4621 61.6214 li
38.4621 59.7595 li
32.5021 59.7595 li
cp
f
32.5021 7.15546 mo
38.4621 7.15546 li
38.4621 5.33038 li
32.5021 5.33038 li
cp
f
32.5021 207.473 mo
35.4821 207.473 li
35.4821 205.61 li
32.5021 205.61 li
cp
f
32.5021 198.234 mo
35.4821 198.234 li
35.4821 196.409 li
32.5021 196.409 li
cp
f
32.5021 191.788 mo
35.4821 191.788 li
35.4821 189.963 li
32.5021 189.963 li
cp
f
32.5021 186.275 mo
35.4821 186.275 li
35.4821 184.412 li
32.5021 184.412 li
cp
f
32.5021 181.655 mo
35.4821 181.655 li
35.4821 179.793 li
32.5021 179.793 li
cp
f
32.5021 177.892 mo
35.4821 177.892 li
35.4821 176.03 li
32.5021 176.03 li
cp
f
32.5021 175.136 mo
35.4821 175.136 li
35.4821 173.273 li
32.5021 173.273 li
cp
f
32.5021 172.342 mo
35.4821 172.342 li
35.4821 170.517 li
32.5021 170.517 li
cp
f
32.5021 153.938 mo
35.4821 153.938 li
35.4821 152.075 li
32.5021 152.075 li
cp
f
32.5021 143.805 mo
35.4821 143.805 li
35.4821 141.942 li
32.5021 141.942 li
cp
f
32.5021 137.322 mo
35.4821 137.322 li
35.4821 135.497 li
32.5021 135.497 li
cp
f
32.5021 131.734 mo
35.4821 131.734 li
35.4821 129.871 li
32.5021 129.871 li
cp
f
32.5021 128.046 mo
35.4821 128.046 li
35.4821 126.183 li
32.5021 126.183 li
cp
f
32.5021 124.358 mo
35.4821 124.358 li
35.4821 122.495 li
32.5021 122.495 li
cp
f
32.5021 120.669 mo
35.4821 120.669 li
35.4821 118.844 li
32.5021 118.844 li
cp
f
32.5021 117.913 mo
35.4821 117.913 li
35.4821 116.05 li
32.5021 116.05 li
cp
f
32.5021 99.4724 mo
35.4821 99.4724 li
35.4821 97.6464 li
32.5021 97.6464 li
cp
f
32.5021 90.2704 mo
35.4821 90.2704 li
35.4821 88.4074 li
32.5021 88.4074 li
cp
f
32.5021 82.8194 mo
35.4821 82.8194 li
35.4821 80.9564 li
32.5021 80.9564 li
cp
f
32.5021 77.2684 mo
35.4821 77.2684 li
35.4821 75.4424 li
32.5021 75.4424 li
cp
f
32.5021 73.5804 mo
35.4821 73.5804 li
35.4821 71.7545 li
32.5021 71.7545 li
cp
f
32.5021 69.8914 mo
35.4821 69.8914 li
35.4821 68.0664 li
32.5021 68.0664 li
cp
f
32.5021 66.2034 mo
35.4821 66.2034 li
35.4821 64.3784 li
32.5021 64.3784 li
cp
f
32.5021 63.4474 mo
35.4821 63.4474 li
35.4821 61.6214 li
32.5021 61.6214 li
cp
f
32.5021 45.0064 mo
35.4821 45.0064 li
35.4821 43.1804 li
32.5021 43.1804 li
cp
f
32.5021 35.7294 mo
35.4821 35.7294 li
35.4821 33.8664 li
32.5021 33.8664 li
cp
f
32.5021 28.3535 mo
35.4821 28.3535 li
35.4821 26.5274 li
32.5021 26.5274 li
cp
f
32.5021 23.7335 mo
35.4821 23.7335 li
35.4821 21.9084 li
32.5021 21.9084 li
cp
f
32.5021 19.1514 mo
35.4821 19.1514 li
35.4821 17.2884 li
32.5021 17.2884 li
cp
f
32.5021 15.4634 mo
35.4821 15.4634 li
35.4821 13.6004 li
32.5021 13.6004 li
cp
f
32.5021 12.7064 mo
35.4821 12.7064 li
35.4821 10.8444 li
32.5021 10.8444 li
cp
f
32.5021 9.91241 mo
35.4821 9.91241 li
35.4821 8.08643 li
32.5021 8.08643 li
cp
f
382.509 224.052 mo
388.544 224.052 li
388.544 222.189 li
382.509 222.189 li
cp
f
382.509 169.585 mo
388.544 169.585 li
388.544 167.76 li
382.509 167.76 li
cp
f
382.509 116.051 mo
388.544 116.051 li
388.544 114.225 li
382.509 114.225 li
cp
f
382.509 61.6214 mo
388.544 61.6214 li
388.544 59.7595 li
382.509 59.7595 li
cp
f
382.509 7.15546 mo
388.544 7.15546 li
388.544 5.33038 li
382.509 5.33038 li
cp
f
385.527 207.473 mo
388.544 207.473 li
388.544 205.61 li
385.527 205.61 li
cp
f
385.527 198.234 mo
388.544 198.234 li
388.544 196.409 li
385.527 196.409 li
cp
f
385.527 191.788 mo
388.544 191.788 li
388.544 189.963 li
385.527 189.963 li
cp
f
385.527 186.275 mo
388.544 186.275 li
388.544 184.412 li
385.527 184.412 li
cp
f
385.527 181.655 mo
388.544 181.655 li
388.544 179.793 li
385.527 179.793 li
cp
f
385.527 177.892 mo
388.544 177.892 li
388.544 176.03 li
385.527 176.03 li
cp
f
385.527 175.136 mo
388.544 175.136 li
388.544 173.273 li
385.527 173.273 li
cp
f
385.527 172.342 mo
388.544 172.342 li
388.544 170.517 li
385.527 170.517 li
cp
f
385.527 153.938 mo
388.544 153.938 li
388.544 152.075 li
385.527 152.075 li
cp
f
385.527 143.805 mo
388.544 143.805 li
388.544 141.942 li
385.527 141.942 li
cp
f
385.527 137.322 mo
388.544 137.322 li
388.544 135.497 li
385.527 135.497 li
cp
f
385.527 131.734 mo
388.544 131.734 li
388.544 129.871 li
385.527 129.871 li
cp
f
385.527 128.046 mo
388.544 128.046 li
388.544 126.183 li
385.527 126.183 li
cp
f
385.527 124.358 mo
388.544 124.358 li
388.544 122.495 li
385.527 122.495 li
cp
f
385.527 120.669 mo
388.544 120.669 li
388.544 118.844 li
385.527 118.844 li
cp
f
385.527 117.913 mo
388.544 117.913 li
388.544 116.05 li
385.527 116.05 li
cp
f
385.527 99.4724 mo
388.544 99.4724 li
388.544 97.6464 li
385.527 97.6464 li
cp
f
385.527 90.2704 mo
388.544 90.2704 li
388.544 88.4074 li
385.527 88.4074 li
cp
f
385.527 82.8194 mo
388.544 82.8194 li
388.544 80.9564 li
385.527 80.9564 li
cp
f
385.527 77.2684 mo
388.544 77.2684 li
388.544 75.4424 li
385.527 75.4424 li
cp
f
385.527 73.5804 mo
388.544 73.5804 li
388.544 71.7545 li
385.527 71.7545 li
cp
f
385.527 69.8914 mo
388.544 69.8914 li
388.544 68.0664 li
385.527 68.0664 li
cp
f
385.527 66.2034 mo
388.544 66.2034 li
388.544 64.3784 li
385.527 64.3784 li
cp
f
385.527 63.4474 mo
388.544 63.4474 li
388.544 61.6214 li
385.527 61.6214 li
cp
f
385.527 45.0064 mo
388.544 45.0064 li
388.544 43.1804 li
385.527 43.1804 li
cp
f
385.527 35.7294 mo
388.544 35.7294 li
388.544 33.8664 li
385.527 33.8664 li
cp
f
385.527 28.3535 mo
388.544 28.3535 li
388.544 26.5274 li
385.527 26.5274 li
cp
f
385.527 23.7335 mo
388.544 23.7335 li
388.544 21.9084 li
385.527 21.9084 li
cp
f
385.527 19.1514 mo
388.544 19.1514 li
388.544 17.2884 li
385.527 17.2884 li
cp
f
385.527 15.4634 mo
388.544 15.4634 li
388.544 13.6004 li
385.527 13.6004 li
cp
f
385.527 12.7064 mo
388.544 12.7064 li
388.544 10.8444 li
385.527 10.8444 li
cp
f
385.527 9.91241 mo
388.544 9.91241 li
388.544 8.08643 li
385.527 8.08643 li
cp
f
31.5701 223.12 mo
33.4331 223.12 li
33.4331 217.606 li
31.5701 217.606 li
cp
f
209.536 223.12 mo
211.399 223.12 li
211.399 217.606 li
209.536 217.606 li
cp
f
387.613 223.12 mo
389.438 223.12 li
389.438 217.606 li
387.613 217.606 li
cp
f
85.5901 223.12 mo
87.4151 223.12 li
87.4151 220.363 li
85.5901 220.363 li
cp
f
116.548 223.12 mo
118.374 223.12 li
118.374 220.363 li
116.548 220.363 li
cp
f
138.566 223.12 mo
140.428 223.12 li
140.428 220.363 li
138.566 220.363 li
cp
f
155.554 223.12 mo
157.38 223.12 li
157.38 220.363 li
155.554 220.363 li
cp
f
169.524 223.12 mo
171.387 223.12 li
171.387 220.363 li
169.524 220.363 li
cp
f
181.596 223.12 mo
183.458 223.12 li
183.458 220.363 li
181.596 220.363 li
cp
f
192.586 223.12 mo
194.411 223.12 li
194.411 220.363 li
192.586 220.363 li
cp
f
201.564 223.12 mo
203.427 223.12 li
203.427 220.363 li
201.564 220.363 li
cp
f
263.556 223.12 mo
265.381 223.12 li
265.381 220.363 li
263.556 220.363 li
cp
f
294.589 223.12 mo
296.414 223.12 li
296.414 220.363 li
294.589 220.363 li
cp
f
316.569 223.12 mo
318.394 223.12 li
318.394 220.363 li
316.569 220.363 li
cp
f
335.457 223.12 mo
335.457 220.363 li
333.632 220.363 li
333.594 223.12 li
f
347.602 223.12 mo
349.427 223.12 li
349.427 220.363 li
347.602 220.363 li
cp
f
359.561 223.12 mo
361.423 223.12 li
361.423 220.363 li
359.561 220.363 li
cp
f
370.551 223.12 mo
372.376 223.12 li
372.376 220.363 li
370.551 220.363 li
cp
f
379.529 223.12 mo
381.392 223.12 li
381.392 220.363 li
379.529 220.363 li
cp
f
31.5701 11.7755 mo
33.4331 11.7755 li
33.4331 6.22443 li
31.5701 6.22443 li
cp
f
209.536 11.7755 mo
211.399 11.7755 li
211.399 6.22443 li
209.536 6.22443 li
cp
f
387.613 11.7755 mo
389.438 11.7755 li
389.438 6.22443 li
387.613 6.22443 li
cp
f
85.5901 9.01843 mo
87.4151 9.01843 li
87.4151 6.22443 li
85.5901 6.22443 li
cp
f
116.548 9.01843 mo
118.374 9.01843 li
118.374 6.22443 li
116.548 6.22443 li
cp
f
138.566 9.01843 mo
140.428 9.01843 li
140.428 6.22443 li
138.566 6.22443 li
cp
f
155.554 9.01843 mo
157.38 9.01843 li
157.38 6.22443 li
155.554 6.22443 li
cp
f
169.524 9.01843 mo
171.387 9.01843 li
171.387 6.22443 li
169.524 6.22443 li
cp
f
181.596 9.01843 mo
183.458 9.01843 li
183.458 6.22443 li
181.596 6.22443 li
cp
f
192.586 9.01843 mo
194.411 9.01843 li
194.411 6.22443 li
192.586 6.22443 li
cp
f
201.564 9.01843 mo
203.427 9.01843 li
203.427 6.22443 li
201.564 6.22443 li
cp
f
263.556 9.01843 mo
265.381 9.01843 li
265.381 6.22443 li
263.556 6.22443 li
cp
f
294.589 9.01843 mo
296.414 9.01843 li
296.414 6.22443 li
294.589 6.22443 li
cp
f
316.569 9.01843 mo
318.394 9.01843 li
318.394 6.22443 li
316.569 6.22443 li
cp
f
335.457 6.22443 mo
335.457 9.01843 li
333.632 9.01843 li
333.594 6.22443 li
f
347.602 9.01843 mo
349.427 9.01843 li
349.427 6.22443 li
347.602 6.22443 li
cp
f
359.561 9.01843 mo
361.423 9.01843 li
361.423 6.22443 li
359.561 6.22443 li
cp
f
370.551 9.01843 mo
372.376 9.01843 li
372.376 6.22443 li
370.551 6.22443 li
cp
f
379.529 9.01843 mo
381.392 9.01843 li
381.392 6.22443 li
379.529 6.22443 li
cp
f
31.5701 223.12 mo
33.4331 223.12 li
33.4331 6.22443 li
31.5701 6.22443 li
cp
f
387.613 223.12 mo
389.438 223.12 li
389.438 6.22443 li
387.613 6.22443 li
cp
f
32.5021 7.15546 mo
388.544 7.15546 li
388.544 5.33038 li
32.5021 5.33038 li
cp
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FAAAAA+ArialMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (FAAAAA+ArialMT)
%%Title: (FAAAAA+ArialMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /FAAAAA+ArialMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-665 -325 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4503 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 29 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A93
6AA182F5809A9> |
40 <001C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411
B66E9361DDE78FC667AB91EF9824> |
81 <001C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A28
5C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCD
ADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5
203A8015DD09B7CE> |
72 <001C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449
B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C
8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0E
EA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37
295284C077711C162623860AACA404F650F8D516970257> |
85 <001C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857
894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619
ADD420F549AB7C795751D32E8EE6> |
74 <001C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817
A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D
559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0
C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667
DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FB
D88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF
575C72F67F4BEBB98F8AFA57505EC9> |
92 <001C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140A
AA18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F58
36B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA7
348AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |
3 <001C60D8A8C9B854D00D> |
83 <001C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B9
6470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F43633
0DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F5
56CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672
C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |
56 <001C60D8A8C9B6079F6D3F1E4545C3E1CC9D8EF54571065F01BE5A50957B
D2D8AD04D30C23B37CA98B969ECB5CA0D9A7C563636CB33377BB3DEB53D45DD0
F3E333CD69EA3B53D63C91B303CFDF29F59C20776D4DC576C9C080B76AB60A21
673EFC1F645BF33D33929C60> |
76 <001C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B
171C8A80AB> |
87 <001C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D
065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349
CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB512
7F5C42C88FB43C> |
58 <001C60D8A8C9B5D6EF420A3AC101C9354A948DB23A64166EB3D55EEB13F0
DE3A88231C2286900994060E46C1096C7ABFBA281AAEB86123AF398A1FE8A551
414253B8F3844EF59084BCE1B4D5AF071FD672A0C8C15E821130EADB430FA7E5
25278C31C213B6FF1A25> |
68 <001C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA
7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883
CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DB
BA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405
FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5
CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D
53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307
B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D1
77B5D88A> |
89 <001C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D916
2B37724F74F272B140D258652D102C2EAC46833C73F9> |
49 <001C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106
F3AC927984C1E464F121F968> |
88 <001C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F
517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA
8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793
990906DA8D7F8ACFF6D70790F06B02> |
80 <001C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519A
D5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD
99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176A
FB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D5
5C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE3
7B> |
69 <001C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D
06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A
81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648C
F626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CA
DA1EAAF79B76AA2B52CCF0307B360E6D> |
44 <001C60D8A8C9B854D0F463D3892D665712D6B7D6A81E> |
79 <001C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |
53 <001C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4
F632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F
2BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA4260
9FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D29
5257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3
F0B222> |
54 <001C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E55
8E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051
BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB
391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B
13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A9
6A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8
FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE
450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |
82 <001C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A
987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C84
6C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD
79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC09
9F518C54BB58C51D6FB6D0C8> |
167 <001C60D8A8C9B79676EB2855AC18618BBBC2646A350A87BD46E03D5E3D8
7CA6009F6A41A0D771D6D01FFE76A37A3E94C19DD91C7D75449C3B2B4353087C
0281CFD87999FB3C68DB28FAB0749AFA68E40FC4B622C339E7E6C0840C46236B
10070542347ACE67F4158176CCB3D245FE8540E80EFA34B5FBEDEF49A49B70EB
443BD2C0E40893464DD167D5F23A2EAB2DFC85B3780CD1CCDFA642B184A42D31
16FAF1F3014EC6F13CF87E87D29A15DCAB12D0C2F2474639EA7BE9A2114C3529
2750FCC04BF5DF90FE570C42CDF85D54ACF65AA8987345C6EA3EA43D18089F7D
EEC> |
16 <001C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |
24 <001C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BC
D9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB6
3F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200
B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC49
372EF96DD9EB13A793559C13CFDFE477> |
18 <001C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |
22 <001C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE
548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C
10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698
FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14
A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C
0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF
6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /FAAAAA+ArialMT-Identity-H /Identity-H 0 [/FAAAAA+ArialMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DYIULC+ArialMT /FAAAAA+ArialMT-Identity-H findfont ct_VMDictPut
DYIULC+ArialMT [0 -12.7409 -12.7409 0 0 0 ]msf
19.1273 199.389 mo
(\000\(\000Q\000H\000U\000J\000\\\000\003\000S\000H\000U\000\003\0008\000Q\000L\000W\000\003\000:\000D\000Y\000H\000\003\0001\000X\000P\000E\000H\000U)
[-8.49438 -7.08008 -7.08002 -4.23877 -7.08002 -6.36658 -3.61835 -7.08008 -7.08002 -4.23877 -3.65527 -9.19507 
-7.08002 -2.82465 -3.53802 -3.53809 -11.5535 -7.08008 -6.36652 -7.08008 -3.53809 -9.19501 -7.08008 -10.6092 
-7.08002 -7.08008 0 ]ysh
DYIULC+ArialMT [12.7409 0 0 -12.7409 0 0 ]msf
166.843 244.095 mo
(\000:\000D\000Y\000H\000\003\0001\000X\000P\000E\000H\000U)
[11.5548 7.08005 6.36655 7.08005 3.53809 9.19504 7.08005 10.6092 7.08005 7.08005 0 ]xsh
DYIULC+ArialMT [11.3998 0 0 -11.3998 0 0 ]msf
209.425 80.0252 mo
(\000,\000Q\000H\000U\000W\000L\000D\000O\000\003\0005\000D\000Q\000J\000H)
[3.16565 6.33481 6.33481 3.79257 3.16568 2.52728 6.33481 2.52728 3.2467 8.22717 6.33481 6.33481 
6.33481 0 ]xsh
209.425 93.0324 mo
(\0006\000O\000R\000S\000H\000\003\000\247\000\020\000\030\000\022\000\026)
[7.60028 2.52728 6.33481 6.33478 6.33484 3.28534 9.46863 3.80179 6.33481 3.16565 0 ]xsh
113.791 74.6235 mo
113.754 82.2605 li
113.68 89.8235 li
113.568 97.2745 li
113.382 104.576 li
113.158 111.766 li
112.86 118.844 li
112.711 122.308 li
112.562 125.773 li
112.376 129.164 li
112.189 132.516 li
111.966 135.832 li
111.78 139.11 li
111.556 142.352 li
111.296 145.518 li
111.072 148.648 li
110.811 151.739 li
110.55 154.795 li
110.289 157.775 li
109.992 160.718 li
109.694 163.624 li
109.396 166.456 li
109.097 169.25 li
108.762 171.969 li
108.464 174.651 li
108.129 177.259 li
107.756 179.831 li
107.421 182.326 li
107.049 184.748 li
106.676 187.133 li
106.303 189.441 li
105.931 191.677 li
105.521 193.875 li
105.111 195.998 li
104.701 198.047 li
104.292 200.022 li
103.881 201.921 li
103.434 203.747 li
103.025 205.535 li
102.577 207.212 li
102.131 208.85 li
101.647 210.379 li
101.199 211.831 li
100.715 213.247 li
100.231 214.551 li
99.7841 215.781 li
99.2621 216.935 li
98.7781 218.015 li
98.2561 219.021 li
97.7341 219.915 li
97.2131 220.735 li
96.6911 221.48 li
96.1321 222.151 li
95.5741 222.746 li
94.9781 223.232 li
94.3441 223.641 li
94.3071 223.678 94.2701 223.678 94.2331 223.716 cv
93.7111 223.939 li
93.6741 223.977 93.5991 223.977 93.5621 224.014 cv
93.0411 224.162 li
92.9661 224.162 92.9281 224.162 92.8551 224.162 cv
92.3331 224.237 li
92.1461 222.225 li
92.6681 222.188 li
92.4821 222.225 li
93.0411 222.076 li
92.8921 222.114 li
93.4141 221.89 li
93.2641 221.964 li
93.7111 221.667 li
94.1211 221.331 li
94.6051 220.884 li
95.0521 220.326 li
95.5371 219.655 li
96.0211 218.91 li
96.4681 218.09 li
96.9521 217.159 li
97.4371 216.154 li
97.8841 215.035 li
98.3681 213.881 li
98.8151 212.577 li
99.2621 211.237 li
99.7461 209.82 li
100.193 208.292 li
100.604 206.691 li
101.05 205.051 li
101.497 203.3 li
101.907 201.474 li
102.317 199.612 li
102.727 197.637 li
103.136 195.626 li
103.547 193.503 li
103.919 191.341 li
104.329 189.143 li
104.701 186.834 li
105.074 184.487 li
105.409 182.029 li
105.781 179.569 li
106.117 176.999 li
106.452 174.427 li
106.788 171.745 li
107.085 169.026 li
107.421 166.269 li
107.719 163.438 li
107.98 160.531 li
108.278 157.626 li
108.538 154.608 li
108.799 151.591 li
109.06 148.498 li
109.321 145.369 li
109.544 142.203 li
109.767 138.961 li
109.954 135.72 li
110.178 132.405 li
110.364 129.052 li
110.55 125.662 li
110.699 122.234 li
110.848 118.77 li
111.146 111.728 li
111.369 104.538 li
111.556 97.2365 li
111.668 89.7855 li
111.742 82.2605 li
111.78 74.5865 li
.298 1 1 .409 cmyk
f
111.594 78.2744 mo
111.63 77.0454 li
111.63 75.8154 li
111.705 74.5864 li
111.743 73.3934 li
111.855 72.2024 li
112.078 69.8914 li
112.227 68.8114 li
112.376 67.6944 li
112.525 66.6514 li
112.711 65.6074 li
112.935 64.6394 li
113.121 63.6714 li
113.382 62.7394 li
113.605 61.8084 li
113.866 60.9514 li
114.127 60.1314 li
114.425 59.3494 li
114.723 58.6044 li
115.021 57.8964 li
115.356 57.2254 li
115.691 56.5924 li
116.064 56.0334 li
116.4 55.5114 li
116.809 55.0274 li
117.182 54.5804 li
117.629 54.1704 li
117.852 53.9844 li
118.076 53.8354 li
118.336 53.6864 li
118.56 53.5374 li
118.821 53.4254 li
119.082 53.3504 li
119.306 53.2774 li
119.604 53.2024 li
119.864 53.1644 li
120.162 53.1644 li
120.236 55.1764 li
119.901 55.1764 li
119.752 55.2134 li
119.64 55.2884 li
119.492 55.3254 li
119.379 55.4004 li
119.231 55.4744 li
119.082 55.5864 li
118.97 55.6614 li
118.672 55.9224 li
118.374 56.2564 li
118.076 56.6294 li
117.777 57.0764 li
117.443 57.5614 li
117.145 58.1194 li
116.884 58.7154 li
116.586 59.3494 li
116.325 60.0194 li
116.064 60.7654 li
115.804 61.5474 li
115.543 62.3674 li
115.319 63.1864 li
115.095 64.0804 li
114.909 65.0124 li
114.686 65.9804 li
114.537 66.9864 li
114.35 67.9924 li
114.202 69.0354 li
114.052 70.1164 li
113.941 71.2334 li
113.866 72.3504 li
113.754 73.5064 li
113.717 74.6614 li
113.643 75.8524 li
113.605 77.0824 li
113.605 78.3114 li
f
106.303 230.981 mo
91.9231 246.963 li
92.4071 247.41 li
106.825 231.428 li
cp
106.564 231.204 mo
107.272 235.414 li
109.246 228.224 li
102.279 230.944 li
0 0 0 1 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FAAAAA+ArialMT 2 GetGlyphDirectory
70 <001C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0ED
CE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9
F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF3414
8C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36
548FE63FC8465B1B685766E782F0> |
32 <001C60D8A8C9B7F374869C4D81D9B128A787F701C3A1164A793E363981F7
468DA1474C45> |
!
end
end end
%ADOEndSubsetFont
DYIULC+ArialMT [11.3998 0 0 -11.3998 0 0 ]msf
48.2614 258.624 mo
(\000,\000Q\000W\000H\000J\000U\000D\000O\000\020\0006\000F\000D\000O\000H)
[3.16566 6.33481 3.16566 6.33481 6.33481 3.79256 6.33481 2.52728 3.79257 7.60028 5.69641 6.33481 
2.52728 0 ]xsh
47.1785 271.517 mo
(\000:\000D\000Y\000H\000\003\0001\000X\000P\000E\000H\000U)
[10.3624 6.33481 5.69641 6.33481 3.16566 8.22719 6.33481 9.49246 6.33481 6.33481 0 ]xsh
67.7779 284.478 mo
(\000 \000\003)
[6.66896 0 ]xsh
%ADOBeginSubsetFont: GAAAAA+TimesNewRomanPSMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (GAAAAA+TimesNewRomanPSMT)
%%Title: (GAAAAA+TimesNewRomanPSMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /GAAAAA+TimesNewRomanPSMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-568 -307 2046 1040} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4685 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB
222483BD74F8B> |
21 <001C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |
18 <001C60D8A8C9B854D0F4B64A43F243E3CCF111DDD476299F3B748356> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /GAAAAA+TimesNewRomanPSMT-Identity-H /Identity-H 0 [/GAAAAA+TimesNewRomanPSMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DYIULD+TimesNewRomanPSMT /GAAAAA+TimesNewRomanPSMT-Identity-H findfont ct_VMDictPut
DYIULD+TimesNewRomanPSMT [11.3998 0 0 -11.3998 0 0 ]msf
77.5817 284.478 mo
(\000\025)sh
%ADOBeginSubsetFont: HAAAAA+SymbolMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HAAAAA+SymbolMT)
%%Title: (HAAAAA+SymbolMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HAAAAA+SymbolMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -220 1113 1005} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 192 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235BDD70
699E096A6312D> |
83 <001C60D8A8C9B79676F42F820A3F8801223C323147FDF00642AC0811E8CC
2333B60A7AD290761572EF97F88A56267CE624582C15300E18A410F61C740FAF
C15D82C9CB97A7C55F988C59B664C97CE2E9DC4D1A7D65A4F19CBD6E24F368CE
66FD639F3F9EFE86850544DED9B16A5CB21982A87577C2EDE11C73371D704BEC
683E2C4BE9EAA0DB9B078F541CB54AD043FCB3E8A9AE562ABDE0C2E05111A9AA
0CA240EC721EA711C1B7CC0AAD717706A41508871630FC150218108567> |
75 <001C60D8A8C9B7C054198736C3507F7FD83350A2403E5C05164D069DE8E4
362C00AF1F626FBFD45306ECD870391902340514F0DB65D595976C94024B9CE5
FC65B9481096F71B9CAC7EACB13A3FBFD5445BF04E06F8D20B23DD00E9AF81C6
B53C3A50DAA977CD5DB8251EC7B6C74E3C85E2E5CA3188B4C9CF2B204D1FE482
AB356A73D3084E98C6066AFBE0653A2499D624267396A067F81B9C0347C69F73
05A98A75439F78CC184C57E4BA7C4024AE63327B4C11329F8B77> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HAAAAA+SymbolMT-Identity-H /Identity-H 0 [/HAAAAA+SymbolMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DYIULE+SymbolMT /HAAAAA+SymbolMT-Identity-H findfont ct_VMDictPut
DYIULE+SymbolMT [11.3998 0 0 -11.3998 0 0 ]msf
83.2816 284.478 mo
(\000S)sh
DYIULD+TimesNewRomanPSMT [11.3998 0 0 -11.3998 0 0 ]msf
89.5401 284.478 mo
(\000\022)sh
%ADOBeginSubsetFont: IAAAAA+TimesNewRomanPS-ItalicMT Initial
ct_T42Dict begin
-0.496 -0.305 1.332 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /IAAAAA+TimesNewRomanPS-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32f728b780000000cc000000606376
742008fab09e0000012c0000079c6670676d4d5f5868000008c800000634
676c7966fac13c8e000092d400006a4668656164e77b958500000efc0000
0036686865610e31116000000f3400000024686d747898a212d600000f58
000037e86c6f636105b39b7000004740000037ec6d617870139404140000
7f2c000000206e616d6526a06ea300007f4c0000086b70726570ab1cb91f
000087b800000b1b67646972000000000000000000000000000303370190
00050008059a0533002c0125059a0533004c03a000660212010502020503
050405090304e0000eff4000785b0000000100000000544d432000010020
fffc058efe460133072101bb400001bfdff700000371054c000000200008
058e0000054c001f054c001c037100180000ffe10000ffe80000ffe8fe4a
fffc056b0023fe68ffe2033e000000950000009500000000000000000025
00a8008e010b007d00820045003200a400ca006b0070005100af003c00f0
01d700470004002500770029004000fd00160161004601370029008e0017
ffca0025005bffe902e600020099008100f2007500d6006300c60006009a
01330024003800cc003dff67001305d8003600860095ffdb0007043400a5
00d8ffdcfffe004800a200d8013c01530380053e0057007a007c008c0117
012a0138017c0026003c007800bd00c0021009b5000c004d004e00540058
006700b4040100020005005000af01d5034300240058008b013501c0ffac
002000250026002d00410136022bffba001e002a0034003b003f00850094
009800d7012e013d033104b900170040006100b9010e0116012201bfff9c
001f001f004d005c0086008c009600aa00cb00cb011f0154022f036005a9
fee8000e006f007c007d008b00d500f1010a0157017802b803adfe3fff6a
ffb3ffc4001f0037003f0044004a0078007d009700a200a700b600c000c1
00c600d8011d0150019701ee04740532fd81fed1fee0ff16fff1000f002d
00550068006e007f00890095009e00c200da00e400f801040108011101c2
023002da030e049e0517ff00ff8700000020002f00410057007800870088
008800b900c200c5012001280133017401d6020e020f026c027e02ab02ec
038903b103e304e7ff43ffa8ffc3ffdcffe9000700230023002600520077
007d0081008f009900ac00ae00b500b800c800ea00f000f40135016a018b
01b101b501f7021402ad02d504fc05d805f0ff9dfffc000b00240025002c
0030003000330040004700490057006e009a00bd00c900cd00dc00fa00fa
011b0139017e0187018a018e0195019601df01f6028602cf02de039603a9
03b003c804010432046a058b05e006510761fe96fe9aff4bff8700130025
00340038003e004a0065006b0073007a009c00a200b200b700bf00f000f7
00fb0104011301200124013b01520178017c0181018f01a001d90248026a
026f02700301031d032303270388041f04ab04d104da057a058bfe26fe59
ff2e00010002000a003b003b004700580058005f0066006b007a007a008b
009900af00bc00c000c700cc00e900f200f500fb00fb0102010a010b0115
0121012701450145015501570158015e01610168017d01a301ab01da01ee
021002180222028f029402a302d202e703710393039b03b303d303fe04ff
050b05320532054b0559058b05ab05f2065506890742076207a708ccfd2a
fdc8fddefe0cfe15fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffaf
ffc00000000000030094001d001f002000200027002e0048004b004c005e
005f006b0071007c008a00900091009100a700af00b300b400c400c600d1
00d200de00df00df00e600e800ea00eb00f200f500f500fc010201180123
013101330137015c016201660170017a017a017a018201980199019b01b0
01bf01c001ca01d301d701d801e001e001f601f701f802120213022f0237
02440247024f0252026302650270027f0298029b02a602b702ba02c502cf
02d602d702e502fe031c031d03450348035d035e03710379038103a103b7
03d403d503d803e103f803fe0404041f042104230425043a0467048304e0
0528054b0564056a059f059f05c2060b066a06af06b306cb06e807060728
0748075007a607b207ff009500af00920096000000000000000000000000
017e01a80129025b0212020301c302b4019301cd02b204ed020e0159017a
0300022d042c00c8004d00e602890325013e0378011b00f1018d00490203
007c000e029d02470024000000000052004400330038005405d3041501a7
000002860168005000cf0002004b0024008800ba0025ffd800110091ff6b
00b5011700260065ff9900490080014b01c000f40167027102ea04fc0310
017c01e103d9015501e601ee0434019606cb005c022b0099003d009f0016
0039002700de00790120022e005a00990388009400210019002a046c05e8
000001f203b200aa0296028902b4ffc9020000ec0005005a0447010004e0
0000052a001f01eb00ae016800ca02d3028901b5040601a1014f014b011c
0308005e00c70024029d006503750104028002f304d800d90239025a032c
01f204310303005002e50283005901eb010800ac019602f8012100950180
004400e501eb02e5007400f301ff02fd038f026801c801c70116022b0142
033000fe02e101620200002400ee05170108023700660006010201e602aa
0366019b00d305c203dc044d03b6000401be013702fc03200244014d0338
ffed002506f8030dfed5ff43004402ffff92040bfdef0155017100d9ffc4
032d0461044afbb5fbcf02170192036d0558fff2fe7d0583023e006605e9
073d00790243002500cf00fd00af002a01ef021a0026001f0025003a0000
01170490fbfb0251001d02f001f50078018f005f00240044005400bf00af
006701a8002600050006003f009800fa02ab00c2004d0375004a00b600c4
01bf017c006f00130263000c006801520002012e0104001f001f009a0000
00f1046900790080005000bd056b00ab0080001e05a5fe4000ce006e0056
004800db018b00b3004802390458005300820082002203d703f104704042
5554403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524
232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706
0504030201002c4523466020b02660b004262348482d2c452346236120b0
2661b004262348482d2c45234660b0206120b04660b004262348482d2c45
23462361b0206020b02661b02061b004262348482d2c45234660b0406120
b06660b004262348482d2c4523462361b0406020b02661b04061b0042623
48482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d
44235920b0ed51582320b04d44235920b09051582320b00d44235921212d
2c20204518684420b001602045b04676688a4560442d2c01b10b0a432343
650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b102
17453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0
004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a
8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b017
7ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b017
7ae41b038a45186920b01723448a8a8720b0a05158b0112bb0172344b017
7ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c01
182f2d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b802ee23701020b802ee4520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a
8a462320468a608a61b8ff8062232010238ab903b003b08a70456020b000
5058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b1230188
51b1400188535a58b910000020885458b202010243604259b12401885158
b920000040885458b2020202436042b12401885458b2022002436042004b
014b5258b2020802436042591bb940000080885458b202040243604259b9
4000008063b80100885458b202080243604259b94000010063b802008854
58b202100243604259b12601885158b94000020063b80400885458b20240
0243604259b94000040063b80800885458b202800243604259b128018851
58b94000080063b81000885458ba00020100000243604259595959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00010000
0007000061519e9b5f0f3cf50819080000000000a31fb8bd00000000d67a
920dfc05fd8c0aaa0830000000090001000100000000000100000721fe45
00570ab9fc05fa500aaa001800070000000000000000000000000dfa0639
011c00000000020000000200000002aa009a035c01260400009304000056
06aa00900639006201b6010d02aa008c02aaff2104000122056600be0200
ffeb02aa0036020000450239ffbb0400007a0400007d0400002004000044
040000400400004904000081040000e80400004e0400003b02aa007a02aa
002405660096056600c805660096040000c6075c006104e3ff9c04e3ffd1
0556008a05c7ffc304e3ffd204e3ffce05c7008e05c7ffca02aaffc0038d
ffba0556ffc90473ffbe06aaffbd0556ffc705c7007a04e3ffcf05c70061
04e3ffd10400000e0473008f05c700da04e3010006aa00f904e3ff770473
00b80473fffc031d000d023900da031dff33036000380400ffef02aa0168
0400003004000036038d003804000027038d00400239fe9b0400ffc90400
0029023900580239fea0038d00140239004f05c70023040000270400003c
0400ff1e0400002d031d002a031dffed023900540400003c038d002c0556
0023038dffb8038dff5c031dffc70333008d023300ed0333ff6704540014
04e3ff9c04e3ff9e0556008a04e3ffd20556ffc705c7007a05c700da0400
00300400003004000030040000300400003004000030038d003c038d0040
038d0040038d0040038d0040023900580239005802390058023900580400
00270400003c0400003c0400003c0400003c0400003c0400003c0400003c
0400003c0400003c040000dd033300d404000072040000310400fffc02cd
00ad042f006c0400feb70614008b0614008b07d700be02aa019902aa010c
04640019071dff9405c7004805b40035046400350464005e0464005a0400
fff2049cffd203f4004005b4002b069600920464004802310000023500b2
027b00e40625005b0556002d0400000504000049031d0090056600960464
0054040000020464001e04e5ffc40400005404000025071d010a04e3ff9c
04e3ff9c05c7007a078d002d055600360400ffee071dffed0473018a0473
017502aa01b202aa01910464003503f4002f038dff60047300b70156feab
0400001102aa007402aa002e0400fe7d0400fe7d0400ffe3020000d202aa
00410473001e0800007f04e3ff9c04e3ffd204e3ff9c04e3ffd204e3ffd2
02aaffc002aaffc002aaffc002aaffc005c7007a05c7007a05c7007a05c7
00da05c700da05c700da0239005802aa00fe02aa00c602aa00f602aa0126
02aa01c102aa017d02aaffdb02aa012f02aa001102aa01520473ffc60239
00330400000e031dfff00473fffc031dffc7023300ed05c7ffd004000037
047300b7038dff6004e3ffcf0400ff1e056600960566017a026600a30266
006f02660084060000a1060000a1060000820400ffce05c7008e0400ffc9
02aaffc00400000e031dffed0556008a038d003c0556008a038d003c0400
0027040000c502ab01ee04e3ff9c0400003004e3ff9c0400003005c7ffc3
04de002705c7ffd004e3ffd2038d004004e3ffd2038d00400473ffbe0239
004f0473ffbe02e9004e0473ffbe029500490556ffc7040000270556ffc7
0400002705c7007a0400003c04e3ffd1031d002a04e3ffd1031d002a0400
000e031dffed0473008f0239ffbd0473008f02e9005605c700da0400003c
05c700da0400003c0473fffc031dffc70473fffc031dffc7048dffb605c7
007d0617009d0433003c03b800300327001603f2003602dd0033046d004a
0400ffef0495009a0285001407eb002f0800004f040000990800004f0400
00990800004f040000980400009807d5016a05c700c0056600c604cd0099
0566009804d5022204d5010505abffe904ed01c005ab027e05abffe905ab
027e05abffe905ab027e05abffe905abffe905abffe905abffe905abffe9
05ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905ab02d605ab006605abffea05d5ffff04d500920800
000007eb013007eb012007eb013007eb012004d500b204d5008004d5002a
082b0198086b01b807550010060000f40600006f0440003a0540003704c0
003f0415004004000025060000550600ffc30401004b049e007301c0010d
0355012606ab006c0355001e04d5009202d6008302d6008304d500b202d6
007004e3ff9c040000300556008a038d003a0556008a038d003a04e3ffd2
038d004004e3ffd2038d004004e3ffd2038d004005c7008e0400ffc905c7
008e0400ffc905c7008e0400ffc805c7ffca0400002905c7ffca04000029
02aaffc00239005402aaffc00239005802aaffc00239005402aaffc00239
ffc6038dffba0239fea00556ffc9038d0014038d00140473ffbe0239ffb6
0556ffc7040000270592ffc003db002705c7007a0400003c05c7007a0400
003c04e3ffd1031dff980400000e031dffed04730093023a003105c700da
0400003c05c700da0400003c05c700da0400003c05c700da0400003c06aa
00f905560023047300b8038dff5e0239fe9d04e3ffa504000030071dff94
0556002d05c700480400000502aa014d06aa00f90556002306aa00f90556
002306aa00f905560023047300b8038dff5e02aa01bd02aa00b704000031
04cd005a060000a10600008206000084060000e802aa004c02aaffdb02aa
019902aa00b404e3ff9c056f005d065600590337004d05c7007a0548005e
05cf00200239005404e3ff9c04e3ffd104b2ffa704e3ffd20473fffc05c7
ffca02aaffc00556ffc904d5ff8f06aaffbd0556ffc7051dfff205c7007a
05c7ffc504e3ffcf04c1ffb90473008f047300b804e3ff7705a0011305c9
001b02aaffc0047300bc0433003c0327001603f8003a0239005503ac0035
03fcff7703270031033d002f03f8003a03ee005a0239005503d7001f0377
ffc00404ff94038d002c036d00250400003c03d7ff6f033f003f03ac0035
0385ff4004f8008f05a600480239005503ac00350400003c03ac00350595
003f04e3ffce066000c1048dffb6055a008e0400000e02aaffc002aaffc0
038dffba076bffbb075effc2066400c60550ffc7056200e105c7ffcd04e3
ff9c04b8ffc604e3ffd1048dffb60517ff2d04e3ffd20754ff9003f6fffe
05c7ffcc05c7ffcc0550ffc7056bffb906aaffbd05c7ffca05c7007a05c7
ffc504e3ffcf0556008a0473008f056200e1066f009504e3ff7705c7ffcc
058300e70858ffe40858ffe40568007606faffc604b8ffc6053d001e0842
ffbe0542ff9104000030040600490379003f031f0002040c003d038d0040
0771ffff031fffce0400003c0400003c03be0025037dffa5051bffa403f8
00290400003c040000270400ff1e038d003805c70023038dff5c05ae003c
038dffb80400003c03d10056060a0040060a00400427003c056b006603a4
00660387000f05a4002a03b8ff84038d003c03d500280304ffaa037d0036
031dffed02390058023900550239fea0056fffa605b2002a0400002903be
0025038dff5c040000250385ffc30285005608000041078bffa804020032
0000fefb0000ff3a0000ff380000ff380000ff3a0000ff3a0000ff3a0000
ff380000ff38000000770000ff3a000000f70000feb502f700c00000fff3
02aa005f0000037a0000003602aa007a03d3ffd5037fffc50291ff7e0357
00bd03ceffd1021c00bf0208002903c4fffa03d3005901ef00c6038000c1
0349ffc7037000c703c8ffe403c3ffde020b004a023cff9d03b1006b0383
ffcd0372004f036effd5039000c50397fff0038eff8f039500bc04f500c2
03cbff85043800bf040b00c603de00c60186009b02f1009b064c0010021c
00bf038000c10380009c0370000a0370000a0383ffd104f500c204f500c2
04f500c204f500c203d3ffd503d3ffd503d3ffd5037fffc50291ff7e0357
00bd03ceffd1021c00670225000303d3005901ef0067038000c10349ffc7
037000c703c3ffde023cff9d03b1006b0372004f036effd50397fff0038e
ff8f039500bc04f500c203cbff85021c00bf037fffc50349ffc7036effd5
0448004a0000ffdc0000ff250000ffdc0000fe510400005a0800000005c7
007a0445003c060800da045d003c0000ff1a0000fdf20000fdb40000ff91
0000fef60000fee40000ff780000ff8a0000fe880000fefb0000fea20000
fe6e0000fdf4000000350000001f0000fe47041a0078060000a10600006f
0000ff2b0000fe6c0000fe8a0000fdd20000ff1e0000fe380000fdcd0000
fd190000fce70000fd710000fd3f0000fcf90000fccd0000fc050000fc05
0000fc550000fc0f0000ff190000ffa20000fe310000fc550000fcef0000
fd9c0000fdda0000fca10000fd530000fcef0000fcb30000fd0d0000fcb3
0000fdba0000fd940000fd7e0000fd300239005804e3ff9c0400003004e3
ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c04000030
04e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400
003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ffd2
038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3
ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2038d0040
02aaffc00239005802aaffc00239003105c7007a0400003c05c7007a0400
003c05c7007a0400003c05c7007a0400003c05c7007a0400003c05c7007a
0400003c05c7007a0400003c05c7007a0445003c05c7007a0445003c05c7
007a0445003c05c7007a0445003c05c7007a0445003c05c700da0400003c
05c700da0400003c060800da045d003c060800da045d003c060800da045d
003c060800da045d003c060800da045d003c047300b8038dff5c047300b8
038dff5c047300b8038dff5c04e3ff9c0400003002aaffc00239005805c7
007a0400003c05c700da0400003c05c700da0400003c05c700da0400003c
05c700da0400003c05c700da0400003c000000be000000be000000be0000
00be048dffb6031f00020754ff900771ffff0550ffc703be00250550ffc7
03be002505c7ffca03f80029047300b804000003047300b80400ffdf04e3
ff77038dffb8058300e703d100560583ffca04000029058f007a038d001b
05c7007a0400003c01ef00b70000ffd50336ffea03de006204000036054b
003904b8ffc60400003604b8ffc604000036055600330556008a038d0038
05c7ffd0063d003904b800260400002703b8000804e3ffe603f6003b04e3
fecd05c7008e05a30100060e00290239004f02aaffc00556ffc9038d0014
0239004a0377ffc0064500870556fecd03f8003a05c7007a0766008e0568
003c054d00390400ff1e04e3ffcf04000013031d001604c1ffb90222004f
0239ff5e0473008f02390054047300cd05c9007a056f00da049d00dd0416
ff5c0473fffc031dffc70453ff5d0453ffdd038dffad038dfff004000020
03b200490311ffb30296ffed042eff1e019a00a1023f00a101fe000a02aa
009a0a3affc308e4ffc3071d00270800ffbe06acffbe0472004f08e6ffc7
078fffc706390027038d001b04e3ff9c04000030000000f304e3ff9c0400
0030071dff940556002d05c7008e0400ff6d05c7008e0400ffc90556ffc9
038d001405c7007a0400003c05c7007a0400003c0453ff5d038dff6a0239
fea00a3affc308e4ffc3071d002705c7008e0400ffc90794ffca04c7ff41
0556ffc70400002704e3ff9c0400003004e3ff9c0400003004e3ffd2038d
004004e3ffd2038d004002aaffc00239002102aaffc00239005805c7007a
0400003c05c7007a0400003c04e3ffd1031d002a04e3ffd1031d002a05c7
00da0400003c05c700da0400003c0400000e031dffed0473008f0239ffd4
04f2ff940321ff4905c7ffca040000290546ffc404e50033045100500473
fffc031dffc704e3ff9c0400003004e3ffd2038d004005c7007a0400003c
000000b305c7007a0400003c05c7007a0400003c05c7007a0400003c0473
00b8038dff6003890048040000300400003004000036038d0011038dffb6
0400002704000027038dffdf04bd001b03270016031fffce0467ffce03bf
003a0239fea00400ffcd0400ffcd03f5003c03cf005803a700750400003c
04000029040000290239000b023900580226ffc6023900460239004f0239
0006046b004805c7003c05c7003c05c700230400fe8404000027040fffe8
0400003c0563003c05a600480456003c031dffdc031dffdc031dffdc031d
ffab031dfffc02df002702df0091038effc603d6ffc6031dffa8024bfea0
024bfea002040014024bfec80239fff702390006040000070429003d03eb
0035038d001205560013038d001203050038031dffc7031dffc7038dff6a
038dffbe034a0007034a007c034a00000389ffe905c7007a0370ffc603bf
000603f5003c0418ffc60239fe9c038dffbd031effc60400002d034a0007
034a007c060c0027065c0027060a0027047b005a0395ffea051d005405cf
fe9b045c004f041a004f041d004603d9ffc00245006f0245006f0151ffa9
01c7006f01c7003d01c7003d02470040031d0081020a000801b6010d035c
012602aa01b202aa019102aa01bd02aa01dd02aa01dd022d00cb022d00e2
0566002705660025056600c4056600c402aa020702aa019902aa016802aa
00a302aaff5902aaffff02aafff6023900610239013302aa00f702aa00f7
02aa00a602aa00a602aa00a602aa000802aa0003030e0105025700aa0117
006f01b000560242005a022d00e203100096031000960310009603100096
0310009602aa006202aa006202aaffbe02aa00ae04730175045700960457
009604570096045700960457004304570043045700430457004304570043
031000430457002f0457002f0457002f0457002f0457002f0310002f0457
0025045700250457002504570025045700250310002f0457001a0457001a
0457001a0457001a0457001a0310001a0457004204570042045700420457
004204570042031000420457009604570096045700960457009604570042
04570042045700420457004204570042031000420457002f0457002f0457
002f0457002f0457002f0310002f0457002f0457002f0457002f0457002f
0457002f0310002f04570026045700260457002604570026045700260310
002604570042045700420457004204570042045700420310004204570096
045700960457009604570096045700420457004204570042045700420457
004203100042045700260457002604570026045700260457002603100026
0457002304570023045700230457002304570023031000230457002f0457
002f0457002f0457002f0457002f0310002f0457004b0457004b0457004b
0457004b0457004b0310004b045700960457009604570096045700960457
004204570042045700420457004204570042031000420457001a0457001a
0457001a0457001a0457001a0310001a0457002404570024045700240457
002404570024031000240457002f0457002f0457002f0457002f0457002f
0310002f0457004e0457004e0457004e0457004e0457004e0310004e0457
00960457009604570096045700960000ff9a0000ff890000fef40000ffe8
000000720000ffcf0000001b0000fffd000000090000008f0000001f0000
ff6a0000ffe80000ffe8000000500000002a00000074000000e80000fec0
0000fea30000fea30000fea30000ff7a000000ad0000feed0000fea30000
fea30000fea30000fdfd0000fe5f0000ffd40000fe370000fea60000fe9a
0000fe8b0000ff380000ff3b0000fdfa0000fe2c0000fe7e0000fde70000
fe570000fdfd0000fe0c0000fe0a0000fd250000fe2f0000fefe0000fee5
0000fe170000fefa0000fe910000feed0000fdfa0000fead0000fe1c0000
ffe5000000650000fef40000fff00000004f0000ff990000002a0000ff55
0000fef80000ff5c0000fd180000fec00000fea30000ff9a0000ffcf0000
ff8d0000fe060000fea30000fd1f00000046000000460000ff530000ff6b
0000ff750000ffff0000ff5b0000ff600000ff740000ff6a0000ff5a0000
fece0000ff9a0000fffa0000ff770000ff4302aa019902aaff9b02aa0041
03fc003d03ed0000051700b506120064051700b50424003c05a6001f047f
000305c7007a0400002d055600a0038e002c04e3ffce03b5ffa70422004d
039c002d059d00b6042d00a10645fffd05c7fff704a5007a042700970630
ffca037effa3045600320456003204f6ffed04320048059b007603f5003c
0322fffc02b6000c047f0003040f00070391003c0239fea405c7007a0339
003c0339ffa104e3ffd205c7ffcc038d00400400003c0916007a0517009b
056600740556002707b2ffc00564ffc60593ff8f0456ff960827ffc00640
ffc606d9ff740516ff840981ffc00714ffc603f6ff56031fff2d05a000db
04f8007005c7007a0400003c055c01000471002c055c01000471002c08dd
007a071b003c06420052049c00280916007a0676003c0000fe370916007a
0517009b0556008a038d0038023cffbb0000ff760000ffae000000640000
003c0000fc2b0000fc4c05c7ffcc0400003c04b8ffc603a4006604e3ffcf
0400ff1e0516ffb6038effaa03f6fffe031fffa40550ffc703be002505ff
00760438003c06f2ffca04fa00290822ffc5058700270556008e038d003a
0556008a038dfff40473009005c7002305c7ffcc0400003c058300e703d1
005606840040045f000106840040045f000102aaffc00754ff900771ffff
0550ffc703be0010056bffb9037dffa505c7ffca03f8ffbc05c7ffca03f8
0029058300e703d1005606aaffbd051bffa4044801cd04e3ff9c04000030
04e3ff9c04000030071dff940556002d04e3ffd2038d0040058f007a038d
001b0754ff900771ffff03f6fffe031fffce03f6fffe038dff6a05c7ffcc
0400003c05c7ffcc0400003c05c7007a0400003c05c7007a0400003c053d
001e0387000f056200e1038dff60056200e1038dff60056200e1038dff60
058300e703d1005606faffc6056b006604b80047040000270669004705a2
0027063700ea052d0082042800ea031f0082073affb90526ffa50794ffca
0590002905c7008e03f5003c056e00cd075a00230000fe2a000000030000
002400000073000000000000fe3e000000630000ffb80000ff730000ff84
0000fe4f000000110000010e0000ffb70000ff35000000020000000d0000
fe6a0000fe8a0000fe400000fde00000fe7900000063000000240000fe55
0000005a0000002d0000ff380000fec00000006500000042000000a30000
00a3000000b3000000b3000001440000010d000000a304e3ff9c04000030
04e3ffd10400003604e3ffd10400003604e3ffd1040000210556008a038d
003c05c7ffc30400002705c7ffc30400002705c7ffc30400000d05c7ffc3
0400002705c7ffc30400000304e3ffd2038d004004e3ffd2038d004004e3
ffd2038dffc704e3ffd2038d000004e3ffd2038d004004e3ffce0239fe9b
05c7008e0400ffc905c7ffca0400002905c7ffca0400002905c7ffca0400
002905c7ffca0400ff9f05c7ffca0400002902aaff880239ff7402aaffc0
023900580556ffc9038d00140556ffc9038d00140556ffc9038d00140473
ffbe023900130473ffbe023900130473ffbe0239ff4f0473ffbe0239feff
06aaffbd05c7002306aaffbd05c7002306aaffbd05c700230556ffc70400
00270556ffc7040000270556ffc70400fff90556ffc70400000305c7007a
0400003c05c7007a0400003c05c7007a0400003c05c7007a0400003c04e3
ffcf0400ff1e04e3ffcf0400ff1e04e3ffd1031d002a04e3ffd1031d002a
04e3ffd1031d002a04e3ffd1031dff090400000e031dffed0400000e031d
ffed0400000e031dffed0400000e031dffed0400000e031dffed0473008f
023900540473008f02390013047300350239ff59047300170239fef505c7
00da0400003c05c700da0400002805c700da0400000305c700da0400003c
05c700da0400003c04e30100038d002c04e300b3038d002c06aa00f90556
002306aa00f90556002304e3ff77038dffb804e3ff77038dffb8047300b8
038dff600473fffc031dffc70473fffc031dffc70473fffc031dff810400
ffe50239005405560023038dff60040000300239fe9d0433003c0433003c
0433003c0433003c0433003c0433003c0433003c0433003c04e3ff9c04e3
ff9c054700000547000004e3ff9c04e3ff9c04e3ff9c04e3ff9c03270016
032700160327001603270016032700160327001605ab008d05ab009a06d7
007f06d700b906d7007f06d700b903f8003a03f8003a03f8003a03f8003a
03f8003a03f8003a03f8003a03f8003a068f008d068f009207bb007f07bb
00b907bb007f07bb00b907bb00d007bb00d0023900580239005802390043
02390058023900580239005802390058023900580372008803720088049e
007f049e00b9049e007f049e00b9049e00d0049e00d00400003c0400003c
0400003c0400003c0400003c0400003c068f00c9068f00f507bb007f07bb
00b906f3007f06f300b903ac003503ac003503ac003503ac003503ac0035
03ac003503ac003503ac0035053b009106cb00b906cb00b906cb00d005a6
004805a6004805a6004805a6004805a6004805a6004805a6004805a60048
069100c9069100e307bd007f07bd00b906f5007f06f500b906f500d006f5
00d00433003c0433003c032700160327001603f8003a03f8003a02390058
023900580400003c0400003c03ac003503ac003505a6004805a600480433
003c0433003c0433003c0433003c0433003c0433003c0433003c0433003c
04e3ff9c04e3ff9c054700000547000004e3ff9c04e3ff9c04e3ff9c04e3
ff9c03f8fffb03f8fffb03f8fffb03f8fffb03f8fffb03f8fffb03f8fffb
03f8fffb068f008d068f009207bb007f07bb00b907bb007f07bb00b907bb
00d007bb00d005a6004805a6004805a6004805a6004805a6004805a60048
05a6004805a60048069100c9069100e307bd007f07bd00b906f5007f06f5
00b906f500d006f500d00433003c0433003c0433003c0433003c0433003c
0433003c0433003c04e3ff9c04e3ff9c04e3ff9c04e3ff9c04e3ff9c02aa
019102aa004102aa019102aa00c602aa010c03f8fffb03f8fffb03f8fffb
03f8003a03f8fffb060f00fe060f00d106f300f606f300d105c7ffca02aa
00e302aa00e302aa013402390058023900580239003c0239003c02390058
0239005802aaffc002aaffc003d600ec03d600d102aa011d02aa011d02aa
013403ac003503ac003503ac003503ac003503d7ff6f03d7ff6f03ac0035
03ac0035047300b8047300b806030104060300d105ab009702aa00b402aa
00b402aa016805a6004805a6004805a6004805a6004805a6004806f30104
05c7007a06f5010405c9001b05c9001b02aa019902aa01bd04ef00ba0556
008a0556008a05c700230556ffc70871ffd106aa00590556ffc90473008f
0800ffbe0400ffad04c10066000000460000004600000046000000460239
000b0239fea00400ffc404e3ffcf040000270239ff40040000270239ffb6
044affe3044affe302aafffd02aafffe02aa002402aa003402aa000202aa
009502aa001402aa002102aaff6c02aa00ff02aa019f02aa019102aa000a
02aaffef032effa6032effa402aaffb000000033000000680000ffb60000
fea60000feed0000fee70000fe1a0000006800000046000000460000fe0a
04e3ffcf0400ff1e0330ff900491ff900556002d0343ffc7039d003c0411
ffc60411ffc6031fffc6031fffce023900090307002a03abffc60332ffda
04ccffda040bffc60400003c03c8003c042a003c042a003c0497003c0556
00360385003c03ee003c03ee003c0346ffc603efffc603370014030a0044
03ec00840471006a057d008004ef00b7035e008c049e008c0337fff102d1
ffdc033600000466ffba032dffc60331ff900403ffc60346ffc603f60092
03a2ffbc0354006304940063035b0089035a008903d60089034100890341
008f03a400de02dbfffa0217008902b900a803f200830332008204880084
03ac008a03f3008503cd00de02b200ad031f0082037b0084031700f203fe
0138048b014d033000e7033000e7033000e7032800850227006a027b0089
021900870219008601e4007801e40070024900350144005b0240006f0356
006e022a006e0249007b0214007202490083024900780243ffda01580098
02580085028b009103720085023d008a02d900690246000301d80080023b
00830271007d0227fff80144000a01f8ffe20258ffe9023dfffc0246ff72
01d8ffe00246ffc90271ffdc0227ff5d0509ffd5048300bd04faffd10475
ffc7049c00c704f4ffe404cb00bc04f7ff85048300250000ff3a0000ff38
0000ff380400ffee0473018a035c00db0400000008000000040000000800
000002ab000002000000015500000400000002000000019a000000ab0000
000000000556008a06aaffbd04ccff5f05cf003c060500270608002d04e3
ff9c0556008a040000720473ffbe0473ffa5031dffed031d000403e50061
000001cf0000feb60000fe140000003c0000ffcb03d7ff340556008a0556
008a0556008a048dffb6031f00020000fe54000000770000fee40270ffd3
0000ff3804000036040000270239fe9b05c7000b040000140400fefa031d
ffae02dfff9f031dffed0239ffcf031dffc70400ff750258002803c5ffaa
059affc30226ffc60239000b0400ff1e03ec00290429ffe3040000360400
002702d6fe9b04bbffc9038d00140239ffac05c70023040000270400ff1e
031dff1a031dffed02d1fea0038d002c038dffb8031dffc7040000300400
003004000027038d004003270016031fff65038d001b02390058038dffa6
024bfec40400003c038dffad033000e7021a007b021a002f0252007b01e4
00700164ff960164ffaf0288007b0258008d0144006b0144009301440048
014400480144ff970144006b0144002b01c5002c032b0065032b0072022a
ff61022a006f022a00340249007a027b007b01cf00310164ff9c01580001
0258006a0262007b025800aa02580083023d008101ef005601ef0057021b
005601effff2024900910000ff510000ff540000fee10000ffa002aa007a
0257ffed0219ffe30249ffe50246ffcb0219ffe005c7008e04e3ff9c0400
00130556008a02aaffed0433003c0433003c0433003c0433003c0433003c
0433003c0433003c0433003c023900580239005802390058023900580239
005802390058023900580239005803ac003503ac003503ac003503ac0035
03ac003503ac003503ac003503ac00350239005802390058023900580239
005803ac003503ac003503ac003503ac0035037d003804e3ffd105c70066
04d5ff8f04e3ffd2038d0040038dffba0239fea005aa008e0400002d04e3
ffd1031d0015047300a2038dff5c039100140391003c039100140239004f
048dffb6031f000204e3ff77038dffb804e3ff77038dffb803f6003b037d
0017056bffb9037dffa50000ffbe0000ffb50000ffdc0000ff950000ff54
0000ff330000febc000000500000fe1a070e0020031fffde039100140473
ffbe023900350473ffbe04e3ffcf04e3004c040000300239ff9005c7ffca
040000290556ffc9038d00140473fffc031dffc7038d003a04ccffca0345
0029046d004a0000006a000000a6000000270000000a0000ffa70000fe6e
023900580592ffc00556ffc70592006e0000fecc0000ff1c0000fee20000
fef70000fedd0000fee60000fec50000fefa0000fee50000fec50000feb2
05c700610400002d06aa00f9055600230579ffb10000ff8305be007a0474
002c06aa00f90665002302aa00b0033d007701b600a201b600f004000099
0400009902aa018102aa017b02aa010a02aaff7404730077040000910400
005a02f2001e03df001103cfffe60400001703aeffd504180084040000b4
0400006b04180036043900970323001404000020039f00260400004003c0
00290400008103b800be0400004e0400003b023900580471fe980695fea9
0692feab0435fe9c068afea903c9ff8803e2ffbc0434004e04a8ffbc03a9
ffbc036cffbc0476004e04c7ffbc0257ffbc0298ffc30462ffbc038affbc
0533ffbe049affc70476004903b3ffbc04760048040affbc0334fffe03a8
006f049b009603c3007605dc008b0405ff9903f6008b0405ffc90548ffa6
05dc0049038affbc0476ffe703b3ffbc04a8ffbc0466ffb003c9ff8803c9
ff8803c9ff8803c9ff8803c9ff8803c9ff880434004e03a9ffbc03a9ffbc
03a9ffbc03a9ffbc0257ffbc0257ffbc0257ffbc0257ffbc049affc70476
004904760049047600490476004904760049049b0096049b0096049b0096
049b009603f6008b03c9ff8803c9ff8803c9ff880434004e0434004e0434
004e0434004e04a8ffbc04a8ffbc03a9ffbc03a9ffbc03a9ffbc03a9ffbc
03a9ffbc03a9ffbc0476004e0476004e0476004e04c7ffbc0476004e04ac
ffbc0257ffbc0257ffbc0257ffbc0257ff8f0257ffbc04b2ffbc0298ffc3
0462ffbc038affbc038affbc038affbc038affbc049affc7049affc7049a
ffc7047effbc047600490476004904760049040affbc040affbc040affbc
0334fffe0334fffe0334fffe0334fffe0334fffe03a8006403a8006f03a8
006f03b20079049b0096049b0096049b0096049b0096049b0096049b0096
05dc008b05dc008b05dc008b05dc008b03f6008b03f6008b03f6008b0405
ffc90405ffc90405ffc903c9ff880548ffa60476ffe703c9ff8803e2ffbc
0356ffbc03d7ffb403a9ffbc0405ffc904c7ffbc047600480257ffbc0462
ffbc0414ffab0533ffbe049affc703e3ffd00476004904c1ffb603b3ffbc
03b3ffbf03a8006f03f6008b047f00350405ff9904a400bd048dffc503c9
ff8803a9ffbc04c7ffbc0257ffbc04760049048dffc503f6008b0257ffbc
03f6008b03a9ffbc04c200720356ffbc0437004e0334fffe0257ffbc0257
ffbc0298ffc305a3ffad05c8ffbc04ba0069044affbe0435005504c8ffbe
03c9ff8803cbffba03e2ffbc0356ffbc045cff4d03a9ffbc05b0ffa5035c
ffe804c6ffbe04c6ffbe044affbe045bffad0533ffbe04c7ffbc04760049
04c1ffb603b3ffbc0434004e03a8006f04350055048600350405ff9904c9
ffb6044c00a5068dffcd0694ffcd0491007905b1ffba03ccffba04370013
0659ffbc0437ff890356ffbc02560056025600850256004a025600540256
00480256004a02560052025600a60256004c025600560256005602560085
0256004a02560054025600480256004a02560052025600a60256004c0256
005604cf003007bdffc407bdffc407bdffc407bdffc407bdffc407bdffc4
07bdffc406b4003c0513007a0513007a0749003c06ad003c06ad003c06ad
003c06ad003c06ad003c0664003c05cb008d0794ffc40487003c0487003c
0487003c0487003c0487003c048effc40723003c050dffe7050dffe709d7
ffc407bcffc407bcffc405a7007905a7007905a7007905a7007905a70079
05a70079062b0054062b00540672003c05c7007d06e6003c043dffb5043d
ffb505a2003c06eb003c06eb003c06eb003c06eb003c06eb003c0612003c
0811003c0673ffc404ad007c04ad007c04ad007c04d9fff104d9fff10759
005e07bdffc407bdffc407bdffc40513007a0513007a0513007a0513007a
0749003c06ad003c06ad003c06ad003c06ad003c06ad003c05cb008d05cb
008d05cb008d05cb008d0794ffc40794ffc40487003c0487003c0487003c
0487003c0487003c048effc40723003c050dffe7050dffe7050dffe7050d
ffe707bcffc407bcffc407bcffc405a7007905a7007905a7007906e6003c
06e6003c06e6003c043dffb5043dffb50400000e0400000e05a2003c05a2
003c05a2003c05a2003c06eb003c06eb003c06eb003c06eb003c06eb003c
06eb003c0811003c0811003c0811003c0811003c04ad007c04ad007c04d9
fff104d9fff10723003c0774008f0884003c0428ffca031c003c0473008f
0423007b05c7006204400027052effc9040000c60400006b0400fffd07db
ffb90553ffa5074cffcf058fff1e0781ff910591ff840556ffc903d7001f
07f2ffb90504ffa5084cffca0577002905c7ffc5040000270583ffca0400
00270239fe9b0239fe9b03b800300688ffc00438004f046b007a03ae003c
04fdffce03bbfec306aaffbd04e3010a05be003704700040031dfff10400
003c031fffe60151fefa035e010b0400000e0473fffc0239ffc60400ffab
05c500d40590ffa605d400c405f30049058100d405c4002904faffb0059e
ffa60722ffa806170055054fffb00412ffb00770ffb005de0089059a00e4
04b7ffd005cf004d05c4004905c1002f068500d505aa007b05a200b90587
005e05b8ffa6059300cb06a4003f05b5001b0657ffa605b800d505e90053
052f005b0570ffa605860068047dffb5063f0088066f000605e800800679
00670199013201fe01430154008d00f7009001a8009201da0065047501d9
05c9003e03cfff200420003f03fe002903e800410416003d0339001803fa
ffaa0516ff200442004703fdff2001ffffae05f5ff2003fc004603c80047
03e7001703d7003a03fd002903d40039040c003b01d3fe8403e6004702e9
ff0d03fa00290239ff2c05b5003c037eff670438002903fa003b03f8003d
05e0003c03faff2003d1fff70287002d05c5003b042aff2a040d00400575
003704b100410239007a02f400bf077a0045077a00450616004907f2003b
07f4003b0809003b07de003d0a01003b0000fee40291ff7e035700bd03ce
ffd103cbff85000000770000ffc80400ffda038dffba05c7fec603f8fe84
0a39ff2d0843003d0597ffba0414ff74056bffb9037dffa5053600180542
ffc40437fe9b0538007102aa003602aa003602cd00e802fb010a050c010a
020000d20800000008000000080000000800000008000000080000000800
00000ab9007f01c001180355011a035c00be027fffbb0800018907a7ffab
07a70113027fffbb0783006c02aa002c031d000d031dff3306d000c60566
00c6061c009a040000b4042f00c803a0007003a0009a0400007302620024
07a7ffab040000d6040000790454001407a7ff98040000a30400007b0485
00db04ec0099051d00d202aa007a071000be051d00d202aa007a01c70000
000000000800000008000000080000000800000008000000080000000800
000008000000080000000800000008000000080000000800000008000000
06120040026600a6015600930266008302660084026600b5026600fc0266
009a026600b5026600ab026600ab026600ab019900540199ff7a02660011
026600260266fff30266000402660007026600020266001d0266006c0266
001102660023026600170266001702660017019900540199ff7a0245ffd6
0240ffd60117ffea0356ffd50245ffd60243ff4101b0ffbd015800000722
006c06d3006c0556005607d900a004e30054071b006c0402007e053d003a
073400a00414ffb9073fffe907e7007c05c7003104000027040000270581
ffca046d005305aa001c05f9003605c7fff10614008305ec006204730031
05c70056076a004b065c007c055600310556002704e3ffd107410048087a
008a04e3008c04e30021038dff6a05f2008205960039022700380556ffc9
04e3ff9c076a0091052b008b0314002b04ec0072058100020473ffcd08ec
0004033f003804bd00a7047a0067034d0047041f0084029d003e07ca0096
08d4003f046400480389000a04a0002f05c7002f05b40035063900b50473
0076047300760556000b05c7ffc304000027038d0040023900580239fea0
051500a9063900700637003e086affad060000a1060000a107c300a10600
00a10600006f0600008206000083060000a10600008403ab00a102aaffc0
0514ffc0077effc0075dffc004e301000774010009de01000a4600c40796
ffc004e3ff7707a0ff770a0aff770473ffbe0556008a05c7ffc306aaffbd
0239005804320058062b005805c20058038d002c05cc002c07c5002c09be
002c05cd0058038dffb805cbffb807c4ffb80239004f038d003804000027
05c7002308e5008a05c7ffc308e5008a0556003705dc008a0514002b05c7
ffc308e5008a060000a602aa010a02aa010a02aa010a02aa00dc02aa010a
02aa00dc036e00e0036e00e0035c00ca035c00ca035c00ca037e00ca037e
00ca037e00ca06b500320000fc050000fc050000fc0501e0ffb70400002e
04e8006004e80043056600960400008e0400006402aa003604540014037e
002a037e002a0454001404540014031d000d031d0030031d0115031d012e
031d000d031dff3305f4001405f4ffd6041b008c041bff20051d00d2051d
00d2051d00d204ec00990400014f02aa01b902d60082020000dc0200002c
020000910200003702aa007a040000dd040000eb0400fff4040000cf0800
ffed0800ffed020000000239ffca0239ffa50556008a02aa001602000045
04730081040000b8040000d40207ffe501bb005a020700f301bb012005c7
ffca03ba002905e7008f04cf005403f6003b03f6ffc3037b0038037bfff2
043500380435fff2036cffbc0334fffe07bdff9c054efff00865ff9c05c4
fff007d3ff9c056ffff006a1ff9c04bfffef06a1ff9c04bfffef06a1ff9c
04bfffef0556007c038dfffa0556ffc9038d00140556ffc9038d00140556
ffc9038d00140523006e026300e50473ffbe0239004f060900110400ffea
0631007a045f003c09f0007a069e003c04e3ffcf0400ff1e0547000404c2
ff6a067800ce05f4008a05c70061040000160680006104ad002d055800ba
03e900660518002003c7ffb604e30006038dff7306aa00f9055600230453
001b0408001b04e3ffcf0400ff1e04e3ffcf0400ff1e045eff440364ff44
0304ffda0304ff8a043affb1043aff380400003b0400ffd7025600680525
00270334005506ea002305280027036b002a0550ffbc0502005403b5ff9c
05c7007a040000370389ff2e02aaffad03c5001203c5ffc203c5ff720473
00c202390045058eff310400ffa90389ff2e02aaffad050f00760372003d
05c7012d03a400760556ffc7040000270556fff8038dffe2038d00380400
00290568000e04ffffc404e3fecd0239fe9b058b00640424000b05c70064
0400000b058b00640424000b05c7ffe60400ffc90556ffc9038dffbf0556
ffc70400ffdf04e3ffd1031dffc80400000e031dffed0635003803f6fffe
05befff504ff004a0556002d0473ffc7038d000d04e3fefc04e3ff3f03fc
ff770739005d05a6004805ec00330386003403c9007b05c7002304e300f4
04e3008e06aaffbd02aaff4308bcffd20431ffc5053cfff0031c0038038d
ffcf045fffee0239fe9b03d7ffb10286000e0239ffcd0239004805ae0023
03f4002703e1ffb1031effd7031effb00400000405c40036055600360556
0036069e003c069e003c03bbfff8040affbc028f002a0403002a03a0ffe5
0486ffe5032b003504ba0035024bfea00400003c0400000705c7002305c7
00230400003c0385ff400385ff40036dfea0038dffb8038dfe7d038dfe7d
038dfe69038dff5c02aa00900292005e01b2004201b200580288003e056b
003d0564ffc605e300380653003c04000042048dffc504e3ffd10473ff97
00>
<000000000000006800000068000000680000006800000068000000680000
00680000006800000068000002180000028a0000028a0000028a0000045c
000004d0000005440000057c000005c60000062c0000062c0000062c0000
062c0000062c0000062c0000062c0000062c0000062c0000062c0000062c
0000062c0000062c000006e00000073a000007f8000007f8000007f80000
0a0c00000c5200000d5c00000ed200001124000013000000146e0000175a
0000195600001abe00001d6000001eea000021ac000023a0000024c00000
26760000284e00002a7800002c7800002e1000003000000031da00003466
0000346600003688000037ea000037ea000037ea000037ea000037ea0000
37ea000037ea00003a6600003be200003d6600003fde0000415200004384
0000456c000047620000490600004a8000004cda00004e640000519e0000
53d2000054d8000056c6000058a600005a2400005b7400005ce000005f2a
000060a0000062a00000647a0000663a0000683a0000683a0000683a0000
683a000068e2000068e2000068e2000068e2000068e2000068e2000068e2
000068e20000691200006912000069120000691200006912000069120000
691200006940000069400000694000006940000069400000694000006940
000069400000694000006940000069400000694000006940000069400000
694000006940000069400000694000006940000069400000694000006940
000069400000694000006940000069400000694000006940000069400000
699e0000699e0000699e0000699e0000699e0000699e0000699e0000699e
0000699e0000699e0000699e0000699e0000699e0000699e0000699e0000
699e0000699e0000699e0000699e0000699e0000699e0000699e0000699e
0000699e0000699e0000699e0000699e0000699e0000699e0000699e0000
699e0000699e0000699e0000699e0000699e0000699e000069d4000069d4
000069d4000069d4000069d400006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a4600006a4600006a4600006a4600006a4600006a4600006a46
00006a4600006a4600006a4600006a4600006a4600006a4600006a460000
6a4600006a46000100000dfa00f2003c0097000600020010002f00560000
04ed0258000400020000000e00ae0000000300000000021a000000000003
000000070076021a0001000000000000010d02900001000000000003001f
039d0001000000000004001f03bc0001000000000006001f03db00010000
00000007003b03fa0003000104090000021e04350003000104090001002c
06530003000104090002000e067f0003000104090003003e068d00030001
04090004003e06cb0003000104090006003e070900030001040900070076
074700a90020003200300031003700200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064002e0020000d000d004800650062
0072006500770020004f00700065006e00540079007000650020004c0061
0079006f007500740020006c006f00670069006300200063006f00700079
00720069006700680074002000a900200032003000300033002000260020
0032003000300037002c002000520061006c00700068002000480061006e
0063006f0063006b002000260020004a006f0068006e0020004800750064
0073006f006e002e002000540068006900730020006c00610079006f0075
00740020006c006f00670069006300200066006f00720020004200690062
006c006900630061006c0020004800650062007200650077002000690073
0020006f00700065006e00200073006f007500720063006500200073006f
00660074007700610072006500200075006e006400650072002000740068
00650020004d004900540020004c006900630065006e00730065003b0020
00730065006500200065006d0062006500640064006500640020006c0069
00630065006e007300650020006400650073006300720069007000740069
006f006e00200066006f0072002000640065007400610069006c0073002e
00540069006d006500730020004e0065007700200052006f006d0061006e
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e002ea920
3230313720546865204d6f6e6f7479706520436f72706f726174696f6e2e
20416c6c205269676874732052657365727665642e200d0d486562726577
204f70656e54797065204c61796f7574206c6f67696320636f7079726967
687420a92032303033202620323030372c2052616c70682048616e636f63
6b2026204a6f686e20487564736f6e2e2054686973206c61796f7574206c
6f67696320666f72204269626c6963616c20486562726577206973206f70
656e20736f7572636520736f66747761726520756e64657220746865204d
4954204c6963656e73653b2073656520656d626564646564206c6963656e
7365206465736372697074696f6e20666f722064657461696c732e454c4c
4e41462b54696d65734e6577526f6d616e50532d4974616c69634d54454c
4c4e41462b54696d65734e6577526f6d616e50532d4974616c69634d5445
4c4c4e41462b54696d65734e6577526f6d616e50532d4974616c69634d54
54696d6573204e657720526f6d616e20697320612074726164656d61726b
206f6620546865204d6f6e6f7479706520436f72706f726174696f6e2e00
a90020003200300031003700200054006800650020004d006f006e006f00
7400790070006500200043006f00720070006f0072006100740069006f00
6e002e00200041006c006c00200052006900670068007400730020005200
65007300650072007600650064002e0020000d000a000d000a0048006500
620072006500770020004f00700065006e00540079007000650020004c00
610079006f007500740020006c006f00670069006300200063006f007000
7900720069006700680074002000a9002000320030003000330020002600
200032003000300037002c002000520061006c0070006800200048006100
6e0063006f0063006b002000260020004a006f0068006e00200048007500
640073006f006e002e002000540068006900730020006c00610079006f00
7500740020006c006f00670069006300200066006f007200200042006900
62006c006900630061006c00200048006500620072006500770020006900
730020006f00700065006e00200073006f00750072006300650020007300
6f00660074007700610072006500200075006e0064006500720020007400
6800650020004d004900540020004c006900630065006e00730065003b00
2000730065006500200065006d0062006500640064006500640020006c00
6900630065006e0073006500200064006500730063007200690070007400
69006f006e00200066006f0072002000640065007400610069006c007300
2e0045004c004c004e00410046002b00540069006d00650073004e006500
770052006f006d0061006e005000530052006500670075006c0061007200
45004c004c004e00410046002b00540069006d00650073004e0065007700
52006f006d0061006e00500053002d004900740061006c00690063004d00
540045004c004c004e00410046002b00540069006d00650073004e006500
770052006f006d0061006e00500053002d004900740061006c0069006300
4d00540045004c004c004e00410046002b00540069006d00650073004e00
6500770052006f006d0061006e00500053002d004900740061006c006900
63004d005400540069006d006500730020004e0065007700200052006f00
6d0061006e00200069007300200061002000740072006100640065006d00
610072006b0020006f006600200054006800650020004d006f006e006f00
7400790070006500200043006f00720070006f0072006100740069006f00
6e002e00410c005403cd02b0001d001f03cd03cd03cc03cb003c001f03cb
b3061d1f00410c03bc003003bc004003bc00a003bc00b003bc0005ffc003
bbb345453240b803bbb32b2e3240b803bbb2282932b9ffc003bbb31a2632
80411303bb009f03bb00af03bb00cf03bb0004000003bb001f03bb000203
bb02af0027001fffc003b9b2161b32b9ffc003b8b2424232b9ffc003b8b2
363832b9ffc003b8b32a2d32df410a03b800ef03b8000203b803b9002800
1fffc003b9b3282e32f0410f03b90001000003b7000103b700030800001f
03be03bf002b001fffc003bfb2242a32b903b60381b23a1f0f411703b300
1003b2002003b2005003b2007003b200e003b2000600cf03b300df03b300
ef03b300ff03b30004001203a8b2e2891fbe039f016b019a001f03980093
0801400c1f7f047f05027f027f03025fbb02b00001ffc00117b2196632b8
ffc0b3651a6632b9ff800173b2196632bd038401170800001fffc002afb2
313340b802afb22e3340b802afb328293240b802afb326273240b802afb3
21253240b802afb31c203240b802afb2233340b802afb21933a0bc02af00
b002af00e002afb5034003212932b8fff2b33a263d32bc03820382038200
3a0800b51f40255c331eb80381b25c6432b8ffeeb3252e3314b80381b32b
2e3269be03810001008a03810001000e0381b32b2f3210b80381b3515b32
0cb80381b34e513222b80381b3474d320eb80381b246330ab80381400926
473212254358320cb80381b2323310b80381b22a3312b80381b3373d3212
bb0381003d0033fff44015253d331825355b32102526343206252a330c25
2e33b8fffe4024252d330c3a2f33329925aa25ba25c92504052536330c25
323832193a293a383a03182517b80381b42825382504bc03810381038100
25080040101f0f1f2b2e32691f781f020b1f303332b8fff1b31f263d32bc
038003800380001f080040151f375f07af07025f06af060222ac2b2e3209
ac2f33b8ffdc400aac1f223222232b52320eb8037fb229330eb8037fb222
3314b8037fb21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037fb64c4f32
32262c33410affee037f00390033fff8037f002b0033ffea037fb23a3320
b8037fb33f46321eb8037fb32f3a3212b8037fb22e331eb8037fb32a2d32
0eb8037fb2263304b8037fb3494a3404b8037fb2463304b8037fb2213318
b8037f400c1d3322263032322226333832b8fff8400a262b2f3209261b21
328abe037f0001037f037f037f00260800402e1f371f062f063f06039f02
af02bf02cf02049f03af03bf03cf03046f037f038f03031f032f033f034f
035f03050f413a02ed0001005f02ed009f02ed00df02ed0003002f02ed00
3f02ed006f02ed000300af02af0001004f02af009f02af0002002f02af00
3f02af0002003f02b00001000f02b0001f02b00002004f02af005f02af00
02002f02af003f02af0002007003b2000103b203b202ed02ed02b002b002
af02af401a37010030014001020101000901020008001717000000121108
40410b027b02230034000d013d0034000d01370034000d011b401a340d8f
340d84340d68340d59340d54340d48340d2c340d28340d41100235002000
0d021b0020000d01fc0020000d01c30020000d01500020000d012c401a20
0df0200dbe200d94200d79200d6a200d61200d5f200d44200d410d013e01
38000d003d0138000d00300138000d001d0138000d01fdb40f4d0f0009bf
01fd004d000d03b1037f0015001f0215b226341fb80214b2263f1fb80208
b21ebb1f41190206001e0801001f0205001f02ab001f0204001f02ab001f
0203001f0401001f02010031019a001f01fb00230156001f01aeb2262a1f
b801adb2262a1fb801abb226341f411501a8002602ab001f01a5001e0125
001f01a400ab02ab001f01a2003102ab001f01a1003102ab001f019db223
6c1fb8019cb2236c1f4109019b00230401001f019a0033019a001f0176b2
262e1fb8016cb231721f4111016b0023019a001f016800240401001f0145
00260801001f013f00230401001f0123b21e9e1fbc0121001e0201001f01
00b426791ffd1fb80125b21ffa33b80801b21ff924b802abb21fe826b801
01b21fe51fb8019ab21fe431b80101400b1fe331e41fe231891fd226b802
01b61fd026cd1fcd25b80401b21fb731b8019ab21fae26b80801b21fac1e
b80401400b1f9e315e1f97269e1f9333b80801b21f8a24b8019ab21f831f
b802ab40131f82236c1f7523e41f7026cd1f6423721f5e25b80401b21f5d
23b802abb21f55e6b80401b21f5324b80201b21f4f33b802abb21f4e26b8
040140131f4731671f4626ab1f4331cd1f3e235e1f3a1fb80401b61f3924
e41f3723b80801b21f2e23b80401b21f2a1eb80125400b1f2923ab1f2731
ab1f5537bc01c60007018a0007012b402e077f077107690766074b074007
380736072d07220721071408120810080e080c080a080808060804080208
000814b8ffe0402b00000100140610000001000604000001000410000001
001002000001000200000001000002010802004a00b013034b024b5342b0
372b4bb807ff52b0382b4bb009505b58b101018e59014bb0c063004b6220
b0f65323b8010a515ab005234201b0124b004b544218b0382bb00288b801
005458b801ffb101018e851bb0124358b900010140858d1bb90001015985
8d59590016763f183f123e113946443e113946443e113946443e11394644
3e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594b
b04753205c58b9027d027b4544b9027c027b45445958b90146027d455258
b9027d01464459594bb04753205c58b9001e027c4544b90026027c454459
58b9017f001e455258b9001e017f4459594bb05e53205c58b9001f027d45
44b90025027d45445958b901a8001f455258b9001f01a84459594bb80101
53205c58b1ab1f4544b11f1f45445958b9047000ab455258b900ab047044
59594bb8012553205c58b1e61f4544b11f1f45445958b9051000e6455258
b900e605104459594bb01753205c58b124244544b1312445445958b12224
455258b124224459594bb05153205c58b124244544b1232445445958b17d
24455258b1247d4459594bb06e53205c58b124244544b1332445445958b1
aa24455258b124aa4459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b456953
42014b5058b108004259435c58b1080042591610703eb0124358b911b53d
801bba011c03d9000b2b59b00a2342b00b2342003f3f182b103c012f5d06
0cb0062342b0072342b0124358b93b21187e1bba040001a8000b2b59b00c
2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b0
0f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342
002b4bb02e5358b8016b45b02a60b8016b23445900184569444569441845
6944456944737373737375757573737475757575752b4bb026534bb03d51
5a58b1262645b0196044592b45186944742b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b004bb02a534bb03f515a58b1070745b0
4060445973732b2b451869442b2b752b2b4518694475752b2b752b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b2b2b451869442b002b732b
2b2b2b2b2b2b2b2b012b2b2b007373732b2b2b01435c58b8ffdeb31e1c33
18b8037fb52b3318262b33b9fff00381b112332b2b2b2b590173742b2b2b
002b73752b2b732b2b2b2b2b73752b2b2b2b73002b2b4569442b2b0000>
[13961 13247 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 6846 46 <0001ffc9000005d4054c003e01d6b9002effc0b31c373f2eb8ffc0b20b39
2eb8ffde40250d0f3e7800790f752e852ea32f05532c563c8c0a9e32913b
a800ae0abd0ab413e80f0a122bb8ffdeb30f133e40b8ffc0404e1b233406
0e071d06171e181d17272d281d27383e391d380501041d051610151d1626
1f251d26372f361d370001011e0e0f140e0e0f3e0000232e2f142e00012e
2f0e2f3e000105402f3e0003260fb80344402b2e0a2e26050f0f0e2e2e2f
2d102d10101e1e1f141e1e1f38373727272602171616060605081e3f281f
1010b803014013121e402527340f1e1f1e2f1e03e01ef01e021eb8017340
0a3f091e171e3f0a67fc182b2b103c2b2b10f45d712b435c58b9001eff80
b326173f1eb8ff80b328183f1eb8ff80b72d173f1e8018391eb8ffc0b214
391eb8ffc0b113392b2b2b2b2b2b5901ed2b3c2b10c0003f3c103c103c3f
3c103c103c870e2e2b0e7d10c48708c408c4001112392b1810ed00121739
0112173987082e2b0e7d10c4870e2e182b0e7d10c4180010ed0110c00010
ed0110c00010ed0110c00010ed0110c00010ed0110c00010ed0110c00010
ed0110c00010ed0110c03130012b2b435c58b42f22103900b8ffc0b31e3c
3f01b8ffdeb21e3900b8ffdeb21e3910b8ffdeb111392b2b2b2b2b595d00
5d2b2b2b0101161633072137363635342726270103061514161707213736
373637363713363534262323372107260706060703013637363534262737
21070606070607028e01505a76600bfdbe0945390a0832feed8521386e10
fde80d4e1b28131a26ef1b334a140c01fd0a3f1f2b28276901e2601e1225
260a01b2094761330fb40303fdf98a4d25250734211e1c144e01affe3f6c
252628072525020c121c298103335e39282a2525010f154284fea4016b48
2a1a1512220525250c27220a8a00>IAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
2 7520 47 <0001ffbe0000042f054c00280109403309131828021255168f268b278b28
a400b700b61b0727280108021d011218131d121109101d111819191e0809
14080809232028b801064021202e01121102010828272300042a08292809
081000a90028102820280328c42a19bd030100090345001200080173b629
09081708290ab80173b1c4182b2b103c2b2b4e10f4435c58b90008ff80b3
26173f08b8ffc0b328183f08b8ff80b62d173f088018392b2b2b2b59014d
e4ed4e10f6714de42b103c2b10c001121739003f3f3c10eded1139870e2e
2b0e7d10c4180010ed0110c00010ed0110c00010ed0110c010c93130015d
435c58b5244011143e19b8ffe8b2113915b8ffdeb30f133e16b8ffdeb20f
133e2b2b2b2b59015d212137363736373637133635342623222737210722
060706070306151417163333323736373637373303abfc130e501b2a141f
23ef1e374c110a0c0229085d4e1a1229eb1b1b113c838f543e341c471a25
25020b121d2e7803396630262a01252524291b8dfcd55c2418160f241b36
1e772d00>IAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
3 3324 74 <0003ffc9fe46042b0389002f003d004c010a40399243a112aa13ab16a343
ad47b012bf1ebb1fb3430a126a106a4b7910794b9a4bac4b06110f0f1f3e
4a143e3e4a0f113e4a043e211826398a08b80333b22c0002b80393401f2f
c633242c074524180f12111448022f04082630363e210c23019504483114
bd0332001c00300381000403314009290c3a236c29413a1cbc0124003603
810029ffc0b22a3529b8ffc0400f262834102901d0290129b94dcb4c182b
10f65d712b2be9f4ed10f4ed10fde910fded10e411123939111239391139
3911123939003fed3fedf4ed3c10fded391239391739870e2e2b0e7d10c4
3130005d435c58b54b220d163f0fb8ffdeb30d163f0fb8ffdeb30f103e10
b8ffdeb20f103e2b2b2b2b59015d01072316151407060706070615141617
171617161514060623222626353436373637263534363726263534363332
161707342623220615141633323e02010606151417163332363534262726
042b1da7137071c56a35142449c2a1343379e98d7ccc58392b1b7e2e5183
6e81f9cf4b602d4d594871935e4335634428fe2151533c56a68fcb4b6c3b
034b68362f8467670b202c10111421112d2634354552884d3b64352b5d1e
1347242b285a36158e578ee01e209d505ce37b4d623a669efd7525743842
2b3e614d2746160c>IAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
3 5714 79 <0001004fffe80261058e001d0129404a09000112001f011f401a35540054
1cef1ff917040a200b300b400b500b040b1d45155a281c301d4d00000003
001d031f1215141212150f0b121e28151210200b300b400b500b040b6c0a
ba01bb001d0124400c032512001201c012d0120212b8013b400a1e091217
121e0a774c182b2b103c2b2b10f65d71435c58b90012ffc0b3170e3f12b8
ffc0400932193f124028143f12b8ffc0b325163f12b8ffc0401323153f12
4021143f1240170e3f1240101b3f12b8ffc0b30f193f12b8ffc040090e17
3f12400d163f12b8ffc0b51839124016392b2b2b2b2b2b2b2b2b2b2b2b2b
5901ede4f4ec5d2b103c2b10c0003f870e2e2b087d10c400183ff5ed2bfc
01f500105dc93130015d2b0171435c58400b0b40170e3f0a40170e3f01b8
ffdeb123392b2b2b59015d01010615141633323736371706070623222635
34370136353426232207350261feaa19130e131634391e5f503b35263320
010f212628172f058efb5a59140f141129561f8635263422247003aa7311
181f0725>IAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
3 6108 80 <00010023ffe8056e038900530245408419010112382d0159095b0c5f0d57
145c385d3a5d3b5e3c5552681369166a2c790c79167a2c783c89038b2c8b
3c89439d039b0e9b369d43a701ab0da137a938af39af3aaf3bae3caa44a3
45b538b63ab648256b3668376a4403520059445252038936884498450365
397a36753a7b447648a339062801253927472f556f5405212253fe4bb801
1c4054285230534d000d3a070149410d0a3a01004b343111114131070753
c600071419191f2930142929300a3a3a1f3b3e143b3b3e00480053481f49
4b1449494b260b4948483b3b3a0a29542830293e3b4b4910228a21b80143
b319142530b80124400c192529400e356029df290229b80234b66f3a01af
3a013ab8020340153b4023353b401b1c346f3b013b500a010a253ead3bba
01c000480203b44bad52c949b8ffc0b2173949b8ffc0b2233549b8ffc0b2
1f3549b8ffc0b31b1c3449b8ffc0b2193549b8ffc0b32a2c3449b8ffc040
172f34346f49ef490249195429173b17491729540a3286182b2b103c2b2b
2b4e10f45d2b2b2b2b2b2b2b4de4e4edf4f4ed5d10712b2bed5d71f45d2b
edf4ed10f6ed2b103c103c103c2b10c0003f3c103c103c3f87052e2b087d
10c487052e182b0e7d10c4870e2e182b7d10c400183fe43c10ed3c10ed01
1112391112390011123911123910f5ed2bfc01f510c93130015d5d5d5d5d
5d0171435c5840110d180c393c180c3900220c394a180c3936b8ffc0b20f
390fb8ffdeb20f3904b8ffdeb20f3900b8ffc0b20f3953b8ffc0b20f3917
b8ffdeb613143e222213392b2b2b2b2b2b2b2b2b2b2b59005d0103363736
373633321615140707123736333216151407030615141716333237363717
0e0223222635343713363736353427262322070607060723133635342623
22070602070603231337363534262322072701bc82573d5f5a353a324217
47a392514f2e3b126e2409060a0a19393221197f5a26232f295b1f02030b
0c0f2a2f8a784f4597ab1c161021253cbd34195e94b91807281f0d3b0903
89fe3d9f507c38204032314ffe01317b443f423a41fe7b7f0e0e0a07132c
4815288c323023309101416f0c1312190e0e2b7fe597ec025d62211b1a18
27ff007537fed6028854130916230c25>IAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
3 7498 82 <0002003cffe803b30389000d001900ad404108020903060a03a413ae18a0
1bb212b216be18065b18591985138c1895139d18a5120736133a19471349
19570856125413070a0c0c11240b070305051724040b14b8038140120780
4b5334078043358f079f070207191a0eb8038140270040170e3f00404b53
34004043350040323500401e350000200030004000a0000500c31b2bc318
2b4e10f65d2b2b2b2b2b4de94e10f45d2b2b4de9003fed3c103c3fed3c10
3c3130015d5d5d005d011402042322263534122433321607342623220215
141633321203b39ffee48689ada9011b8484aba65b4893f760498df70250
96fedaacaf8b930128acae465d63fe5bd05f6701a300>IAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
3 8734 85 <0001002a0000033d0389002900f9404102180c3921180c39510155035e09
5e0a5229aa03ac0faa18a51a09851a951aff2b0389049904021e1f1f0100
4521ea282930004d01021420021f0201212f0d010db8019f402214250606
010728011f01001f1f202114202021201f0a282120103009400950090309
ba0240001f0203b229c920b8ffc0402e17392040343d3420402c35204024
352040223520401f203420401c1d3400200100209f20bf20d020ef20ff20
0620b80188b52b2017324c182b2b10f45d712b2b2b2b2b2b2be4fde45d2b
103c2b3f3c87052e2b087d10c42b183f003c10fde45d0111123911390011
123910f5ed2bfc01f5870e7d10c43130005d015d5d2b2b13250312373633
321615140706232226272627262322070607060706070607072313363534
27262322076b015990af8f5133212622182d1721040207080b110f1a3553
612a1e2a062099b9200f14211538035138fe1a012b77442725423c2d1e1f
130608080e40629c425372177e026d6c2e120c100900>IAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
3 10402 89 <0001002cffe8038a0389002600fb4041b701012840103528400c3528400e
3559025803b604d92104291c3b1c49020338220108090a010c0d0e071807
070120248a00c61501071f200b1f122f123f120312b8019fb70f27184017
0e3f18b8ffc0b22a3518b8ffc0401b2635ef18ff18022018401880189018
cf1805181a281f8a20004926b8ffc0400c14353f264f265f26bf260426bc
0323000702030020ffc0b32c2e3420b8ffc0b22a3520b8ffc04019252934
2040170e3f502080209020a020042020302040200320b8021cb32732de18
2b10f65d5d2b2b2b2bedf65d2be410ed4e10f65d5d2b2b2b4dfde45d003f
3c3f3cf4ed191112392f01121739313001715d5d2b2b2b005d1325161716
171617363736373637363534263534363332161514070606070607230227
262322072c01211f131b11080e7d188414210d0b5d33232a40101a8e9e14
ca25184c193a192e034b3e4a4d719b4efc8a21b31f35281e1b1a442a2032
4533332f4cdbb817d102799d3309>IAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
2 0 0 <0002011c0000051c050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121011c04
00fc2003c0fc400500fb002004c0>IAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
IAAAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/K 46 def
/L 47 def
/g 74 def
/l 79 def
/m 80 def
/o 82 def
/r 85 def
/v 89 def
end
IAAAAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 75 /K put
dup 76 /L put
dup 103 /g put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/DYIULF+TimesNewRomanPS-ItalicMT /IAAAAA+TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/DYIULF+TimesNewRomanPS-ItalicMT*1 
[75{/.notdef}rp /K /L 26{/.notdef}rp /g 4{/.notdef}rp /l /m 
/.notdef /o 2{/.notdef}rp /r 3{/.notdef}rp /v 137{/.notdef}rp]
DYIULF+TimesNewRomanPS-ItalicMT nf
DYIULF+TimesNewRomanPS-ItalicMT*1 [11.3998 0 0 -11.3998 0 0 ]msf
92.7092 284.478 mo
(L)sh
290.564 258.589 mo
(Kol)sh
307.037 258.589 mo
(mogorov)
[8.23065 5.69989 5.69989 5.69992 4.01965 5.69989 0 ]xsh
DYIULC+ArialMT [11.3998 0 0 -11.3998 0 0 ]msf
347.148 258.589 mo
(\000\020\0006\000F\000D\000O\000H)
[3.79379 7.60147 5.69766 6.33603 2.52847 0 ]xsh
298.795 271.517 mo
(\000:\000D\000Y\000H\000\003\0001\000X\000P\000E\000H\000U)
[10.3613 6.33377 5.69537 6.33377 3.16461 8.22614 6.33377 9.49142 6.33377 6.33377 0 ]xsh
319.098 284.478 mo
(\000 \000\003)
[6.66895 0 ]xsh
DYIULD+TimesNewRomanPSMT [11.3998 0 0 -11.3998 0 0 ]msf
328.89 284.478 mo
(\000\025)sh
DYIULE+SymbolMT [11.3998 0 0 -11.3998 0 0 ]msf
334.59 284.478 mo
(\000S)sh
DYIULD+TimesNewRomanPSMT [11.3998 0 0 -11.3998 0 0 ]msf
340.849 284.478 mo
(\000\022)sh
DYIULE+SymbolMT [11.3998 0 3.8989 -11.3998 0 0 ]msf
344.025 284.479 mo
(\000K)sh
326.367 231.129 mo
339.07 247 li
338.549 247.409 li
325.845 231.539 li
cp
326.106 231.352 mo
325.174 235.526 li
323.61 228.223 li
330.428 231.352 li
0 0 0 1 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/FAAAAA+ArialMT 7 GetGlyphDirectory
55 <001C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A59
5D3927> |
78 <001C60D8A8C9B7A73DB90BDE2D32BC36BC1297E20AB90FA9E27E830D444A
320C85D226D41FA634DF03A4FEE2FD90BF314563D4BF5C68> |
86 <001C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B
5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214
E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEAB
D96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046
E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB
3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8
435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F
4172D53C8FCAF4D28F2B78D3A4BF03> |
71 <001C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D962
1458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6
DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB6
12941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF
13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |
73 <001C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C
5663BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61
CF3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |
75 <001C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E
131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD4
1AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2
DFA8> |
90 <001C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6F
EA646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D7
264371419D7043A117419C0FAF4C> |
!
end
end end
%ADOEndSubsetFont
DYIULC+ArialMT [8.0468 0 0 -8.0468 0 0 ]msf
125.229 19.5612 mo
(\0007\000X\000U\000E\000X\000O\000H\000Q\000W\000\003\000N\000L\000Q\000H\000W\000L\000F\000\003\000H\000Q\000H\000U\000J\000\\\000\003\000L\000V)
[4.62198 4.46837 2.67387 4.46837 4.46837 1.78075 4.46838 4.46835 2.23135 2.16385 4.01773 1.78076 
4.46835 4.46838 2.23135 1.78073 4.01776 2.16385 4.46835 4.46838 4.46835 2.67389 4.46835 4.01776 
2.23138 1.78073 0 ]xsh
125.229 28.7989 mo
(\000J\000H\000Q\000H\000U\000D\000W\000H\000G\000\003\000E\000\\\000\003\000O\000D\000U\000J\000H\000\020\000V\000F\000D\000O\000H\000\003)
[4.46358 4.46359 4.46358 4.46358 2.6691 4.46356 2.22659 4.46356 4.46359 2.12674 4.46359 4.01297 
2.22656 1.77597 4.46356 2.6691 4.46359 4.46356 2.6691 4.01297 4.01294 4.46359 1.77597 4.46356 
0 ]xsh
125.229 38.0045 mo
(\000I\000H\000D\000W\000X\000U\000H\000V\000\003\000R\000I\000\003\000W\000K\000H\000\003\000I\000O\000R\000Z\000\003\000L\000Q\000\003\000W\000K\000L\000V\000\003)
[2.23135 4.46838 4.46837 2.23135 4.46837 2.67387 4.46838 4.01773 2.23138 4.46835 2.23138 2.23135 
2.23135 4.46838 4.46835 2.23138 2.23135 1.78073 4.46838 5.80414 2.23135 1.78073 4.46838 2.23135 
2.23135 4.46838 1.78073 4.01776 0 ]xsh
125.229 47.3146 mo
(\000Z\000D\000Y\000H\000\020\000Q\000X\000P\000E\000H\000U\000\003\000U\000D\000Q\000J\000H)
[5.80009 4.46431 4.0137 4.46432 2.66982 4.46432 4.46432 6.69321 4.46432 4.46432 2.66983 2.12674 
2.66983 4.46432 4.46429 4.46432 0 ]xsh
107.197 38.1884 mo
122.918 27.1984 li
122.509 26.6394 li
106.824 37.6294 li
cp
107.011 37.9274 mo
107.272 33.6434 li
103.695 40.2374 li
111.108 39.1204 li
0 0 0 1 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
DYIULC+ArialMT [8.0468 0 0 -8.0468 0 0 ]msf
233.305 19.5612 mo
(\0007\000X\000U\000E\000X\000O\000H\000Q\000W\000\003\000N\000L\000Q\000H\000W\000L\000F)
[4.62198 4.46924 2.67471 4.46924 4.46924 1.78159 4.46924 4.46924 2.23221 2.16385 4.01859 1.78162 
4.46924 4.46921 2.23224 1.78159 0 ]xsh
233.305 28.7989 mo
(\000H\000Q\000H\000U\000J\000\\\000\003\000L\000V\000\003\000G\000L\000V\000V\000L\000S\000D\000W\000H\000G\000\003)
[4.46432 4.46432 4.46429 2.66983 4.46432 4.0137 2.22729 1.7767 4.0137 2.16382 4.46432 1.7767 
4.0137 4.0137 1.77667 4.46432 4.46432 2.22729 4.46432 4.46432 0 ]xsh
233.305 38.0045 mo
(\000E\000\\\000\003\000Y\000L\000V\000F\000R\000V\000L\000W\000\\\000\003\000L\000Q\000\003\000W\000K\000L\000V\000\003)
[4.47083 4.0202 2.23383 4.0202 1.7832 4.0202 4.0202 4.47083 4.0202 1.7832 2.23383 4.0202 
2.16385 1.78317 4.47083 2.23383 2.23383 4.47083 1.7832 4.0202 0 ]xsh
233.305 47.3146 mo
(\000Z\000D\000Y\000H\000\020\000Q\000X\000P\000E\000H\000U\000\003\000U\000D\000Q\000J\000H)
[5.80008 4.46432 4.0137 4.46432 2.66983 4.46429 4.46432 6.69324 4.46432 4.46429 2.66983 2.12674 
2.66983 4.46432 4.46432 4.46432 0 ]xsh
319.81 74.4005 mo
297.978 52.5314 li
298.426 52.0474 li
320.294 73.9155 li
cp
320.071 74.1395 mo
320.517 69.8915 li
322.902 77.0084 li
315.786 74.6235 li
0 0 0 1 cmyk
f
222.986 114.597 mo
174.294 89.7114 li
174.703 88.9664 li
223.358 113.852 li
cp
223.47 112.138 mo
228.537 116.981 li
221.645 115.715 li
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HAAAAA+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+SymbolMT 2 GetGlyphDirectory
72 <001C60D8A8C9B76427EE4D35B48FF6C8A447A79A83700B9F95A976D818D9
A98E8B7A49F1EC375942EA66DCC18C1E16B6A55CF8ABCDAA014C1735D6A52A2C
107B1C92981C7041973D058DFAD67CD283C52E0CF8142E9526E3B06CB02A5315
3909B3A10B6E3EBF8837B2FA9F8A318A3C36AD66BC3251418B75F03A65BA4877
EB0DF33B78C3A33594A01F42F4E068784CB4727A5ECE47B50B855CABBCD3105E
1DDEFA41DF31CCF2D1AAD87A9CB62C587184A7BE86DE94E0C09B7B2756112DB1
D1878449235AE3EEC96483822777D03C5C9D4966353E0079789E13EBFC15AAD1
BC654DD64202DF471F7C39FB1AF0692A6EF98DF1BB3936FCA49DAC9ECF1A68A2
427318E3F4F082D619FFB6BBB8042B7C0C2CA8637C2F8ADA884B85924D81A947
3DB555DD62B073C1E0> |
97 <001C60D8A8C9B79676FBD072A00A4B244F8764BDE1DCFF805BF2BF946E1C
CC0BBA0F294CEBF63219BBA29041A88A8419023CD90F784757F25B3DF6546792
87F5849410E56B0F634AF3F260AA4A7B7E42C912AAF03D6D83296927BE1356D6
C2A81C158EA06391933D0A2D27AAA655AA237A35E1CC47B6> |
!
end
end end
%ADOEndSubsetFont
DYIULE+SymbolMT [9.388 0 3.2109 -9.388 0 0 ]msf
174.778 169.846 mo
(\000H)sh
DYIULE+SymbolMT [9.388 0 0 -9.388 0 0 ]msf
181.707 169.771 mo
(\000a)sh
%ADOBeginSubsetFont: IAAAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYIULF+TimesNewRomanPS-ItalicMT gcheck setglobal} if
2 536 10 <0001010d03230217056b000e0037400a0b0e1b0e2000030e0900b80184b6
06031017171a09b801b0b500190fbcfb182b4e10f44dfd4e456544e6003f
4ded0111393130015d011336373636333216151407060703010d1f0d0d13
452b242a0a0d3d8a032301287e2c3f37281f171c2681fed9>DYIULF+TimesNewRomanPS-ItalicMT AddT42Char 
3 9816 88 <0001003cffe803c40389003c01974084083a193a021235314731543c6a16
79157a16ac15c500fa1509552e543b6a09034b1554005a150336003c1502
2128293902ab090139263f284f285f28f515f616f53907143b3c3c13090a
262738393a16170533153c1326271b3d2e33331f1b20141b1b202b073c00
060003031f133c1413133c180e0b1b133d28201b3c13100a8a096003b802
03401b3cad134043351340181934134015351f134f135f138f139f130513
b80234400c33251b402e012e252095121bb8ffc0b23a351bb8ffc0b31819
341bb8ffc0b31415341bb8ffc0b32c34341bb8ffc04019232834301b401b
a01b031b193d091b1713171b133d0a77c3182b2b103c3c2b2b2b4e10f45d
2b2b2b2b2b435c58b51b4023123f1bb8ffc0b3120b3f1bb8ffc0b116392b
2b2b59014df4ed5d10edf45d2b2b2be4edf4ed2b103c103c2b10c0c0003f
3c870e2e2b057d10c400183f3c3f870e2e2b0e7d10c40111123939111239
12173910c910c9870e103cc43130005d01715d5d5d5d5d435c5840181518
0b3915180c3900220c393b220c3930220c391e220c392b2b2b2b2b2b5901
5d0103061514163332363717060706232226353437363702062322263534
3713363534262322060727363736333216151407030615141633323e0237
3703c4ae270d0b1129531e4f533733272c0d104baae5622e402c5720110a
152a4a1f4b544036252f285e271915216ab17341160371fdac852312111f
6c177d3b262c2322384af8fee9d440314b9b01356f1b0c111e601674372b
2f25368bfebd8423131742e3c7d94c00>DYIULF+TimesNewRomanPS-ItalicMT AddT42Char 
DYIULF+TimesNewRomanPS-ItalicMT /CharStrings get begin
/quotesingle 10 def
/u 88 def
end
DYIULF+TimesNewRomanPS-ItalicMT /Encoding get
dup 39 /quotesingle put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYIULF+TimesNewRomanPS-ItalicMT*1 
[39{/.notdef}rp /quotesingle 35{/.notdef}rp /K /L 26{/.notdef}rp /g 4{/.notdef}rp 
/l /m /.notdef /o 2{/.notdef}rp /r 2{/.notdef}rp /u 
/v 137{/.notdef}rp]
DYIULF+TimesNewRomanPS-ItalicMT nf
DYIULF+TimesNewRomanPS-ItalicMT*1 [9.388 0 0 -9.388 0 0 ]msf
188.41 169.771 mo
(u')
[4.694 0 ]xsh
%ADOBeginSubsetFont: GAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GAAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory
22 <001C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FEB7
1815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7E1
544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185F8
F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB04766
1CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217D3
3D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598CF
2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA143A> |
!
end
end end
%ADOEndSubsetFont
DYIULD+TimesNewRomanPSMT [6.7056 0 0 -6.7056 0 0 ]msf
196.423 165.822 mo
(\000\026)sh
DYIULD+TimesNewRomanPSMT [9.388 0 0 -9.388 0 0 ]msf
199.105 169.734 mo
(\000\022)sh
DYIULF+TimesNewRomanPS-ItalicMT*1 [9.388 0 0 -9.388 0 0 ]msf
201.715 169.734 mo
(L)sh
%ADOBeginSubsetFont: JAAAAA+Arial-BoldMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (JAAAAA+Arial-BoldMT)
%%Title: (JAAAAA+Arial-BoldMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /JAAAAA+Arial-BoldMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-628 -376 2000 1056} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4503 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 20 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A93
6AA182F5809A9> |
36 <001C60D8A8C9B6079F6DCA0663EB737730AA5B536F6C6DD813B60E66ABDF
76C173FB0AA7AA75663A2785C98A4A4A611F61872CB7CA29BB> |
85 <001C60D8A8C9B7361F02EEC91E54B85D1C77E667FE2BCF3D09A421FBF63C
B630EA2A0B7B19FFD8078B4DB5A7731C633809BCAB3FF296D65B89F29DE6B6DB
35AA635F12FEC0F1664A8FB613C79352FA72> |
72 <001C60D8A8C9B7EF322BF270AB151730C1576B3DBF6DAC6B05EF7C7C2AC3
550E4D7D76EEB5EC00E2AE0B63EA674701E41362C9EF4C943E6044930A81C028
8C730E9CD4222EC82D37FE43450E9A846C17FEBAA9742B3180B655FFA4E0E014
EF214E09E7DE6E45A7476C6DEA21B47E198DDC2AD648DA39E6CBF2981071855A
A94524E4E0809AB2B25573430347DD> |
68 <001C60D8A8C9B7EF322B767253CD3BE18E6883E9BFEE680E471A3E543E6B
629FFE599C78BF6E9BC360B4FD3F4193BE88F8A133134BAA650EBC31A9DBCA73
D443463241F1A95A036612031AED6950283B0D14D29C497685C55C7946BF118B
40E370FC30C35C6DDC0B89863AEC8E7000DED8B394346462262BD43999923C02
BB76E45D38F5FACA7247DBA2EBA6371EEFDE7DB20E4C849532AD601D5FE565E2
F9524F3166F0EDA1C9CBD6F2D9FAE6CBD991E5FC9CACD3E5ACCC612FA46CAB68
3778C9E93119C2E309BBBA2FB6B108D4ACC24630A4E27912F2F48E37DD6F256C
920ECC30772CD6DD1CCCB84D330E3FAA> |
3 <001C60D8A8C9B854D00D> |
88 <001C60D8A8C9B7D8BE193D97D4CEC9E264886B4FEB6039471A932F20C88E
939BABF490859EEC52AD38B7ED294F8DF2A47649EF77BF43349A736D065D0A25
3D952638D54F7BA1B47314F68FC1495C51454777F8F9475426838BE461BAFE9B
F3E443E03AAD9292AF57449A5275904AD9> |
81 <001C60D8A8C9B7D8BE193B13518E6892DBA9B266D0A17D5C8CBB8FCA3DEC
31FFDE21FB19188C5C709BB859EE16635D8123C09E9F6380448F624FEDEAFC78
CB8E4436A865BB0CB81152FE1F90E6EB1DE7D9B62F15D5F2855507D6B695B1CC
6AFD11F003818163793142F6A0F46BD84EFADF> |
71 <001C60D8A8C9B7D8BE1937528A8A04A3F08B6D80EAB145BDD9DBE53FB1B7
0A6DDBF10422FFF8F4C48F788DD104B24EA5229392446A977753676010F47763
954952B19E372D9318BC5C7A48B7A85FDEA74862756E58887CA2F53B9D7C319D
D7A84656FBF89C0C66533E86D0B18AA2C13EC41ADA69D4E07EF68978C6DC11D8
A9705A6EC736D21DD4607DF3> |
70 <001C60D8A8C9B7EF32242001ABD2AFBBD336641D8D7284783472C96CFCC4
34DFC100FC24422711A9090DEA4D32109037578992AFF27835B7F260887A799C
BA44C497ED942D76A3A4BD63536DE6F757481EB22D2DEF055F331ED962220273
9AC583596554B76ADC212E19C7FBCE810B4022B5DAB3AF3C114AF2730DCBE9D3
5CB6B42E872730D77BAB> |
89 <001C60D8A8C9B7EF322BF34066C52D57BCC44B5A90A4FC7E0180FB67572B
DB310F0242B864A0AE1AC2B2D513C4B2167B53904E1D55E8A8> |
32 <001C60D8A8C9B7F374868AC90DDCCE7F3185A6C28BF965D12D54ADDA493C
3D415163DB7230740CE2> |
55 <001C60D8A8C9B7D8BE19809EC35BBBBC4A9DCDD5AC6ABFFD5901D001A83F
8CD3372E99> |
82 <001C60D8A8C9B7D8BE34A30C11766266259B98A0BA89715D82F7092153A6
228252D7594BDD75B2A7C57DC89088F8B1FFC43993725AE434A67B356F5F6B64
D528A1696640F00DD016EBC232B8C863EA85B4B724E805002B9447A61792050E
5F2AB51B8800BF6303526C74FB360B7027D54FFCEDAF13BF8EA7CB1A81691C0A
4FB25E1EA64C0904433C6A5F35BBF9DD5C4CBFC1A5> |
87 <001C60D8A8C9B81F2C3AD0BF8CA40D7105A9B3D27345F202DEBDE44606EF
D0E90137AE13DC9D19FB7B4ABCA40FDADEB59FF02A690A47D6F26E8BDAADCFC0
513C14FCD80BF39C6AFCEFE1132622D45FBB576E32F86682C5BCCAD00B4E7E37
5350009EFCA5AC835906F56B697B29> |
79 <001C60D8A8C9B854D0F4565C5D96D196F316A2594284F4> |
78 <001C60D8A8C9B7EF322B75AAFD4DB9E7AD574572B7D2556469383B3D4CBB
5184BAC1997D5B0A13D1B495BE0C6B6EE29F273838B3F19F49> |
76 <001C60D8A8C9B854D0F456B21D2F64F910BA7B8B592C84A4B1CA21D58F66
78BEC800D8864E53D53A> |
74 <001C60D8A8C9B7D8BE2780ECF91BB8FE73517B0190DDC8DBC9897295332E
6D8EF13268DE217D7EA63F2C2488BA6624154001DFCD86A24A51CFE6922F8614
F4FD4481342B3992244B419F0D448BA14CBCD530939FD538BD00615A031E3CBF
1609B0E4C3D7F5A051C575D052C1A51F88B318CA9D0C7CFDFA53AA8FB2F2EE27
4EE2F4C85657CA9E748262BB03EF446591D320994414EE439D72B9883F38366A
41CF501DCE32006C591422CCF439307E4D3088D90FF7CD2955301C96A46D1D15
45AF9D499025D541CB2077BD42919F91257F222D868E80527F0D65> |
92 <001C60D8A8C9B7EF322B7536945647B4BA07C8DC342FF58A782AE941212D
A936B500226D637B658433D28B8CA55D32CD6B9B1269E0231AED7EEAE92EA48D
1AB958BAD61D13401B6A794D4ED73191B8ADB547A985247846F2CB1E080C4F3C
74337DE0> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /JAAAAA+Arial-BoldMT-Identity-H /Identity-H 0 [/JAAAAA+Arial-BoldMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DYIULG+Arial-BoldMT /JAAAAA+Arial-BoldMT-Identity-H findfont ct_VMDictPut
DYIULG+Arial-BoldMT [9.388 0 0 -9.388 0 0 ]msf
120.199 192.613 mo
(\000$\000U\000H\000D\000\003\000X\000Q\000G\000H\000U\000\003\000F\000X\000U\000Y\000H\000\003\000 \000\003\0007\000R\000W\000D\000O\000\003\000N\000L\000Q\000H\000W\000L\000F\000\003\000H\000Q\000H\000U\000J\000\\)
[6.76968 3.64355 5.21127 5.21127 2.60141 5.72754 5.72754 5.72757 5.21127 3.64355 2.49911 5.21127 
5.72754 3.64355 5.21127 5.21127 2.53668 5.47412 2.60141 5.03192 5.72754 3.11771 5.21124 2.60144 
2.49911 5.21127 2.60141 5.72754 5.21127 3.11768 2.60144 5.21124 2.49915 5.21127 5.72757 5.21124 
3.64355 5.72754 0 ]xsh
199.771 205.728 mo
(\000 \000\003)
[5.47699 0 ]xsh
%ADOBeginSubsetFont: KAAAAA+TimesNewRomanPS-BoldMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KAAAAA+TimesNewRomanPS-BoldMT)
%%Title: (KAAAAA+TimesNewRomanPS-BoldMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KAAAAA+TimesNewRomanPS-BoldMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-558 -328 2000 1056} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4685 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 4 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB
222483BD74F8B> |
22 <001C60D8A8C9B7A73DB994B79BEF9152870EEB88578A977CDB80332CB664
6324FF753D63D77E901BA09B5E7E16CAB618D56F8EC2AFA51F815F877513A30D
58C972F2F2343929F60E9C40DEF930E995F25C27FB36EA72F92C3260453715D4
CB043B3A9866DADCCF76893A2302215F52B0EBC345E6385F3EB0A38197228391
CFA45A1202D089E1C0F1AB3128A995D151C5602FDA9AB6E6298E250EB8655140
C7367303D54022804CA9DBE9E5405D8E68410C0DECF2FC9118D2891ADCA32408
7EDC2210E57E17392288E70C2DB38FAD49C05119> |
21 <001C60D8A8C9B7A73DB6EDC2B380DD43A970F7F57014109E214DF937D89C
36048744D099D369174BD4F76D7970D206BA95D523D634A27BDA42353F38E5DD
E816C3622BF9A30D25A21149A7B3017CEB6E3398206069B0333A0A8DE32436B8
266E85F7513F52DCB0F8D99F507D40330C66384B090EEFA50D739A45A3A6785B
4AD064DC94007E5C2325C4BD> |
18 <001C60D8A8C9B854D0F45CD934ADBD41B9C15E911C55E7F5C78ADBD2> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KAAAAA+TimesNewRomanPS-BoldMT-Identity-H /Identity-H 0 [/KAAAAA+TimesNewRomanPS-BoldMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DYIULH+TimesNewRomanPS-BoldMT /KAAAAA+TimesNewRomanPS-BoldMT-Identity-H findfont ct_VMDictPut
DYIULH+TimesNewRomanPS-BoldMT [9.388 0 0 -9.388 0 0 ]msf
207.817 205.728 mo
(\000\026)sh
%ADOBeginSubsetFont: LAAAAA+TimesNewRomanPS-BoldItalicMT Initial
ct_T42Dict begin
-0.547 -0.305 1.398 1.031
 256 array 0 1 255 {1 index exch /.notdef put} for  /LAAAAA+TimesNewRomanPS-BoldItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32f932b9c7000000cc000000606376
74200b9ce43b0000012c000007a86670676d4a5f6448000008d400000634
676c7966ac9d927d0000921c00000afe68656164e7a0997c00000f080000
0036686865610e56116400000f4000000024686d7478f24f665700000f64
000037e86c6f63610096a2c80000474c000037ec6d617870134c03bf0000
7f38000000206e616d65aa5bde1500007f580000088f70726570d3359107
000087e800000a32676469720000000000000000000000000003034c02bc
00050008059a0533002c0125059a0533004c03a000660212010502020703
060505090304e0000eff4000785b0000000100000000544d432000210020
fffc056bfe460133072101bb400001bfdff700000383054c000000200008
058e0000054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000000fc000000fc00000000000000000025
00f30120005f005500ea0032007400cf0055004b00af013f000900f50108
00260080001701540002001600b800d3005000f00023ffbe00dd00f70035
ffe9001102b6004900a901490158002e003b008601080023003f0039003a
004e00e3013f003d010a000900710108feff004c0082009c00c700d80015
003a006d035105d800280028009f05b800500064001500da015b017cffc2
ffd8fff40099ffff001d002d00d9011c01740446004e007200be00dd09b5
0038004b006d009d0118001b003c005c0069007a00a800c60122fff2000d
008600e3022b055200300047009100f4040104c9ffafffc1ffd5002c003b
003b003e004b006b009900a500b801c002210343ff8c0041004b005f009a
00a600be010a01dc031e0390ff6700250031005d006e00b600c000d000d3
010a015001bc0274027b02d7000900360048004c005c006f008400930095
00a600a800ac00b000b700bc00c00104013601370145019403b6fd81fe3f
00070019003a003b005b00b800c500e100f801160127012c013401470149
015d01bc03ed04740532053eff00ff970008000f005c006d007000820089
008b00a700c100f600f80129017aff72ff88000000000025003e0059006d
007100720081008100bc00dd00de011401150150019c01d6027e0404041c
ff7b002000390046004c004d005a0068006c00720080008300a300ce00d1
00e200ed0107011f0126013f016a01e0035e03a303a703cc05d805f0fed8
ff78ffaeffe1ffe7001900240041005500580071008200860088009000b0
00bb00c200c400d000ed00f700f801150118011f012c015e017c019801a2
01cc01d201fa022b026d02cf02cf02df0333039103e304ab04fc04fe0588
05e706bffed1ff4a000000010003000400170024003c004d0056005c0067
007700a800b000b800c300c600c800e900eb00f500f8010a010c01270135
01350139013f0149014d0197019801c701ee023d02500258026d026f0294
02b30300031a032a0361039603a104330440047904da04e804fb057b058c
05ab0761fe60fe99ff00ff13ff2fff47ffed00180031003f004c006b0074
0078007c00840094009700b000b600b700d800da00e200e400e500eb00ee
00ef00f600fa0106010c011101110114013b013e01450149014d015b0164
016f0184019101b301b901d101e101e501ef0205020602220236023b023e
024102600276029a029a029d02c402ee03130327032b0373038c03ba03c2
03d2040f0485051505320532054905610595069906a80727074807620810
08ccfd2afddefe23fe44fe67fe96feacff24ff41ff5cff61ff9effa3ffb7
ffc2ffc5ffcaffddfff0000000000003000800100018001c0023002b0030
003e0046004b0052005e005e006e007a007b00830085008a009100920098
00a800af00b600cc00ce00cf00d200e700f100f200fa01010108010b0112
012601270127012e013601370138013b013e0140015b016a017001740179
018201840188018d0192019b01a001a001a001ab01b801bc01c001cc01da
01dc01e001e0020102100214021d022902300230024302460269027a0284
029502a302b402c102c202cf02dd02e102ec02f00310033a034503880399
03ad03bd03d403d503e303ea03f304260426046e04d104e00513054b0576
05a305b705c205f8063b065b06b806e80706071a0724075007a907d407ff
082700f6012600f100df000000000000000000000000038402af02f301b8
0205017a04910491049e019f0425049e019f049e019f027a005101ac0261
0319033b021c033b01ee01880278020a01ee033b029f002400240261019e
015e017100440149028400990284009902840025004100450298020501c9
024904440188044400000000023005d30415035d01810023016e003504c9
005b059604910025026202dd01d00434030a0319031e03c1049e05e8035c
00000282ffef040d03ce0209010c01f6025303a202df02d0000a00d60082
00000032010901a201af01770204027a019e02eb019b01ec024e0326045b
03ee03c3042600b703620031004f0027ffee01240096036700d703750291
032603260041004501d7007402ff02a50216029f017a0100031c005000b7
012b016800f9003101a8013a00a801cc00f3012502020021007301c70603
021b0142010501e1012403350272018c044301e50282010f02fe01ee034a
02c50210024e022a02a501cf005f00b1026603b203580115008e015d02a5
00d1fee201b0010b015a0395005900f70783031b008b045d00a101440100
009400b4febf03c600e803ce017303e6012e0222049500390023033b01b8
000003f00140015303b401a805ee061801c6007d00cd00d1037c008500bd
00ccfc47fcb1008402a7fccb046402ba0167032b00700136000001320068
030c0155001bfe6fffc60249013102f1fe79feb4fcf2ff4203adfc0efc61
032a00c3009100a10077004c0002015e008400860023005d004b010a01b8
0086ffc500a80072008800590028009901350015003d0056007a00f801d6
00090007000f00e2001700bc016a00ed0274005b0136000000ab00800050
05a50090fe40013a004800db018b00b300480420040e022b0457008c0082
0082002203d703f1045840425554403f3e3d3c3b3a393837353433323130
2f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b01723
70b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b019
23442d2c2045b00325456164b050515845441b2121592d2cb00143632362
b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243
588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0
a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb00225
46608a46b040618c482d2c01182f2d2c20b0032545b019234445b01a2344
4565234520b00325606a20b009234223688a6a606120b01a8ab000527921
b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279
b31940201945208a54582321b03f1b235961442d2cb110114323430b2d2c
b10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e
0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c4bb06451584569b00943608a103a1b212110
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b
2d2c3eb02a2a2d2c352d2c76b802df23701020b802df4520b0005058b001
61593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648b
b82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8155562
1bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4000100
000015b00826b00826b00826b008260f10161345683ab001162d2cb40001
00000015b00826b00826b00826b008260f1016134568653ab001162d2c4b
53234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d
2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb013435803
1b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2c
b012435c580cb00425b00425060c6423646164b807085158b00425b00425
012046b01060482046b0106048590a21211b2121592d2cb012435c580cb0
0425b00425060c6423646164b807085158b00425b00425012046b8fff060
482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b21
21592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c
5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58
381b2121592d2c462346608a8a462320468a608a61b8ff8062232010238a
b903bc03bc8a70456020b0005058b00161b8ffba8b1bb0468c59b0106068
013a2d2cb1020042b123018851b1400188535a58b910000020885458b202
010243604259b12401885158b920000040885458b2020202436042b12401
885458b2022002436042004b014b5258b2020802436042591bb940000080
885458b202040243604259b94000008063b80100885458b2020802436042
59b94000010063b80200885458b202100243604259b12601885158b94000
020063b80400885458b202400243604259b94000040063b80800885458b2
02800243604259b12801885158b94000080063b81000885458ba00020100
0002436042595959595959592d2cb0024354584b53234b515a58381b2121
591b21212121592d0001000000070000d27da3a05f0f3cf5081908000000
0000a31fbca400000000d67a920bfb9ffd8c0b3508420000000900010001
00000000000100000721fe4500570ac7fb9ffa460b350018000700000000
00000000000000000dfa0639011c000000000200000002000000031d0071
04710151040000500400004f06aa00dd0639005e0239013f02aa006702aa
ff19040000f6048f00500200ffc602aa000d0200ffe50239ff5a04000071
040000300400000804000019040000240400004e0400007b040000f10400
004c0400005702aa005202aa0001048f0050048f0050048f0050040000b5
06a8fff80556ff8c0556ffcc0556008605c7ffb60556ffb80556000005c7
008e0639ffbe031dffb80400fff00556ffbe04e3ffbe071dffbb05c7ffbe
05c7006d04e3ffc305c7006d0556ffbf0473ffd304e300a305c700c00556
00f3071d00fc0556ff8404e300be04e3ffc802aaffc5023900a002aaff1d
048f00d00400ff4c02aa00f40400002804000013038d003604000029038d
002d02aafeb80400ff9604730019023900290239feb60400000c0239001e
063900140473001a040000320400ff0604000027031d0023031dffff0239
002704730046038d0039055600390400ffa3038dff40031dffeb02c90057
01c3009f02c9ff41048f00270556ff8c0556ff8c055600860556ffb805c7
ffbe05c7006d05c700c00400002804000028040000280400002804000028
04000028038d0036038d002d038d002d038d002d038d002d0239002d0239
002d0239002d0239002d0473001a04000032040000320400003204000032
0400003204730046047300460473004604730046040000b1033300b40400
006d040000490400ffe402cd00640400ffd80400fea305fa006e05fa006e
0800fffd02aa019202aa00b904640032078dff8d05c7005505b400350464
001e04640032046400320400ffed049cff8003f4004f05b4002b06960064
04640033023100000221008c026600b00625002805c700260400001f0400
0009031d002804d90049046400540400ffff0464003204e5001a04000053
0400000e080000af0556ff8c0556ff8c05c7006d078d007f05c7002e0400
fff10800ffec040000f2040000f202aa012302aa01260464003203f4002f
038dff4004e300be0156fe870400002102aa007802aa00390473fe910473
fe900400fff40200009b02aa001c0400ffc4080000340556ff8c0556ffb8
0556ff8c0556ffb80556ffb8031dffb8031dffb8031dffb8031dffb805c7
006d05c7006d05c7006d05c700c005c700c005c700c00239002d02aa0097
02aa00b602aa00a802aa010f02aa018b02aa015002aa000b02aa011f02aa
ffff02aa00df04e3ffc8023900000473ffd3031dffff04e3ffc8031dffeb
01c3009f05c7ffbe0400003404e300be038dff4004e3ffc10400ff0604d9
0048048f009a0266007b026600650266006f06000079060000790600006d
0400ff7405c7008e0400ff96031dffb80473ffd3031dffff05560086038d
003605560086038d0036040000290400010102ab01ef0556ff8c04000028
0556ff8c0400002805c7ffb605fd002905c7ffbe0556ffb8038d002d0556
ffb8038d002d04e3ffbe0239001e04e3ffc8042b002104e3ffbe0300001e
05c7ffbe0473001a05c7ffbe0473001a05c7006d040000320556ffbf031d
00230556ffbf031d00230473ffd3031dffff04e300a30239ff7f04e300a3
0440002905c700c00473004605c700c00473004604e3ffc8031dffeb04e3
ffc8031dffeb04d5ffbf061b007006500081046d00320419002503480011
04500042038d003404ae00390400ff4c0546007502c8000907c000240800
004f040000990800004f040000990800004f040000980400009807d5016a
05c000dc048f005004cd0099048f002604d5022204d5010505abffe904ed
01c005ab027e05abffe905ab027e05abffe905ab027e05abffe905abffe9
05abffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905ab02d605ab006605ab
ffea05d5ffff04d500920800000007eb013007eb012007eb013007eb0120
04d500b204d5008004d5002a082b0198086b01b807550010060000f40600
006f0440003a0540003704c0003f0415004004000025060000550695ffb8
046b004b05c0005a0240013f046b015106ab0099036b002404d5009202d6
005c02d6005c04d500b202d6004d0556ff8c0400002805560086038d0036
05560086038d00360556ffb8038d002d0556ffb8038d002d0556ffb8038d
002d05c7008e0400ff9605c7008e0400ff9605c7008e0400ff960639ffbe
047300190639ffbe04730019031dffb80239002d031dffb80239002d031d
ffb80239002d031dffb80239ffab0400fff00239feb80556ffbe0400000c
0400000c04e3ffbe0239ffb405c7ffbe0473001a0645ffbb0453001805c7
006d0400003205c7006d040000320556ffbf031dffbe0473ffd3031dffff
04e3009f0239000405c700c00473004605c700c00473004605c700c00473
004605c700c004730046071d00fc0556003904e300be038dff4002aafeb8
0556ff8c04000028078dff8d05c7002605c700550400001f02aa0107071d
00fc05560039071d00fc05560039071d00fc0556003904e300be038dff40
02aa016502aa00680400004904cd005a060000790600006e0600008c0600
00c402aa002c02aa000b02aa019202aa00460556ff8c0637004007290040
040c004005d90040060000400648003e0239fff50556ff8c0556ffcc0504
ff9e0556ffb804e3ffc80639ffbe031dffb80556ffbe0556ff7d071dffbb
05c7ffbe0546ffd105c7006d0639ffb804e3ffc304f4ff9604e300a304e3
00be0556ff84066600f605f8ffee031dffb804e300be046d003203480011
046400320239002d03eb00490419ff540354003f0387001c046400320427
00510239002d043d001b038dff930473ff82038d00390398002e04000032
041fff600391004603eb004903b8ff510558007905c9003b0239002d03eb
00490400003203eb004905c9003b0556ffb8068b009204d5ffbf0542005a
0473ffd3031dffb8031dffb80400fff00744ff8807cfffbe067d0092056d
ffb8059100cb0639ffbd0556ff8c0515ffdb0556ffcc04d5ffbf0577ff15
0556ffb80758ff800412ffcc0639ffbd0639ffbd056dffb8057dff87071d
ffbb0639ffbe05c7006d0639ffb804e3ffc30556008604e300a3059100cb
06cd00930556ff840639ffbf05fc00f60902ffbd0902ffbd061500dc07c1
ffda0512ffd9053500080873ffb30583ff7a0400002803fe004103930034
02f4ffeb03f8002e038d002d079efff7031fffd70473004604730046040e
0019041bff9e057bff9e0471001a040000320473001a0400ff06038d0036
06390014038dff4005ba00390400ffa3047300460433006306aa004a06aa
004a0437003c058d005903a800590352ffe705d70019041fff82038d002d
042f00180325ffdc0352002d031dffff023900290239002d0239feb60546
ff9d05b4001904730019040e0019038dff3f0473003d03c3ffbb02f4003f
080000410752ffad045e001c0000fefb0000ff3a0000ff380000ff380000
ff3a0000ff3a0000ff3a0000ff380000ff38000000770000ff3a000000f7
0000feb5030000a50000fff302aa003e0000037a0000003602aa00520424
ffc503bdffaf0305ff7b038300ab0419fff5027800b6029300b804180003
04200066023e00b1039400a80386ffb5038c009c03daffe10435fff90270
005f0292ff9503a600570410ff9d03e7007e03a1ffbc046800b103e5ffdd
03a1ffb403c000ae056a00bc0407ff8504f000b604b600b1047c00b101d3
0070037600700612fff7027800b6039400a80394009c0399ffd8038cffd8
0410ffbb056a00bc056a00bc056a00bc056a00bc0424ffc50424ffc50424
ffc503bdffaf0305ff7b038300ab0419fff5027800670293003504200066
023e0067039400a80386ffb5038c009c0435fff90292ff9503a6005703e7
007e03a1ffbc03e5ffdd03a1ffb403c000ae056a00bc0407ff85027800b6
03bdffaf0386ffb503a1ffbc0455fff60000ffdc0000ff250000ffdc0000
fe510400003d0800000005c7006d044b0032063300c004cb00460000fed1
0000fdb60000fda10000ff7f0000fefc0000feac0000ff350000ff080000
fe390000fe850000fe570000fe1c0000fdbf00000051000000260000fe72
041a001206000079060000650000ff000000fe320000fe620000fdab0000
feca0000fde40000fd7f0000fce50000fcac0000fd610000fd4d0000fce9
0000fc030000fbbd0000fbbd0000fc030000fb9f0000fe840000ff8c0000
fe1d0000fbbd0000fca70000fd1d0000fd990000fc4f0000fd0b0000fc93
0000fc430000fc430000fc110000fd4a0000fd0d0000fd4a0000fce50239
00290556ff8c040000280556ff8c040000280556ff8c040000280556ff8c
040000280556ff8c040000280556ff8c040000280556ff8c040000280556
ff8c040000280556ff8c040000280556ff8c040000280556ff8c04000028
0556ff8c040000280556ffb8038d002d0556ffb8038d002d0556ffb8038d
002d0556ffb8038d002d0556ffb8038d002d0556ffb8038d002d0556ffb8
038d002d0556ffb8038d002d031dffb802390029031dffb80239fffd05c7
006d0400003205c7006d0400003205c7006d0400003205c7006d04000032
05c7006d0400003205c7006d0400003205c7006d0400003205c7006d044b
003205c7006d044b003205c7006d044b003205c7006d044b003205c7006d
044b003205c700c00473004605c700c004730046063300c004cb00460633
00c004cb0046063300c004cb0046063300c004cb0046063300c004cb0046
04e300be038dff4004e300be038dff4004e300be038dff400556ff8c0400
0028031dffb80239002d05c7006d0400003205c700c00473004605c700c0
0473004605c700c00473004605c700c00473004605c700c0047300460000
00be000000be000000be000000be04d5ffbf02f4ffeb0758ff80079efff7
056dffb8040e0019056dffb8040e00190639ffbe0471001a04e300be0400
000e04e300b00400ffcd0556ff840400ffa305fc00f60433006305fcffbc
0473001905c7006c038d000205c7006d04000032023e00b10000ffd503e6
ffe6047c00360400001305b8002e0515ffdb040000130512ffd904000013
0556000f05560086038d003605c7ffbe063f002e05120003040000290419
001d0556fff1041200090556ff3005c7008e05a300bc065200190239001e
031dffb80556ffbe0400000c0239000a038dff9306c3005b05c7fe830464
003205c7006d0823006d05cc0032054e002e0400ff0604e3ffc10473ffe5
031dffef04f4ff9602ea00800239ff8b04e300a30239002704e300dd05f8
008905b200c9053a00b403bdff4004e3ffc8031dffeb0453ff5d0453ff9f
03c5ffae03c5ffcf0400000803e5004e0312ffd602f10028040afee601c3
009f02c4009f01fc0014031d00710aaaffb608e4ffb6071d002908e3ffbe
071cffbe0472001e09c7ffbe0800ffbe06ac001a038dfff60556ff8c0400
0028000000f30556ff8c04000028078dff8d05c7002605c7008e0400ff32
05c7008e0400ff960556ffbe0400000c05c7006d0400003205c7006d0400
00320453ff5d03c5ff520239feb60aaaffb608e4ffb6071d002905c7008e
0400ff9607ddffbe0585ff4505c7ffbe0473001a0556ff8c040000280556
ff8c040000280556ffb8038d002d0556ffb8038d002d031dffb80239ffa4
031dffb80239002d05c7006d0400003205c7006d040000320556ffbf031d
00080556ffbf031d002305c700c00473004605c700c0047300460473ffd3
031dffff04e300a30239ffd204b9ff6b0393ff490639ffbe0473001905f1
ffbe053e003c0451001a04e3ffc8031d00050556ff8c040000280556ffb8
038d001005c7006d04000032000000b305c7006d0400003205c7006d0400
003205c7006d0400003204e300be038dff4003bb002e0400002804000028
04000013038d0015038dffad0400002904000029038dfff404a800020348
00110348fffe0461fffe03a900320239feb60400ffac0400ffac04000032
03e2005103a700580473004604730019047300190239000a0239002d0260
ffaf023900020239001e0239ffd304c9001e063900390639003906390014
0473fea40473001a0428ffb604000032055b003205a7003205670032031d
ffe2031dffe2031dffe2031dffb5031dfff80364001a0321005403e8ffaf
03f1ffaf031dffb002a7feb802a7feb80257ffd802a7fed20239ffe40239
ffd60473001e0461001e03eb003c038d000205560003038dfff3030a0007
031d0005031d000503c5ff5203c5ffaa034bffaf034b0064034bffd703b6
ffc005c7006d03e8ffaf03a9fff60400003204a1ffaf0239fe9d0400ffe6
0360ffaf04000027034bffaf034b006405fa0029069f002905fb002904d5
002f042d0027053b00270665feb804c6001e0421001e0420005103d9ffab
024e004b024e004b017effb301af004b01af004501af0045027400260319
007b022bffff0239013f0471015102aa012302aa012602aa016502aa01cf
02aa01cf02320092023200d1048f0050048f0050048f0089048f008902aa
020702aa019202aa00f402aa00a302aaff2802aaffcb02aaffce02aa0057
02aa012902aa00f602aa00f602aa009902aa009902aa009902aaffca02aa
0000030e0105028700ae015b007301e3006e02b80064023200d103100096
0310009603100096031000960310009602aa006202aa006202aaff7e02aa
007b040000f2045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000ff56
0000ff500000ff0d0000ffd7000000330000ff820000fffa0000ffc90000
ffab0000008a0000001f0000feed0000ffd70000ffd70000ffda0000ffc4
0000000a0000010e0000fe930000fe6f0000fe810000fe810000ff7a0000
00a90000feea0000fe810000fe810000fe810000fdd10000fe8e0000ffdf
0000fe160000fe7e0000fe850000fe3a0000ff1b0000ff3b0000fdfa0000
fe2c0000fe2a0000fdb90000fe5e0000fdff0000fe0c0000fded0000fcfe
0000fe1c0000ff010000fec20000fe040000fedd0000fe380000feea0000
fdfa0000fead0000fe1c0000ffe5000000650000fef40000ffbe0000002a
0000ff9c0000ffc40000fef20000fee40000ff5c0000fd110000fec00000
fe810000ff9c0000ffd50000ff9c0000fdff0000fe810000fd1f0000003c
000000460000fe3b0000ff5b0000ff680000ffcd0000ff460000ff420000
ff6f0000ff570000ff220000fe940000ff7a0000ffd40000ff7a0000fefa
02aa019202aaff6302aa002e0419003d0438001a05cc00d506ba000005cc
00d504a10032060d00200487000305c7006d04000000055600a0039b0036
0556000003b5ff7904220026039c001205b40094042d00a106c3ffd90639
ffaf05ac00c10473003d05fcff4d03b4ff9904b8000c04b8000c05930001
0488004f0628005d043f003203a4fffc0314000c04870003045ffffb038d
00360239feb605c7006d037100320371ff970556ffb80639ffbd038d002d
047300460921006d0490005005120028055600120804ffbe0564ffaf0559
ff8c0484ff5c085bffbe06e6ffaf0758ff620572ff620a8cffbe07deffaf
0412ff56031fff2d066600c70558006f05c7006d04000032063500f30448
0039063500f30448003908e4006d0715003206a7001104bd000a0972006d
067400320000fe150921006d0490005005560086038d0028037ffff20000
ff780000ffac0000003c0000003c0000fc2b0000fc4c0639ffbd04730046
0512ffd903a8005904e3ffc30400ff0605f2ffbf040cffdc0412ffcc031f
ffd1056dffb8040e0019069100dc0499003c07f6ffbe0508001a0908ffb8
061c001a05c8006a03fc003005560086038d002104e300a1063900140639
ffbf0473004605fc00f60433006306fc00480473ffe306fc00480473ffe3
031dffb80758ff80079efff7056dffb8040e0018057dff87041bff9e0639
ffbe0471ffad0639ffbe0471001a05fc00f604330063071dffbb057bff9e
02aa00c20556ff8c040000280556ff8c04000028078dff8d05c700260556
ffb8038d002d05c7006c038d00020758ff80079efff70412ffcc031fffd7
0453ffcc03c5ff520639ffbd047300460639ffbd0473004605c7006d0400
003205c7006d04000032053500080352ffe7059100cb038dff40059100cb
038dff40059100cb038dff4005fc00f60433006307c1ffda058d005904e3
002c04000029065f002c05fe0029063a0102057b006e04550102031f006e
071fff8705fcff9e07ddffbe05e1001a05c7008e0400003205b500dd07a9
00140000fe2a000000030000002400000073000000000000fe3e00000063
0000ffb80000ff730000ff840000fe4f000000110000010e0000ffb70000
ff35000000020000000d0000fe6a0000fe8a0000fe400000fde00000fe79
00000063000000240000fe550000005a0000002d0000ff380000fec00000
006500000042000000a3000000a3000000b3000000b30000012f0000010c
000000a30556ff8c040000280556ffcc040000130556ffcc040000130556
ffcc0400001305560086038d003605c7ffb60400002905c7ffb604000029
05c7ffb60400000405c7ffb60400002905c7ffb60400ffd50556ffb8038d
002d0556ffb8038d002d0556ffb8038dff850556ffb8038dffd80556ffb8
038d00100556000002aafeb805c7008e0400ff960639ffbe047300190639
ffbe047300190639ffbe047300190639ffbe0473ff930639ffbe04730019
031dff9c0239ff60031dffb80239002d0556ffbe0400000c0556ffbe0400
000c0556ffbe0400000c04e3ffbe0239ffc604e3ffbe0239ffc604e3ffbe
0239ff1e04e3ffbe0239fed1071dffbb06390014071dffbb06390014071d
ffbb0639001405c7ffbe0473001a05c7ffbe0473001a05c7ffbe04730004
05c7ffbe0473fff305c7006d0400003205c7006d0400003205c7006d0400
003205c7006d0400003204e3ffc30400ff0604e3ffc30400ff060556ffbf
031d00230556ffbf031dffc60556ffbf031dffc60556ffbf031dff140473
ffd3031dffff0473ffd3031dffff0473ffd3031dffff0473ffd3031dffff
0473ffd3031dffff04e300a30239002704e300a30239ffc604e300540239
ff3c04e300390239fedb05c700c00473004605c700c00473002805c7009d
0473fffd05c700c00473004605c700c004730046055600f3038d00390556
007a038d0034071d00fc05560039071d00fc055600390556ff840400ffa3
0556ff840400ffa304e300be038dff4004e3ffc8031dffeb04e3ffc8031d
ff7604e3ffc8031dff8c047300040239002705560039038dff4004000028
02aafeb8046d0032046d0032046d0032046d0032046d0032046d0032046d
0032046d00320556ff8c0556ff8c05bafff005bafff00556ff8c0556ff8c
0556ff8c0556ff8c03480011034800110348001103480011034800110348
0011061e005e061e008007ae006807ae00af07ae006807ae00af04640032
046400320464003204640032046400320464003204640032046400320701
005e07010086084c0068084c00af084c0068084c00af084c00e3084c00e3
0239002d0239002d023900040239002d0239002d0239002d0239002d0239
002d03e5005e03e5008005750068057500af05750068057500af057500e3
057500e3040000320400003204000032040000320400003204000032068f
00c2068f00eb081f0068081f00af07570068075700af03eb004903eb0049
03eb004903eb004903eb004903eb004903eb004903eb0049060f00eb073b
00af073b00af073b00e305c9003b05c9003b05c9003b05c9003b05c9003b
05c9003b05c9003b05c9003b06c000b606c000b608500068085000af0788
0068078800af078800e3078800e3046d0032046d00320348001103480011
04640032046400320239002d0239002d040000320400003203eb004903eb
004905c9003b05c9003b046d0032046d0032046d0032046d0032046d0032
046d0032046d0032046d00320556ff8c0556ff8c05bafff005bafff00556
ff8c0556ff8c0556ff8c0556ff8c04640010046400100464001004640010
046400100464001004640010046400100701005e07010086084c0068084c
00af084c0068084c00af084c00e3084c00e305c9003b05c9003b05c9003b
05c9003b05c9003b05c9003b05c9003b05c9003b06c000b606c000b60850
0068085000af07880068078800af078800e3078800e3046d0032046d0032
046d0032046d0032046d0032046d0032046d00320556ff8c0556ff8c0556
ff8c0556ff8c0556ff8c02aa018a02aa002e02aa018a02aa00b602aa00b9
046400100464001004640010046400320464001006820090068200660765
0090076500660639ffbe02aa00cc02aa00cc02aa01470239002d0239002d
0239fff60239fff60239002d0239002d031dffb8031dffb80449009004ad
00ca02aa011302aa011302aa014703eb004903eb004903eb004903eb0049
041fff60041fff6003eb004903eb004904e300be04e300be05ab009005ab
006605ab008702aa004602aa004602aa00f405c9003b05c9003b05c9003b
05c9003b05c9003b075700f4068f00ca078800f406c000b605f8ffee02aa
019202aa01b304e2007105560086055600860639001405c7ffbe08f6ffbf
071d00590556ffbe04e300a3095bff9e0400ffad04c10066000000460000
00460000003c000000460239000a0239feb60400ff6404e3ffc304000029
0239ff3a0473001a0239ffc50473ff990473ff9902aaffe902aaffea02aa
002402aa003402aaffd002aa006302aaffbb02aa000302aaff6402aa00d4
02aa019f02aa019102aa000a02aaffef032effa6032effa402aaffb00000
0033000000500000ffd70000fea60000feed0000fee70000fe1a00000050
00000046000000460000fe0a04e3ffc10400ff06034bff5a04b0ff4305c7
000a03e6ffdc03b80032044bffdc044bffdc03d8ffdc031fffd70239ffe6
030cffb10409ffdc0352ffdc054affdc052effdc04000032039effe203f7
001e03f7001e03f7001e05c700000385000a040000430400003203bfffdc
03f1ffaf03e80075031d00140387002703d400080530001e03e6001e0359
004f04ba004f02cbff69031ffff7033600060466ffa60325ffdc0356ff63
04e0ffdc03bfffdc04320046041bff9e03550026049b00200303002b0303
002b035f00330318002103180040035d00a3036f000f01c4002502680045
034c002e02eb002904490039038c004303a60031037600a3034700a302eb
002b0355002c02e400b1038b00e0047201060265006c026500690265006c
038d006c025100540268006c0236006c0236006c0226006c0226006c0249
000f015b003d023a0028039d0055026800550258006c022a006c0258006c
0258006c026affc5018100790263005c028a006f038200550213007802c1
001d025bffd601ff007c0261006c02b0006c024cffee015bffcc01caffcc
0263ffcc0213ffe5025bff4f01ffffe6028cffb602b0ffd5024cff670550
ffc504af00ab0545fff504b2ffb504b8009c0506ffe104ec00ae0533ff85
048fffff0000ff3a0000ff380000ff380400fff104000124047100ef0400
000008000000040000000800000002ab0000020000000155000004000000
02000000019a000000ab00000000000005560086071dffbb054aff5f05e0
004605db002905e100270556ff8c055600860400006d04e3ffbe04e3ffa9
031dffff031dffeb04120013000001cf0000feb60000fe140000003c0000
ffcb041fff0c0556002c055600860556002c04d5ffbf02f4ffeb0000fe54
000000770000fee40292ffaf0000ff38040000130400002902aafeb80639
ffc80473ffd40400fefa031dffc50364ffc1031dffff0239ffc2031dffeb
0400ff73030600550419ffd1063fff630260ffaf0239000a0400ff060387
ffe40461ffe40400001304000029039efeb804c9ff960400000c0239ffab
063900140473001a0400ff06031dff52031dffff0378feb8038d00390400
ffa3031d0005040000280400002804000029038d002d034800110348ff86
038d000202390029038dffa302a7fec70473004603c5ff56026500690207
006c0207002b0249006c0226006c0183ff880183ffac022e001e024e0078
015d0070015d0081015d0033015d0036015dff97015d005e015d003e01fe
003d036c0056036c007a024eff6e024e0055025700270258006c032f006c
01e1002a0183ffa0018300310263005d0286006c0263009f0263009b0213
006101f0005c024e0097024e0097024e000b025800790000feed0000fef9
0000fee10000ffac02aa00520265ffd60236ffe50258ffd702b8ffb80236
ffd705c7008e0556ff8c0473ffe50556008602aaffb9046d0032046d0032
046d0032046d0032046d0032046d0032046d0032046d00320239001c0239
001c0239001c0239001c0239002d0239002d0239002d0239002d03eb0049
03eb004903eb004903eb004903eb004903eb004903eb004903eb00490239
002d0239002d0239002d0239002d03eb004903eb004903eb004903eb0049
03ba00750556ffcc05c700600556ff7d0556ffb8038d002d0400fff00239
feb60647006d040000270556ffbf031d000304e300b0038dff40038d0001
038d0036038d00010239001e04d5ffbf02f4ffeb0556ff840400ffa30556
ff840400ffa30412000903370012057dff87041bff9e0000ffbe0000ffb5
0000ffdc0000ff950000ff540000ff330000fe92000000330000fe1a070a
002603d8ffdc038d000104e3ffbe0239fff504e3ffbe04e3ffc30556003e
040000280239ff7e0639ffbe047300190556ffbe0400000c04e3ffc8031d
ffeb038dfffa056affbe03a2001a04ae00390000006a000000a600000027
0000000a0000ffa70000fe6e023900290645ffbb05c7ffbe064500670000
fec10000fef00000fed40000fedf0000fecc0000fed60000fea30000feeb
0000fee20000fea30000fe8305c7006d04000027071d00fc0556003905f0
ffb80000ff700658006d04480039078100fc0634003902aa007f02ff0055
023900ec02390138040000990400009902aa014e02aa014a02aa00be02aa
ff6204e3009a0400005803dc004702c7ffca037dffd30364ffb003a7ffc7
038affe803f3004e03a3006203cc003a03da0003040000710323ffc703cf
ffe703b3fffb0400003403c0002e0400007b03a400b80400004c04000057
0239002904c9feb806bafeb806bafeb8044efe910695feb80439ffb90408
ffd3044c006204aaffbb03c3ffbb038dffbb04a6006204f4ffd3025effb9
035c00040483ffc703baffc40585ffbb0485ffc404fc005c0412ffc504fc
005c046affc503aa000003b8005c048b0087043b00b6062300c10431ffb7
0431008d0452ffcf0587ffb10606005c03baffc404fc00250412ffcb04aa
ffbb0484ffa30439ffb90439ffb90439ffb90439ffb90439ffb90439ffb9
044c006203c3ffbb03c3ffbb03c3ffbb03c3ffbb025effb9025effb9025e
ffb9025effb90485ffc404fc005c04fc005c04fc005c04fc005c04fc005c
048b0087048b0087048b0087048b00870431008d0439ffb90439ffb90439
ffb9044c0062044c0062044c0062044c006204aaffbb04aaffbb03c3ffbb
03c3ffbb03c3ffbb03c3ffbb03c3ffbb03c3ffbb04a6006204a6006204a6
006204f4ffd304a6006204f4ffd3025effb9025effb9025effb9025eff91
025effb90562ffb9035c00040483ffc703baffc403baffc403baffc403ba
ffc40485ffc40485ffc40485ffc404d1ffd304fc005c04fc005c04fc005c
046affc5046affc5046affc503aa000003aa000003aa000003aa000003aa
000003b8003503b8003a03b8005c03b8005c048b0087048b0087048b0087
048b0087048b0087048b0087062300c1062300c1062300c1062300c10431
008d0431008d0431008d0452ffcf0452ffcf0452ffcf0439ffb90587ffb1
04fc00250439ffb90408ffd3038dffbb038fffab03c3ffbb0452ffcf04f4
ffd304fc005c025effb90483ffc7043bffb50585ffbb0485ffc403e9ffdc
04fc005c04f4ffd30412ffc503e1ffcf03b8005c0431008d055c00530431
ffb7050000bb04d9ffdb0439ffb903c3ffbb04f4ffd3025effb904fc005c
04d9ffdb0431008d025effb90431008d03c3ffbb04fe0049038dffbb0456
006203aa0000025effb9025effb9035c00040618ffc50627ffd304e10049
0473ffc70450006e04e1ffd30439ffb90412ffc80408ffd3038dffbb0464
ff4803c3ffbb061fff980366ffd304dfffd304dfffd30473ffc70499ffc5
0585ffbb04f4ffd304fc005c04f4ffd30412ffc5044c006203b8005c0450
006e055c00530431ffb704e3ffd3047100a506d1ffd306d1ffd304a6005c
063effc80412ffc80448002506f9ffd30481ff8a0377ffbb02ba00aa02ba
00d902ba009502ba00a002ba00b502ba00bf02ba00b402ba010602ba00cb
02ba005a02bafff602ba002502baffe102baffec02bafff702ba000b02ba
000002ba005c02ba001702baffa604bf00310820ffba0820ffba0820ffba
0820ffba0820ffba0820ffba0820ffba06dc003205c9008805560086076a
003206fc003206fc003206fc003206fc003206fc0032063f003205e2008e
07c6ff9504bd003204bd003204bd003204bd003204bd0032050500280705
003204f1ffce04f1ffce0a53ffba08f0ffba08f0ffba0639006d0639006d
0639006d0639006d0639006d0639006d06390059063900590683003205db
006d0753003204aaffda04aaffda0587002806de003206de003206de0032
06de003206de00320608003207e0003206a9ffba055a00a0055a00a0055a
00a0053affc8053affc8079600400820ffba0820ffba0820ffba05c90088
05c9008805c9008805c90088076a003206fc003206fc003206fc003206fc
003206fc003205e2008e05e2008e05e2008e05e2008e07c6ff9507c6ff95
04bd003204bd003204bd003204bd003204bd0032050500280705003204f1
ffce04f1ffce0523ffce04f1ffce08f0ffba08f0ffba08f0ffba0639006d
0639006d0639006d07530032075300320753003204aaffda04aaffda0473
ffd30473ffd30587002805870028058700280587002806de003206de0032
06de003206de003206de003206de003207e0003207e0003207e0003207e0
0032055a00a0055a00a0053affc8053affc807050032083800a308f00028
049effbe0375003204ed009b042d00ac06390058052e004205a6ffbe0400
00a20400000d0473ffa307f1ff8705d9ff9e06dbffc30572ff0607b3ff7a
058dff820556ffbe043d001b0805ff8705a4ff9e08c3ffbe05f8001a0639
ffb80473001a05fcffbc0473001902aafeb802aafeb8041900250763ffb8
0441001e0488006d03d600320535ffdc03a9fee7071dffbb055600fa0658
002d0488002d031dffd50400003203d8000d017efee7035900c60473ffd3
04e3ffc80239ffab0400ff9605dd00c705a5ffaa060c00be0616004f0587
00c705bd0027050fffb60590ffa90721ffa9062b005c055effb60480ffb6
07d6ffb605d500ac0588010e04adffce05a500550616004f05c1003106b6
00c805860071060400e50587008d05a6ffa9058600d70692004605ad001a
067cffa905a600c705fd0056051e00530571ffa9056e0067047dffb60728
00ae065fffaf062a00b107520080019900da01fe00d8019e008101620068
01a80097026c0057047501d9063d003f044cff20042e0022047c001a0422
0034040d002203abfffd047dff9d0596ff20041e002d0478ff16024aff9e
0661ff1604190032042b002f0467000f044300190465001a043c0018047d
0043023afea90466003102ffff250481001a022eff13063e004403a3ff8a
0477001a047b003e0460004306410042047dff2003f7ffc0031d001a0641
0042044cff1f0429003405a5001804d800330239005202f400bf077a0045
077a00450616005108e300430888004308de004308c600430ac700430000
fee40305ff7b038300ab0419fff50407ff85000000770000ffc80400ff88
0400fff00639feea0471fea10a9bff150894002e05fcff99042cff35057d
ff87041bff9e052a001f05dfffac0482feb80543ffff02aa000d02aa000d
02cd00ad02aa00af055500af0200009b0800000008000000080000000800
00000800000008000000080000000ab700340240011f046b0151047100b4
027fffa00800017e07a7ff8907a70106027fffa00782004e02aaffff02aa
ffc502aaff1d073800b505f100b50639007103a300620400006404000096
04000075040000570266000107a7ff89040000b80400002e048f002707a7
ff810400008604000036061800ef040000340493009602a1005206d10036
051d00be02a1005201c70000000000000800000008000000080000000800
000008000000080000000800000008000000080000000800000008000000
08000000080000000800000005cc0024026600b1015d00810266006a0266
008c026600bd026600e602660094026600bd0266009f0266009f0266009f
0199003e0199ff75026600180266fff00266ffdd0266ffe80266fff30266
000402660025026600530266000902660025026600080266000802660008
019900000199ff3402abffce0266ffce0155ffd203bcffcc02abffd80266
ff2a01deffbe0155ffde06da009906c0009905c70083085800b405b70049
07670099046600650535002e07e700b40414ff7e073fffcb07e700530639
005d04730019047300190581ffac046d003405aafffe066c001e05c7004f
05fa006e05ec003004e3006606390082076a002c065c006905c7005805c7
00260556ffbf0799003209920093055600f30556003503c5ff5206680073
05b50014027b00420556ffbe0556ff8c076a0072052b00740314fff204ec
003a0581ffea055e000808ecffef033fffff052f008c04840030039c0029
0492004b029d004807dd00a009ba003a0462004103be00350517005b0639
005b05d6005d063900a404e3006604e300660556fffe05c7ffb604000029
038d002d023900290239feb6059d006606aa008b071200360ab9ff9c0600
00790600007907b8007906000079060000650600006f0600006a06000079
0600008c03ac0079031dffb805faffb808d7ffb8084fffb8055600f30874
00f30a5300f30ac700ca0880ffb80556ff8408a1ff840a3bff8404e3ffbe
0556008605c7ffb6071dffbb02390029044600290653002905c20029038d
003905c7003907d4003909e10039063c00290400ffa3063bffa30848ffa3
0239001e038d003604000029063900140858007805c7ffb608580078053c
001e059200860587005c060dffb6090b0078060000b102aa011402aa0114
02aa011402aa00de02aa011402aa00de037500de037500de035c00a2035c
00a2035c00dc035f00c2035f00c2035f00c206b500320000fc000000fc00
0000fbff0200ffa9046400610556008705560087048f0050040000220400
006402aa000d048f0027035f0028035f0028048f0027048f002702aaffc5
02aaffe102aa00c202aa00e002aaffc502aaff1d05f4002105f4ffce0461
00670461ff1904930096049300960493009604dc00340400013402aa01af
02d600710200009b020000070200005b0200fffc02aa0052040000b10400
00e00400ffec040000710800ffed0800ffed020000000239ffca0239ffa4
0556008602aaffdd0200ffe50400001404000090040000910225ffd901c4
0052022500fd01c401200639ffbe04730019067e00a3050c00270412000a
0412ff9203a0004203a0ffca048b0042048bffca038dffbb03aa000008bc
ff8c05f50003089bff8c05f50003082eff8c061700030749ff8c05900003
0749ff8c059000030749ff8c0590000305560065038dfffa0556ffbe0400
000c0556ffbe0400000c0556ffbe0400000c060f00ea032600ab04e3ffbe
0239001e05c7ffe60400ffc20672006d04630032097d006d0647003204e3
ffc30400ff060583001104faff4306d700d6067b006505c7006d04000027
0660006d04c00027056500be03f2006d04bc000803e9ffd30556004c038d
ff73071d00fc05560039043f002c0403001104e3ffc10400ff0604e3ffc1
0400ff060497ff140374ff2a038300190383ffa1049affc6049aff4c0400
00570400ffdf027d006b055b0029037900220765001405a7001a03640023
0595ffc505e0002703d9ffae05c7006d040000340435ff3f031dffb60416
0031040cffd7040cff5f04e300e00239001e0630ff3f0473ffa60435ff3f
031dffb605200086035000360639011d03ea007305c7ffbe0473001a0556
0008038dffde038d00360473001905ec000e053dffc60556ff3002aafeb8
064e0050045e003205fa005004290032064e0050046b003205c7ffec0400
ff960556ffbe0400ffa705c7ffbe0473ffc70556ffbf031dffd60473ffd3
031dffff06b100360412ffcc06580037057b00560556ffe604e3ffbd0400
00190594ff470556ff4d0419ff54079b006b05c9003b0574ffe403c70037
03c9006c063900500556011404e3009f071dffbb031dff39091aff8c0477
ffd00598001303780020038dffc604b0000002aafeb80400ffd50322003c
029e000102790050062800140443001a0427001903faffea03faffea0400
00320601003205c7002405c7002406470032064700320441ffe20489ffc5
02ea0023042b00230392ffdd0520ffdd0395002f04fd002f02a7feb80473
00450473001e0639003c063900280473000c03b8ff5103b2ff1103b2fece
0400ffa30400fe8a0400fe8a0400fe7d038dff4002aa00830292004b01f1
008801f100a1029f0056058d003b059fffaf05af003606700046044f0047
04d9ffdb0556ffcc04e3ffd700>
<000000000000007600000076000000760000007600000076000000760000
0076000000760000007600000076000000c8000000c8000000c8000000c8
000000c8000000c8000000c8000000c8000000c8000000c8000000c80000
00c8000000c8000000c8000000c8000000c8000000c8000000c8000000c8
000000c8000000c8000000c8000000c8000000c8000000c8000000c80000
00c8000000c8000000c8000000c8000000c8000000c8000000c8000000c8
000000c8000000c8000000c8000000c8000000c8000000c8000000c80000
00c8000000c8000000c8000000c800000258000002580000025800000258
000004660000046600000466000004660000046600000466000004660000
046600000466000004660000046600000466000004660000046600000466
0000046600000466000005ba000005ba000005ba000005ba000005ba0000
05ba000005ba0000077e0000077e0000077e0000077e0000077e00000994
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe00000afe00000afe00000afe00000afe00000afe00000afe
00000afe00000afe00000afe00000afe00000afe00000afe00000afe0000
0afe00000afe000100000dfa00f2003c0091000600020010002f00560000
04a50209000400020000000e00ae0000000300000000021a000000000003
000000070076021a0001000000000000010d029000010000000000030023
039d0001000000000004002303c00001000000000006002303e300010000
00000007003b04060003000104090000021e04410003000104090001002c
065f0003000104090002000e068b00030001040900030046069900030001
04090004004606df00030001040900060046072500030001040900070076
076b00a90020003200300031003700200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064002e0020000d000d004800650062
0072006500770020004f00700065006e00540079007000650020004c0061
0079006f007500740020006c006f00670069006300200063006f00700079
00720069006700680074002000a900200032003000300033002000260020
0032003000300037002c002000520061006c00700068002000480061006e
0063006f0063006b002000260020004a006f0068006e0020004800750064
0073006f006e002e002000540068006900730020006c00610079006f0075
00740020006c006f00670069006300200066006f00720020004200690062
006c006900630061006c0020004800650062007200650077002000690073
0020006f00700065006e00200073006f007500720063006500200073006f
00660074007700610072006500200075006e006400650072002000740068
00650020004d004900540020004c006900630065006e00730065003b0020
00730065006500200065006d0062006500640064006500640020006c0069
00630065006e007300650020006400650073006300720069007000740069
006f006e00200066006f0072002000640065007400610069006c0073002e
00540069006d006500730020004e0065007700200052006f006d0061006e
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e002ea920
3230313720546865204d6f6e6f7479706520436f72706f726174696f6e2e
20416c6c205269676874732052657365727665642e200d0d486562726577
204f70656e54797065204c61796f7574206c6f67696320636f7079726967
687420a92032303033202620323030372c2052616c70682048616e636f63
6b2026204a6f686e20487564736f6e2e2054686973206c61796f7574206c
6f67696320666f72204269626c6963616c20486562726577206973206f70
656e20736f7572636520736f66747761726520756e64657220746865204d
4954204c6963656e73653b2073656520656d626564646564206c6963656e
7365206465736372697074696f6e20666f722064657461696c732e454c4e
4b494b2b54696d65734e6577526f6d616e50532d426f6c644974616c6963
4d54454c4e4b494b2b54696d65734e6577526f6d616e50532d426f6c6449
74616c69634d54454c4e4b494b2b54696d65734e6577526f6d616e50532d
426f6c644974616c69634d5454696d6573204e657720526f6d616e206973
20612074726164656d61726b206f6620546865204d6f6e6f747970652043
6f72706f726174696f6e2e00a90020003200300031003700200054006800
650020004d006f006e006f007400790070006500200043006f0072007000
6f0072006100740069006f006e002e00200041006c006c00200052006900
67006800740073002000520065007300650072007600650064002e002000
0d000a000d000a0048006500620072006500770020004f00700065006e00
540079007000650020004c00610079006f007500740020006c006f006700
69006300200063006f0070007900720069006700680074002000a9002000
320030003000330020002600200032003000300037002c00200052006100
6c00700068002000480061006e0063006f0063006b002000260020004a00
6f0068006e00200048007500640073006f006e002e002000540068006900
730020006c00610079006f007500740020006c006f006700690063002000
66006f00720020004200690062006c006900630061006c00200048006500
620072006500770020006900730020006f00700065006e00200073006f00
7500720063006500200073006f0066007400770061007200650020007500
6e00640065007200200074006800650020004d004900540020004c006900
630065006e00730065003b002000730065006500200065006d0062006500
640064006500640020006c006900630065006e0073006500200064006500
73006300720069007000740069006f006e00200066006f00720020006400
65007400610069006c0073002e0045004c004e004b0049004b002b005400
69006d00650073004e006500770052006f006d0061006e00500053005200
6500670075006c006100720045004c004e004b0049004b002b0054006900
6d00650073004e006500770052006f006d0061006e00500053002d004200
6f006c0064004900740061006c00690063004d00540045004c004e004b00
49004b002b00540069006d00650073004e006500770052006f006d006100
6e00500053002d0042006f006c0064004900740061006c00690063004d00
540045004c004e004b0049004b002b00540069006d00650073004e006500
770052006f006d0061006e00500053002d0042006f006c00640049007400
61006c00690063004d005400540069006d006500730020004e0065007700
200052006f006d0061006e00200069007300200061002000740072006100
640065006d00610072006b0020006f006600200054006800650020004d00
6f006e006f007400790070006500200043006f00720070006f0072006100
740069006f006e002e00410c005403d302c9001d001f03d303d303d203d1
003c001f03d1b2061d1fb903ca03c9b2351f00411503c2003003c2004003
c200a003c200b003c20005008003c0009f03c000af03c000cf03c00004ff
c003c0b345453240b803c0b32b2e3240b803c0b2282932b9ffc003c0b21a
2632bd03c002c80027001fffc003beb2161b32b9ffc003bdb2424232b9ff
c003bdb2363832b9ffc003bdb32a2d32df410a03bd00ef03bd000203bd03
be0028001fffc003beb3282e32f0b803beb5019006900702b9ff8002c8b2
313340b802c8b31c333210411b02c8006002c8007002c80003000f02c800
af02c8000200b002c800e002c80002005f02c800a002c80002002f02c800
3f02c8004f02c840a8030100000340cd383b32404d383b32a41fb41fc01f
d01fe41f05501f641f741f841f04041f141f241f341f441f05e41ff41f02
ab1fbb1fcb1f03cfcddbcd028bcd9bcdafcdbfcd04cdcdcd4ddb4d028b4d
9b4dad4dbd4d044d4d377f047f05027f027f03020f0301cf03df03ef03ff
03048f039f03af03bf03044f035f036f037f03049f02af02bf02cf02049f
03af03bf03cf03045f036f037f038f03041f032f033f034f03047f411e03
660001006f03660001005f03660001004f03660001003f03660001002f03
660001001f03660001000f0366000100ff0366000100ef036600010366b2
21370f412402dd0001005f02dd009f02dd00df02dd0003002f02dd003f02
dd006f02dd0003009f02c900df02c90002000f02c9001f02c9003f02c900
5f02c9000402dd02dd02c902c902c802c840140100010100090102000800
17170000001211084041110286019e003f000d013d003f000d0116003f00
0d026f0083000d02170083000d0174b7830df3830d76830d410d02350024
000d02180024000d02030024000d01610024000d01134017240da6240d95
240d82240d6f240d5b240d46240d22240d410d0249001e000d020e001e00
0d01c1001e000d01a3001e000d0178401d1e0df61e0df11e0de21e0ddd1e
0dce1e0d751e0d701e0d651e0d521e0dbb02140037000d01a0400b370dfb
370d2d370d1d370db80215b40f440f0009bb02150044000d023cb24d1d1f
b8023ab24d1f1fb80237b24d2a1fbc0232004d0201001f022eb21f931f41
09022c001f0125001f022b001f0156001f022ab21f931f410d0228014000
79001f021f016d0156001f021e00330401001f021db233e41fb8021bb233
411fb80216b2212d1fb801c3b24d1e1fb801bfb24d931fb801beb24dcd1f
bc01bb004d0201001f01b7b21f671f410d01b601400089001f01b2003604
01001f01b10036019a001f01b0b236bb1fb801afb236ab1f410901ad016d
0067001f01ac016d0072001f01a6b2212c1fb801a5b221351fb801a4b221
3b1fb801a2b2215e1fbc01a100350201001f017bb24d931fbc0179004d04
01001f0176b24dcd1f41150175001f0125001f01730140006c001f017000
36019a001f016f00360125001f016b00330401001f0169b233811f410901
6600210125001f0163003b0125001f0147b24d221f410d0143001f010100
1f013b003302ab001f013a00330101001f0139b233341fb80136b2212e1f
bc013300210401001f0132b23bab1fbc011f01400081001f0119b2212d1f
b80117b221471fb80111b235cd1fb80108b24d791fb80106b21fab1fb801
05b236721fb80100b721471ff51fe41ff4b90140080140131fef332c1fee
212e1fed214c1fe04dcd1fdf4db80101b21fdc1fb80125b51fdb1fcd1fda
b901400801b61fd936891fd621b80156b21fd53bb80156b21fcd4db80156
b21fcc4dbb0101001f00ca0140b29e1fc9b9016d0156b21fc733b8080140
0b1fc2333b1fc133381fbe21b80125b21fbb3bbb0801001f00b3016db29e
1fa7b80140b76c1fa321cd1fa235b8019a400f1fa13bab1f99215e1f8c35
e41f841fb80401b61f8121381f7f21b80125b61f7b334c1f7935b8019ab6
1f714d271f6e3bb80101400f1f664d4a1f6321891f6033521f5a3bbb019a
001f0058016db2721f57b9016d0801b51f55212e1f4fb80140b76c1f4c36
9e1f4b35b80401b21f493bb80201400b1f483bcd1f45212a1f433bb80125
40161f424d521f414dcd1f4033891f39366c1f2e21301f2cb80140b2791f
2bb901400401b61f2833e41f2735b8019ab21f5537bc0257000701d60007
0187402e07de07a8079e0756073e07340730072907260725072007140812
0810080e080c080a080808060804080208000814b8ffe0402c0000010014
061000000100060400000100041000000100100200000100020000000100
0002010802004a009fbd028600af028600bf02860003b013034b024b5342
b0372b4bb807ff52b0382b4bb007505b58b101018e59014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b544218b0382bb00288b8
01005458b801ffb101018e851bb0124358b900010139858d1bb90001013c
858d595901b0372b730016763f183f123e113946443e113946443e113946
443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b18
2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b53
58b0ff1d594bb02753205c58b9028802864544b90287028645445958b901
240288455258b9028801244459594bb03053205c58b9016d02884544b902
88028845445958b90162016d455258b9016d01624459594bb04353205c58
b9001f02874544b9004d028745445958b9025e001f455258b9001f025e44
59594bb8012553205c58b9003602884544b9003a028845445958b9089700
36455258b9003608974459594bb8040153205c58b90140003a4544b13a3a
45445958b91ee00140455258b901401ee04459594bb00c53205c58b13b3b
4544b1333b45445958b1123b455258b13b124459594bb03153205c58b13b
3b4544b1213b45445958b1503b455258b13b504459594bb03953205c58b1
3b3b4544b1353b45445958b15d3b455258b13b5d4459592b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b45695342014b5058b108004259435c58b1080042591610703eb0
124358b911a63d851bba011b03d9000b2b59b00a2342b00b2342003f3f18
2b103c012f4bb00d5458b90001ffb038594bb00c5458b90001ffb0385906
0cb0062342b0072342b0124358b93b21187e1bba040001a8000b2b59b00c
2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b0
0f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342
00184569444569441845694473737373742b454474747575757575757575
00757575757474747573732b45186944747445186944747474747575752b
2b0000454445447373737475002b2b73752b2b732b2b2b2b2b2b2b2b2b75
732b002b2b4569442b2b000000>
[2815 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 118 10 <0001013f02d20284056b000a0024b9000101d5b4050308cc02b80399b201
190bb80122b169182b4e10f44df4ed003fed313001231336363332161514
07016f3005017c56303d4402d2017e8f8c3b2b387c00>LAAAAA+TimesNewRomanPS-BoldItalicMT AddT42Char 
2 1918 88 <00010046ffe40424039f003301784086124217015401590c022201240e23
18222b390b34354701470e5a0a5a206a0a6a207b0a7b2099009b0a960ea9
00aa0aa60ea927ba1cb72bd60ed410e90be40f1b3035010b0a00181d0a10
1804181310171a030c0720001a0a201e1f0b040c1d18d317a410322a315f
316f3102317e2b0d1010361d0c140c40140c3f1d1d0c0300002b2b28142b
b8fff1401e160d3f2b18140c3f2b2b28173f179017a0170317a71a31d332
7e3333000cb803b140170d00070d0607c825251a0b281d34280c1d2b2810
10a71db8032a401003a728ba341d1728171d28340a23e8182b2b103c3c2b
2b10f6edf4ed2b103c103c2b10c0c0003f3c10ed3f3f10e4103c10f4ed7a
10e95d182f87052e012b2b2b0e7d10c4870e2e012b182b057d10c4017a10
f85d182fe410f6ed111217392b1112391112391112390039393130015d71
5d72005d01435c58b52018160d3f22b8ffe2b313143e10b8ffe2b2133901
b8ffecb30f103e2ab8ffe2b30f103e0eb8ffe2b20f113e2b2b2b2b2b2b59
010306151417163332373637133703061514163332373637170623222635
343737060706062322263534371336353426262337250220c20e07080b2e
4d6e795bfdc0180f080e0d243b228ba73e471931823b5a7b38354d19711c
1025320a0155039ffd582f120905085277df013209fd6c540c08110c1d58
18fb3f333653a9bd4263424e3c3356019062220f170d263b>LAAAAA+TimesNewRomanPS-BoldItalicMT AddT42Char 
2 0 0 <0002011c0000051c050000030007004db10201bb010f000600070272b200
0504b8010fb403000a0704b8010fb5010019080605bf010f000200030144
00090120012b00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>LAAAAA+TimesNewRomanPS-BoldItalicMT AddT42Char 
LAAAAA+TimesNewRomanPS-BoldItalicMT /CharStrings get begin
/quotesingle 10 def
/u 88 def
end
LAAAAA+TimesNewRomanPS-BoldItalicMT /Encoding get
dup 39 /quotesingle put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/DYIULI+TimesNewRomanPS-BoldItalicMT /LAAAAA+TimesNewRomanPS-BoldItalicMT findfont ct_VMDictPut
/DYIULI+TimesNewRomanPS-BoldItalicMT*1 
[39{/.notdef}rp /quotesingle 77{/.notdef}rp /u 138{/.notdef}rp]
DYIULI+TimesNewRomanPS-BoldItalicMT nf
DYIULI+TimesNewRomanPS-BoldItalicMT*1 [9.388 0 0 -9.388 0 0 ]msf
212.511 205.728 mo
(u')
[5.21222 0 ]xsh
DYIULH+TimesNewRomanPS-BoldMT [6.7056 0 0 -6.7056 0 0 ]msf
221.383 202.035 mo
(\000\025)sh
DYIULH+TimesNewRomanPS-BoldMT [9.388 0 0 -9.388 0 0 ]msf
224.774 205.723 mo
(\000\022\000\025)
[2.61172 0 ]xsh
DYIULC+ArialMT [9.388 0 0 -9.388 0 0 ]msf
136.555 135.688 mo
(\0007\000X\000U\000E\000X\000O\000H\000Q\000W\000\003\000N\000L\000Q\000H\000W\000L\000F\000\003\000H\000Q\000H\000U\000J\000\\\000\003\000S\000H\000U)
[5.40552 5.21027 3.1167 5.21027 5.21027 2.07468 5.21027 5.21027 2.60043 2.46246 4.68454 2.07468 
5.21027 5.21027 2.6004 2.07471 4.68454 2.6004 5.21027 5.21027 5.2103 3.11667 5.21027 4.68454 
2.49915 5.21027 5.21027 0 ]xsh
123.214 145.893 mo
(\000X\000Q\000L\000W\000\003\000W\000L\000P\000H\000\003\000F\000D\000V\000F\000D\000G\000L\000Q\000J\000\003\000G\000R\000Z\000Q\000\003\000W\000K\000U\000R\000X\000J\000K\000\003)
[5.21414 5.21414 2.07854 2.60428 2.53667 2.60428 2.07855 7.81453 5.21414 2.53668 4.68842 5.21411 
4.68842 4.68842 5.21414 5.21414 2.07855 5.21414 5.21414 2.49911 5.21414 5.21414 6.77255 5.21414 
2.53665 2.60428 5.21414 3.12054 5.21414 5.21414 5.21414 5.21414 0 ]xsh
115.357 156.022 mo
(\000D\000O\000O\000\003\000Z\000D\000Y\000H\000\003\000Q\000X\000P\000E\000H\000U\000V\000\003\000L\000Q\000\003\000W\000K\000H\000\003\000L\000Q\000H\000U\000W\000L\000D\000O\000\003\000U\000D\000Q\000J\000H\000\003)
[5.215 2.07941 2.07942 2.60513 6.77341 5.215 4.68927 5.215 2.53668 5.21497 5.21503 7.8154 
5.215 5.215 3.1214 4.68927 2.46246 2.07941 5.215 2.60516 2.6051 5.21503 5.21497 2.53668 
2.07941 5.215 5.215 3.1214 2.60516 2.07941 5.215 2.07941 2.49911 3.12903 5.21497 5.21503 
5.21497 5.21503 0 ]xsh
306.436 148.35 mo
306.659 148.35 li
306.958 148.387 li
307.292 148.425 li
307.888 148.573 li
308.187 148.686 li
308.447 148.797 li
308.745 148.909 li
309.006 149.057 li
309.304 149.244 li
309.788 149.579 li
310.31 150.027 li
310.794 150.473 li
311.242 150.995 li
312.135 152.187 li
312.955 153.528 li
313.328 154.274 li
313.7 155.056 li
314.035 155.876 li
314.371 156.732 li
314.669 157.589 li
314.967 158.521 li
315.489 160.458 li
315.712 161.464 li
315.935 162.507 li
316.121 163.587 li
316.308 164.668 li
316.457 165.785 li
316.569 166.94 li
316.68 168.095 li
316.793 169.287 li
316.83 170.479 li
316.867 171.708 li
316.867 172.938 li
314.892 172.938 li
314.855 171.745 li
314.818 170.591 li
314.78 169.436 li
314.669 168.281 li
314.594 167.163 li
314.446 166.046 li
314.296 165.003 li
314.148 163.923 li
313.961 162.916 li
313.775 161.91 li
313.551 160.942 li
313.29 160.01 li
313.03 159.117 li
312.769 158.26 li
312.471 157.44 li
312.173 156.658 li
311.875 155.913 li
311.539 155.204 li
311.204 154.534 li
310.831 153.901 li
310.496 153.342 li
310.124 152.82 li
309.751 152.336 li
309.379 151.926 li
309.006 151.554 li
308.633 151.218 li
308.224 150.958 li
308.074 150.845 li
307.888 150.734 li
307.329 150.511 li
307.143 150.473 li
306.958 150.399 li
306.771 150.399 li
306.622 150.361 li
306.361 150.361 li
.298 1 1 .409 cmyk
f
335.866 223.53 mo
334.823 223.493 li
333.669 223.232 li
332.551 222.859 li
331.433 222.337 li
330.39 221.704 li
329.347 220.884 li
328.341 219.991 li
327.41 218.948 li
326.479 217.83 li
325.547 216.6 li
324.69 215.222 li
323.833 213.769 li
323.05 212.242 li
322.268 210.602 li
321.523 208.851 li
320.816 207.025 li
320.145 205.125 li
319.512 203.114 li
318.916 201.028 li
318.319 198.867 li
317.798 196.669 li
317.314 194.36 li
316.867 192.012 li
316.457 189.591 li
316.121 187.095 li
315.787 184.561 li
315.526 181.953 li
315.302 179.308 li
315.116 176.626 li
315.004 173.906 li
314.892 171.113 li
314.892 168.318 li
316.903 168.281 li
316.903 171.075 li
316.978 173.795 li
317.128 176.514 li
317.314 179.16 li
317.5 181.767 li
317.798 184.3 li
318.096 186.797 li
318.469 189.256 li
318.841 191.64 li
319.288 193.949 li
319.773 196.185 li
320.294 198.383 li
320.853 200.469 li
321.412 202.48 li
322.045 204.455 li
322.679 206.281 li
323.386 208.069 li
324.094 209.745 li
324.839 211.31 li
325.584 212.763 li
326.367 214.142 li
327.186 215.408 li
328.006 216.563 li
328.863 217.606 li
329.719 218.5 li
330.576 219.319 li
331.433 219.991 li
332.328 220.549 li
333.184 220.959 li
334.078 221.294 li
334.973 221.48 li
335.978 221.555 li
f
119.938 52.9415 mo
308.409 148.946 li
307.515 150.734 li
119.007 54.7295 li
.92 .845 0 0 cmyk
f
32.5021 224.052 mo
388.544 224.052 li
388.544 222.189 li
32.5021 222.189 li
cp
0 0 0 1 cmyk
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
[/Pattern [/234444352.0 /234444568.0 /234444784.0 ]]
] del_res
/DYIULE+SymbolMT-Identity-H uf
/DYIULE+SymbolMT /CIDFont ur
/DYIULD+TimesNewRomanPSMT-Identity-H uf
/DYIULD+TimesNewRomanPSMT /CIDFont ur
/DYIULI+TimesNewRomanPS-BoldItalicMT*1 uf
/DYIULI+TimesNewRomanPS-BoldItalicMT uf
/LAAAAA+TimesNewRomanPS-BoldItalicMT uf
/DYIULF+TimesNewRomanPS-ItalicMT*1 uf
/DYIULF+TimesNewRomanPS-ItalicMT uf
/IAAAAA+TimesNewRomanPS-ItalicMT uf
/DYIULC+ArialMT-Identity-H uf
/DYIULC+ArialMT /CIDFont ur
/DYIULG+Arial-BoldMT-Identity-H uf
/DYIULG+Arial-BoldMT /CIDFont ur
/DYIULH+TimesNewRomanPS-BoldMT-Identity-H uf
/DYIULH+TimesNewRomanPS-BoldMT /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
